<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>马攀的技术栈</title>
  
  
  <link href="/cn/atom.xml" rel="self"/>
  
  <link href="https://mapan.tech/cn/"/>
  <updated>2020-05-26T14:11:02.184Z</updated>
  <id>https://mapan.tech/cn/</id>
  
  <author>
    <name>MaPan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常见错误总结(Hive)</title>
    <link href="https://mapan.tech/cn/f7df.html"/>
    <id>https://mapan.tech/cn/f7df.html</id>
    <published>2020-05-26T13:43:42.000Z</published>
    <updated>2020-05-26T14:11:02.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开发中常见错误总结"><a href="#开发中常见错误总结" class="headerlink" title="开发中常见错误总结"></a>开发中常见错误总结</h2><ul><li>1、开发时仔细检查脚本，避免低级错误，比如缺少逗号，有重复字段，脚本文件保存的不是UTF8无BOM，或不是UNIX格式，Tab没有转为空格等；</li></ul><p><img src="/cn/f7df/image-20200526215250522.png" alt="image-20200526215250522"></p><ul><li>2、注意一些Hive性能参数的设置，比如 MapJoin的打开、并行、动态分区的打开，还要防止数据倾斜、迪卡尔积，特别是不要数据倾斜；</li></ul><ul><li>3、Job运行失败并且不出现日志，检查是否是脚本文件名有中文或有空格；</li></ul><ul><li>4、Job运行慢，检查是数据倾斜还是资源不够的原因，如果进度在99％半小时还没动就考虑是数据倾斜了，如果 MapReduce运行进度很均匀但是很慢，要看日志，包括Map的日志和Reduce志和的日志，看每个map或Reduce的start的时间间隔是否很长，如果很长则考虑是资源不够。如果elapsed时间内有很长的 tasks，且时间不均匀，则考虑是数据倾斜了；</li></ul><ul><li>5、在配置任务调度的时候，需要确认被依赖的任务在任务调度平台上是否存在。依赖任务的跑数时间是否满足自己的需求，比如可能会出现上游表本身跑数时间设置比较晚，导致我们的作业等待时间长。</li></ul><ul><li>6、如果正常调度任务显示已完成，但结果表中没有数据，手工下发任务重新跑数后，数据正常。则可以断定任务依赖配置有问题，依赖任务配置少了。</li></ul><hr><p>未完待续</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;开发中常见错误总结&quot;&gt;&lt;a href=&quot;#开发中常见错误总结&quot; class=&quot;headerlink&quot; title=&quot;开发中常见错误总结&quot;&gt;&lt;/a&gt;开发中常见错误总结&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;1、开发时仔细检查脚本，避免低级错误，比如缺少逗号，有重复字段，脚本文件保
      
    
    </summary>
    
      <category term="Hive" scheme="https://mapan.tech/cn/categories/Hive/"/>
    
    
  </entry>
  
  <entry>
    <title>数据质量监控</title>
    <link href="https://mapan.tech/cn/2408.html"/>
    <id>https://mapan.tech/cn/2408.html</id>
    <published>2020-05-24T13:22:27.000Z</published>
    <updated>2020-05-26T13:58:24.228Z</updated>
    
    <content type="html"><![CDATA[<p>数据质量监控，在企业中实际的作用更多的是面对开发人员，例如计算出的结果值出现了明显的异常，一个日常用品的店铺，单个订单金额突破了10万，很明显是异常的订单，虽然有可能真有这样的顾客，但是需要提前预警，以提醒开发人员，这里的数据相比以往变化较大需要核实。否则等业务人员问起来了，一问三不知，很可能要被业务投诉。</p><p>1）单表数据量监控。<br>一张表的记录数在-一个已知的范围内，或者上下浮动不会超过某个阈值。</p><ul><li>SQL 结果：var 数据量 = count（”昨天”（如果设置了时间字段的话）满足“过滤条件”的记录）。</li><li>数值检测：如果数据量不在[数值下限，数值上限]，则触发报警。</li><li>同比增加：如果（（今 天的数据量-上周的数据量）/上周的数据量*100）不在[比例下线，比例上限]，则触发报警。</li><li>环比增加：如果（（今天的数据量 - 昨天的数据量）/昨天的数据量*100）不在[比例下线，比例上限]，则触发报警。</li><li>“阈值配置”的六个数值当中，至少配置-一个阈值.对于没有配置的阈值，不做监控。</li></ul><p>2）单表空值检测<br>某个字段为空的记录数在-一个范围内，或者占总量的百分比在某个阈值范围内</p><ul><li>目标字段：选择要监控的字段，不能选“无”;</li><li>SQL结果：var 异常数据量 = count（”目标字段”为空的记录）;</li><li>单次检测：如果（异常数据量）不在[数值下限，数值上限]，则触发报警</li></ul><p>3）单表重复值检测。<br>一个或多个字段是否满足某些规则。</p><ul><li>目标字段：选择要监控的字段，group by这里的字段列表后，没有重复;</li><li>单次检测：如果（异常数据量）不在[数值下限，数值上限]，则触发报警。</li></ul><p>4）单表值域检测。<br>一个或多个字段没有重复记录。</p><ul><li>目标字段：选择要监控的字段，支持多选。</li><li>检测规则：填写”目标字段”要满足的条件。其中$1表示第一个目标字段，$2 表示第二个目标字段，以此类推。</li><li>阈值配置与”空值检测”相同。</li></ul><p>6）跨表主外键对比</p><ul><li>监控字段和关联字段：需要符合外键约束的两个字段;</li><li>阈值配置与”空值检测”相同。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;数据质量监控，在企业中实际的作用更多的是面对开发人员，例如计算出的结果值出现了明显的异常，一个日常用品的店铺，单个订单金额突破了10万，很明显是异常的订单，虽然有可能真有这样的顾客，但是需要提前预警，以提醒开发人员，这里的数据相比以往变化较大需要核实。否则等业务人员问起来了
      
    
    </summary>
    
      <category term="数据仓库" scheme="https://mapan.tech/cn/categories/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>PostgreSql学习</title>
    <link href="https://mapan.tech/cn/2c3f.html"/>
    <id>https://mapan.tech/cn/2c3f.html</id>
    <published>2020-05-17T01:50:16.000Z</published>
    <updated>2020-05-17T13:21:03.202Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库安装"><a href="#数据库安装" class="headerlink" title="数据库安装"></a>数据库安装</h2><p>生产环境几乎都是在Linux下，所以PostgreSQL就安装到Linux环境下，我的虚拟机是CentOS 7</p><p>直接参考官网的安装教程，打开官网<a href="https://www.postgresql.org/download/linux/redhat/">https://www.postgresql.org/download/linux/redhat/</a></p><p>安装比较稳定的9.5版本</p><ul><li><strong>Install the repository RPM:</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm</span><br></pre></td></tr></table></figure><ul><li><strong>Install the client packages:</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install postgresql95</span><br></pre></td></tr></table></figure><ul><li><strong>Optionally install the server packages:</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install postgresql95-server</span><br></pre></td></tr></table></figure><ul><li><strong>Optionally initialize the database and enable automatic start:</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/pgsql-9.5/bin/postgresql95-setup initdb</span><br><span class="line">systemctl <span class="built_in">enable</span> postgresql-9.5</span><br><span class="line">systemctl start postgresql-9.5</span><br></pre></td></tr></table></figure><h2 id="客户端安装："><a href="#客户端安装：" class="headerlink" title="客户端安装："></a>客户端安装：</h2><p>我选择的是Dbeaver,免费强大，界面友好。官网<a href="https://dbeaver.io/">https://dbeaver.io/</a></p><p>下载社区免安装版，即开即用。</p><p>为了在windows下连接上数据库，踩了两个坑，花了点时间琢磨了一下。</p><p>Win下一直报连接被拒绝，应该是类是mysql中的白名单制，找到配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/lib/pgsql/9.5/data/postgresql.conf</span><br></pre></td></tr></table></figure><p>找到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#listen_addresses = &apos;localhost&apos;    #what IP address(es) to listen on;</span><br></pre></td></tr></table></figure><p>在下面添加一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen_addresses = <span class="string">'*'</span></span><br></pre></td></tr></table></figure><p>保存并退出。</p><p>然后修改pg_hba.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /var/lib/pgsql/9.5/data/pg_hba.conf</span><br></pre></td></tr></table></figure><p>找到如下两行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># IPv4 local connections:</span><br><span class="line">host    all             all             127.0.0.1/32            ident</span><br></pre></td></tr></table></figure><p>在下面添加一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host    all             all             192.168.100.1/24        md5</span><br></pre></td></tr></table></figure><p>保存然后重启postgreSQL服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart postgresql-9.5</span><br></pre></td></tr></table></figure><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><p>postgres用户是postgreSQL的最高权限用户，安装时自动创建的。使用Shell命令行,切换到postgres用户下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su - postgres</span><br></pre></td></tr></table></figure><p>进入控制台</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql</span><br></pre></td></tr></table></figure><p>为postgres用户设置一个密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\password postgres</span><br></pre></td></tr></table></figure><p>输入两次密码即可。</p><p>创建数据库，例如创建mydb,这里就是标准数据库语法了。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASES</span> mytbl;</span><br></pre></td></tr></table></figure><p>更新中…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数据库安装&quot;&gt;&lt;a href=&quot;#数据库安装&quot; class=&quot;headerlink&quot; title=&quot;数据库安装&quot;&gt;&lt;/a&gt;数据库安装&lt;/h2&gt;&lt;p&gt;生产环境几乎都是在Linux下，所以PostgreSQL就安装到Linux环境下，我的虚拟机是CentOS 7&lt;/p
      
    
    </summary>
    
      <category term="数据库" scheme="https://mapan.tech/cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>10道经典Hive题目</title>
    <link href="https://mapan.tech/cn/f9fb.html"/>
    <id>https://mapan.tech/cn/f9fb.html</id>
    <published>2020-05-13T23:14:30.000Z</published>
    <updated>2020-05-21T12:05:11.149Z</updated>
    
    <content type="html"><![CDATA[<p>我有早起的习惯，每天早晨上班前的这段时间脑子非常清醒，这段时间我会用来充实自己。看到某个公众号发了一篇Hive的面试题的推文，顺手拿过来做了下。共计10道题，花了下班后的晚上和一个早晨的时间写完。</p><h1 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h1><p>需求：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">我们有如下的用户访问数据</span><br><span class="line">    userId  visitDate   visitCount</span><br><span class="line">    u01 2017/1/21   5</span><br><span class="line">    u02 2017/1/23   6</span><br><span class="line">    u03 2017/1/22   8</span><br><span class="line">    u04 2017/1/20   3</span><br><span class="line">    u01 2017/1/23   6</span><br><span class="line">    u01 2017/2/21   8</span><br><span class="line">    U02 2017/1/23   6</span><br><span class="line">    U01 2017/2/22   4</span><br><span class="line">要求使用SQL统计出每个用户的累积访问次数，如下表所示：</span><br><span class="line">    用户id    月份  小计  累积</span><br><span class="line">    u01 2017-01 11  11</span><br><span class="line">    u01 2017-02 12  23</span><br><span class="line">    u02 2017-01 12  12</span><br><span class="line">    u03 2017-01 8   8</span><br><span class="line">    u04 2017-01 3   3</span><br></pre></td></tr></table></figure><p></p><p>实现：<br>数据准备：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.test1 ( </span><br><span class="line">        userId <span class="keyword">string</span>, </span><br><span class="line">        visitDate <span class="keyword">string</span>,</span><br><span class="line">        visitCount <span class="built_in">INT</span> )</span><br><span class="line">    <span class="keyword">ROW</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">"\t"</span>;</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test1</span><br><span class="line">    <span class="keyword">VALUES</span></span><br><span class="line">        ( <span class="string">'u01'</span>, <span class="string">'2017/1/21'</span>, <span class="number">5</span> ),</span><br><span class="line">        ( <span class="string">'u02'</span>, <span class="string">'2017/1/23'</span>, <span class="number">6</span> ),</span><br><span class="line">        ( <span class="string">'u03'</span>, <span class="string">'2017/1/22'</span>, <span class="number">8</span> ),</span><br><span class="line">        ( <span class="string">'u04'</span>, <span class="string">'2017/1/20'</span>, <span class="number">3</span> ),</span><br><span class="line">        ( <span class="string">'u01'</span>, <span class="string">'2017/1/23'</span>, <span class="number">6</span> ),</span><br><span class="line">        ( <span class="string">'u01'</span>, <span class="string">'2017/2/21'</span>, <span class="number">8</span> ),</span><br><span class="line">        ( <span class="string">'u02'</span>, <span class="string">'2017/1/23'</span>, <span class="number">6</span> ),</span><br><span class="line">        ( <span class="string">'u01'</span>, <span class="string">'2017/2/22'</span>, <span class="number">4</span> );</span><br></pre></td></tr></table></figure><p></p><p>查询SQL：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">with t1 as(</span><br><span class="line">    select</span><br><span class="line">        userid,</span><br><span class="line">        date_format(regexp_replace(visitdate,&apos;/&apos;,&apos;-&apos;),&apos;YYYY-MM&apos;) as vdate,</span><br><span class="line">        sum(visitcount) as vcount</span><br><span class="line">    from prac.test1</span><br><span class="line">    group by userid,date_format(regexp_replace(visitdate,&apos;/&apos;,&apos;-&apos;),&apos;YYYY-MM&apos;)</span><br><span class="line">)</span><br><span class="line">select</span><br><span class="line">    userid,</span><br><span class="line">    vdate,</span><br><span class="line">    vcount,</span><br><span class="line">    sum(vcount) over (partition by userid order by vdate)</span><br><span class="line">from t1;</span><br></pre></td></tr></table></figure><p></p><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p>需求：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">有50W个京东店铺，每个顾客访客访问任何一个店铺的任何一个商品时都会产生一条访问日志，</span><br><span class="line">访问日志存储的表名为Visit，访客的用户id为user_id，被访问的店铺名称为shop，数据如下：</span><br><span class="line"></span><br><span class="line">                u1  a</span><br><span class="line">                u2  b</span><br><span class="line">                u1  b</span><br><span class="line">                u1  a</span><br><span class="line">                u3  c</span><br><span class="line">                u4  b</span><br><span class="line">                u1  a</span><br><span class="line">                u2  c</span><br><span class="line">                u5  b</span><br><span class="line">                u4  b</span><br><span class="line">                u6  c</span><br><span class="line">                u2  c</span><br><span class="line">                u1  b</span><br><span class="line">                u2  a</span><br><span class="line">                u2  a</span><br><span class="line">                u3  a</span><br><span class="line">                u5  a</span><br><span class="line">                u5  a</span><br><span class="line">                u5  a</span><br><span class="line">请统计：</span><br><span class="line">(1)每个店铺的UV（访客数）</span><br><span class="line">(2)每个店铺访问次数top3的访客信息。输出店铺名称、访客id、访问次数</span><br></pre></td></tr></table></figure><p></p><p>数据准备：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.test2 ( </span><br><span class="line">    user_id <span class="keyword">string</span>, </span><br><span class="line">    shop <span class="keyword">string</span> </span><br><span class="line">)</span><br><span class="line"><span class="keyword">ROW</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">'\t'</span>; </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test2 <span class="keyword">VALUES</span></span><br><span class="line">( <span class="string">'u1'</span>, <span class="string">'a'</span> ),</span><br><span class="line">( <span class="string">'u2'</span>, <span class="string">'b'</span> ),</span><br><span class="line">( <span class="string">'u1'</span>, <span class="string">'b'</span> ),</span><br><span class="line">( <span class="string">'u1'</span>, <span class="string">'a'</span> ),</span><br><span class="line">( <span class="string">'u3'</span>, <span class="string">'c'</span> ),</span><br><span class="line">( <span class="string">'u4'</span>, <span class="string">'b'</span> ),</span><br><span class="line">( <span class="string">'u1'</span>, <span class="string">'a'</span> ),</span><br><span class="line">( <span class="string">'u2'</span>, <span class="string">'c'</span> ),</span><br><span class="line">( <span class="string">'u5'</span>, <span class="string">'b'</span> ),</span><br><span class="line">( <span class="string">'u4'</span>, <span class="string">'b'</span> ),</span><br><span class="line">( <span class="string">'u6'</span>, <span class="string">'c'</span> ),</span><br><span class="line">( <span class="string">'u2'</span>, <span class="string">'c'</span> ),</span><br><span class="line">( <span class="string">'u1'</span>, <span class="string">'b'</span> ),</span><br><span class="line">( <span class="string">'u2'</span>, <span class="string">'a'</span> ),</span><br><span class="line">( <span class="string">'u2'</span>, <span class="string">'a'</span> ),</span><br><span class="line">( <span class="string">'u3'</span>, <span class="string">'a'</span> ),</span><br><span class="line">( <span class="string">'u5'</span>, <span class="string">'a'</span> ),</span><br><span class="line">( <span class="string">'u5'</span>, <span class="string">'a'</span> ),</span><br><span class="line">( <span class="string">'u5'</span>, <span class="string">'a'</span> );</span><br></pre></td></tr></table></figure><p></p><p>查询SQL：<br>(1)每个店铺的UV（访客数）<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    shop,</span><br><span class="line">    <span class="keyword">count</span>(<span class="keyword">distinct</span> user_id) <span class="keyword">as</span> user_cnt</span><br><span class="line"><span class="keyword">from</span> prac.test2</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> shop;</span><br></pre></td></tr></table></figure><p></p><p>(2)每个店铺访问次数top3的访客信息。输出店铺名称、访客id、访问次数<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span>(</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">        shop,</span><br><span class="line">        user_id,</span><br><span class="line">        <span class="keyword">count</span>(user_id) <span class="keyword">as</span> cnt</span><br><span class="line">    <span class="keyword">from</span> prac.test2</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> shop,user_id</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">        shop,</span><br><span class="line">        user_id,</span><br><span class="line">        cnt,</span><br><span class="line">        <span class="keyword">rank</span>() <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> shop <span class="keyword">order</span> <span class="keyword">by</span> cnt <span class="keyword">desc</span>) <span class="keyword">as</span> rk</span><br><span class="line">    <span class="keyword">from</span> t1</span><br><span class="line">) <span class="keyword">as</span> a</span><br><span class="line"><span class="keyword">where</span> rk&lt;=<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p></p><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p>需求<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">已知一个表STG.ORDER，有如下字段:Date，Order_id，User_id，amount。</span><br><span class="line">数据样例:2017-01-01,10029028,1000003251,33.57。</span><br><span class="line">请给出sql进行统计:</span><br><span class="line">(1)给出 2017年每个月的订单数、用户数、总成交金额。</span><br><span class="line">(2)给出2017年11月的新客数(指在11月才有第一笔订单)</span><br></pre></td></tr></table></figure><p></p><p>数据准备:<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.test3 ( </span><br><span class="line">            dt <span class="keyword">string</span>,</span><br><span class="line">            order_id <span class="keyword">string</span>, </span><br><span class="line">            user_id <span class="keyword">string</span>, </span><br><span class="line">            amount <span class="built_in">DECIMAL</span> ( <span class="number">10</span>, <span class="number">2</span> ) )</span><br><span class="line"><span class="keyword">ROW</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">'\t'</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test3 <span class="keyword">VALUES</span> (<span class="string">'2017-01-01'</span>,<span class="string">'10029028'</span>,<span class="string">'1000003251'</span>,<span class="number">33.57</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test3 <span class="keyword">VALUES</span> (<span class="string">'2017-01-01'</span>,<span class="string">'10029029'</span>,<span class="string">'1000003251'</span>,<span class="number">33.57</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test3 <span class="keyword">VALUES</span> (<span class="string">'2017-01-01'</span>,<span class="string">'100290288'</span>,<span class="string">'1000003252'</span>,<span class="number">33.57</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test3 <span class="keyword">VALUES</span> (<span class="string">'2017-02-02'</span>,<span class="string">'10029088'</span>,<span class="string">'1000003251'</span>,<span class="number">33.57</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test3 <span class="keyword">VALUES</span> (<span class="string">'2017-02-02'</span>,<span class="string">'100290281'</span>,<span class="string">'1000003251'</span>,<span class="number">33.57</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test3 <span class="keyword">VALUES</span> (<span class="string">'2017-02-02'</span>,<span class="string">'100290282'</span>,<span class="string">'1000003253'</span>,<span class="number">33.57</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test3 <span class="keyword">VALUES</span> (<span class="string">'2017-11-02'</span>,<span class="string">'10290282'</span>,<span class="string">'100003253'</span>,<span class="number">234</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test3 <span class="keyword">VALUES</span> (<span class="string">'2018-11-02'</span>,<span class="string">'10290284'</span>,<span class="string">'100003243'</span>,<span class="number">234</span>);</span><br></pre></td></tr></table></figure><p></p><p>查询SQL：<br>(1)给出 2017年每个月的订单数、用户数、总成交金额。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    <span class="keyword">date_format</span>(dt,<span class="string">'YYYY-MM'</span>) <span class="keyword">as</span> mon,</span><br><span class="line">    <span class="keyword">count</span>(order_id) <span class="keyword">as</span> order_cnt,</span><br><span class="line">    <span class="keyword">count</span>(user_id) <span class="keyword">as</span> user_cnt,</span><br><span class="line">    <span class="keyword">sum</span>(amount) <span class="keyword">as</span> AMT</span><br><span class="line"><span class="keyword">from</span> prac.test3</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">date_format</span>(dt,<span class="string">'YYYY-MM'</span>);</span><br></pre></td></tr></table></figure><p>(2)给出2017年11月的新客数(指在11月才有第一笔订单)<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">with t1 as(</span><br><span class="line">    select</span><br><span class="line">        user_id</span><br><span class="line">    from prac.test3</span><br><span class="line">    where dt&lt;to_date(&apos;2017-11-01&apos;)</span><br><span class="line">)</span><br><span class="line">select</span><br><span class="line">    date_format(dt,&apos;YYYY-MM&apos;),</span><br><span class="line">    count(1)</span><br><span class="line">from prac.test3</span><br><span class="line">where dt between &apos;2017-11-01&apos; and &apos;2017-11-30&apos;</span><br><span class="line"> and user_id not in (select t1.user_id from t1)</span><br><span class="line">group by date_format(dt,&apos;YYYY-MM&apos;)</span><br></pre></td></tr></table></figure><p></p><p>不得不说答案上的这个写法真的很巧妙:<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">count</span>(user_id)</span><br><span class="line"><span class="keyword">FROM</span> prac.test3</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> user_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">date_format</span>(<span class="keyword">min</span>(dt),<span class="string">'yyyy-MM'</span>)=<span class="string">'2017-11'</span>;</span><br></pre></td></tr></table></figure><p></p><h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><p>需求：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有一个5000万的用户文件(user_id，name，age)，一个2亿记录的用户看电影的记录文件(user_id，url)，根据年龄段观看电影的次数进行排序？</span><br></pre></td></tr></table></figure><p></p><p>数据准备：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.test4user</span><br><span class="line">           (user_id <span class="keyword">string</span>,</span><br><span class="line">            <span class="keyword">name</span> <span class="keyword">string</span>,</span><br><span class="line">            age <span class="built_in">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.test4log</span><br><span class="line">                        (user_id <span class="keyword">string</span>,</span><br><span class="line">                        <span class="keyword">url</span> <span class="keyword">string</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test4user <span class="keyword">VALUES</span></span><br><span class="line"> (<span class="string">'001'</span>,<span class="string">'u1'</span>,<span class="number">10</span>)</span><br><span class="line">,(<span class="string">'002'</span>,<span class="string">'u2'</span>,<span class="number">15</span>)</span><br><span class="line">,(<span class="string">'003'</span>,<span class="string">'u3'</span>,<span class="number">15</span>)  </span><br><span class="line">,(<span class="string">'004'</span>,<span class="string">'u4'</span>,<span class="number">20</span>) </span><br><span class="line">,(<span class="string">'005'</span>,<span class="string">'u5'</span>,<span class="number">25</span>)</span><br><span class="line">,(<span class="string">'006'</span>,<span class="string">'u6'</span>,<span class="number">35</span>) </span><br><span class="line">,(<span class="string">'007'</span>,<span class="string">'u7'</span>,<span class="number">40</span>)</span><br><span class="line">,(<span class="string">'008'</span>,<span class="string">'u8'</span>,<span class="number">45</span>)</span><br><span class="line">,(<span class="string">'009'</span>,<span class="string">'u9'</span>,<span class="number">50</span>)</span><br><span class="line">,(<span class="string">'0010'</span>,<span class="string">'u10'</span>,<span class="number">65</span>);  </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test4log <span class="keyword">VALUES</span></span><br><span class="line"> (<span class="string">'001'</span>,<span class="string">'url1'</span>)</span><br><span class="line">,(<span class="string">'002'</span>,<span class="string">'url1'</span>)  </span><br><span class="line">,(<span class="string">'003'</span>,<span class="string">'url2'</span>)  </span><br><span class="line">,(<span class="string">'004'</span>,<span class="string">'url3'</span>)  </span><br><span class="line">,(<span class="string">'005'</span>,<span class="string">'url3'</span>)  </span><br><span class="line">,(<span class="string">'006'</span>,<span class="string">'url1'</span>)  </span><br><span class="line">,(<span class="string">'007'</span>,<span class="string">'url5'</span>)</span><br><span class="line">,(<span class="string">'008'</span>,<span class="string">'url7'</span>) </span><br><span class="line">,(<span class="string">'009'</span>,<span class="string">'url5'</span>) </span><br><span class="line">,(<span class="string">'0010'</span>,<span class="string">'url1'</span>);</span><br></pre></td></tr></table></figure><p></p><p>查询SQL：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span>(</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">        user_id,</span><br><span class="line">        <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">as</span> move_cnt</span><br><span class="line">    <span class="keyword">from</span> prac.test4log</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> user_id</span><br><span class="line">),t2 <span class="keyword">as</span>(</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">        user_id,</span><br><span class="line">        <span class="keyword">name</span>,</span><br><span class="line">        (<span class="keyword">case</span> <span class="keyword">when</span> age&gt;=<span class="number">0</span>  <span class="keyword">and</span> age&lt;<span class="number">10</span> <span class="keyword">then</span> <span class="string">'0-9'</span></span><br><span class="line">              <span class="keyword">when</span> age&gt;=<span class="number">10</span> <span class="keyword">and</span> age&lt;<span class="number">20</span> <span class="keyword">then</span> <span class="string">'10-19'</span></span><br><span class="line">              <span class="keyword">when</span> age&gt;=<span class="number">20</span> <span class="keyword">and</span> age&lt;<span class="number">30</span> <span class="keyword">then</span> <span class="string">'20-29'</span></span><br><span class="line">              <span class="keyword">when</span> age&gt;=<span class="number">30</span> <span class="keyword">and</span> age&lt;<span class="number">40</span> <span class="keyword">then</span> <span class="string">'30-39'</span></span><br><span class="line">              <span class="keyword">when</span> age&gt;=<span class="number">40</span> <span class="keyword">and</span> age&lt;<span class="number">50</span> <span class="keyword">then</span> <span class="string">'40-49'</span></span><br><span class="line">              <span class="keyword">when</span> age&gt;=<span class="number">50</span> <span class="keyword">and</span> age&lt;<span class="number">60</span> <span class="keyword">then</span> <span class="string">'50-59'</span></span><br><span class="line">              <span class="keyword">when</span> age&gt;=<span class="number">60</span> <span class="keyword">and</span> age&lt;<span class="number">70</span> <span class="keyword">then</span> <span class="string">'60-69'</span></span><br><span class="line">              <span class="keyword">when</span> age&gt;=<span class="number">70</span> <span class="keyword">and</span> age&lt;<span class="number">80</span> <span class="keyword">then</span> <span class="string">'70-79'</span></span><br><span class="line">       <span class="keyword">else</span> <span class="string">'80及以上'</span> <span class="keyword">end</span>) <span class="keyword">as</span> age_peroid</span><br><span class="line">    <span class="keyword">from</span> prac.test4user</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    t2.age_peroid,</span><br><span class="line">    <span class="keyword">sum</span>(t1.move_cnt)</span><br><span class="line"><span class="keyword">from</span> t1</span><br><span class="line"><span class="keyword">join</span> t2</span><br><span class="line">  <span class="keyword">on</span> t1.user_id=t2.user_id</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> age_peroid;</span><br></pre></td></tr></table></figure><p></p><h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">有日志如下，请写出代码求得所有用户和活跃用户的总数及平均年龄。（活跃用户指连续两天都有访问记录的用户）</span><br><span class="line">日期 用户 年龄</span><br><span class="line">2019-02-11,test_1,23</span><br><span class="line">2019-02-11,test_2,19</span><br><span class="line">2019-02-11,test_3,39</span><br><span class="line">2019-02-11,test_1,23</span><br><span class="line">2019-02-11,test_3,39</span><br><span class="line">2019-02-11,test_1,23</span><br><span class="line">2019-02-12,test_2,19</span><br><span class="line">2019-02-13,test_1,23</span><br><span class="line">2019-02-15,test_2,19</span><br><span class="line">2019-02-16,test_2,19</span><br></pre></td></tr></table></figure><p>数据准备：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.test5(</span><br><span class="line">dt <span class="keyword">string</span>,</span><br><span class="line">user_id <span class="keyword">string</span>,</span><br><span class="line">age <span class="built_in">int</span>)</span><br><span class="line"><span class="keyword">ROW</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">BY</span> <span class="string">','</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test5 <span class="keyword">VALUES</span> </span><br><span class="line"> (<span class="string">'2019-02-11'</span>,<span class="string">'test_1'</span>,<span class="number">23</span>)</span><br><span class="line">,(<span class="string">'2019-02-11'</span>,<span class="string">'test_2'</span>,<span class="number">19</span>)</span><br><span class="line">,(<span class="string">'2019-02-11'</span>,<span class="string">'test_3'</span>,<span class="number">39</span>)</span><br><span class="line">,(<span class="string">'2019-02-11'</span>,<span class="string">'test_1'</span>,<span class="number">23</span>)</span><br><span class="line">,(<span class="string">'2019-02-11'</span>,<span class="string">'test_3'</span>,<span class="number">39</span>)</span><br><span class="line">,(<span class="string">'2019-02-11'</span>,<span class="string">'test_1'</span>,<span class="number">23</span>)</span><br><span class="line">,(<span class="string">'2019-02-12'</span>,<span class="string">'test_2'</span>,<span class="number">19</span>)</span><br><span class="line">,(<span class="string">'2019-02-13'</span>,<span class="string">'test_1'</span>,<span class="number">23</span>)</span><br><span class="line">,(<span class="string">'2019-02-15'</span>,<span class="string">'test_2'</span>,<span class="number">19</span>)                                  </span><br><span class="line">,(<span class="string">'2019-02-16'</span>,<span class="string">'test_2'</span>,<span class="number">19</span>);</span><br></pre></td></tr></table></figure><p></p><p>查询SQL：<br>求得所有用户和活跃用户的总数及平均年龄。（活跃用户指连续两天都有访问记录的用户）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span>(</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">        <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">as</span> cnt_all,</span><br><span class="line">        <span class="keyword">avg</span>(age) <span class="keyword">as</span> avg_all</span><br><span class="line">    <span class="keyword">from</span>( </span><br><span class="line">        <span class="keyword">select</span></span><br><span class="line">            user_id,</span><br><span class="line">            age</span><br><span class="line">        <span class="keyword">from</span> prac.test5</span><br><span class="line">        <span class="keyword">group</span> <span class="keyword">by</span> user_id,age</span><br><span class="line">    )</span><br><span class="line">),t2 <span class="keyword">as</span> (</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    t4.user_id,</span><br><span class="line">    t4.age</span><br><span class="line"><span class="keyword">from</span>(</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">        t3.user_id,</span><br><span class="line">        t3.age</span><br><span class="line">    <span class="keyword">from</span>(</span><br><span class="line">        <span class="keyword">select</span></span><br><span class="line">            dt,</span><br><span class="line">            user_id,</span><br><span class="line">            age,</span><br><span class="line">            rk,</span><br><span class="line">            <span class="keyword">date_sub</span>(dt,rk) <span class="keyword">as</span> flag</span><br><span class="line">        <span class="keyword">from</span> (</span><br><span class="line">            <span class="keyword">select</span></span><br><span class="line">                t0.dt,</span><br><span class="line">                t0.user_id,</span><br><span class="line">                t0.age,</span><br><span class="line">                <span class="keyword">rank</span>() <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> t1.user_id <span class="keyword">order</span> <span class="keyword">by</span> t1.dt) <span class="keyword">as</span> rk</span><br><span class="line">            <span class="keyword">from</span>(</span><br><span class="line">                <span class="keyword">select</span></span><br><span class="line">                    dt,</span><br><span class="line">                    user_id,</span><br><span class="line">                    age</span><br><span class="line">                <span class="keyword">from</span> prac.test5</span><br><span class="line">                <span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line">                    dt,</span><br><span class="line">                    user_id,</span><br><span class="line">                    age</span><br><span class="line">            ) <span class="keyword">as</span> t0 <span class="comment">-- 对用户访问表去重</span></span><br><span class="line">        )</span><br><span class="line">    ) <span class="keyword">as</span> t3</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line">        t3.user_id,</span><br><span class="line">        t3.age,</span><br><span class="line">        t3.flag</span><br><span class="line">    <span class="keyword">having</span> <span class="keyword">count</span>(<span class="number">1</span>)&gt;=<span class="number">2</span></span><br><span class="line">) <span class="keyword">as</span> t4</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> </span><br><span class="line">    t4.user_id,</span><br><span class="line">    t4.age</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line"><span class="keyword">count</span>(t2.user_id),</span><br><span class="line"><span class="keyword">avg</span>(t2.age)</span><br><span class="line"><span class="keyword">from</span> t2</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">cnt_all,</span><br><span class="line">avg_all</span><br><span class="line"><span class="keyword">from</span> t1;</span><br></pre></td></tr></table></figure><p>这道题比较复杂，难度在于如何求活跃用户，首先对用户活跃日志进行去重，每个用户每天只保留一条，然后对其按照用户分组，按照日期升序，使用row_number对其打上序号rk。<br>不难看出，如果是连续登录，那么日期dt和序号会是一个等差数列，故用登陆日期dt和序号做差，得到新的日期起别名flag。然后按照user_id和flag进行分组，如果一个分组内的数据量大于等于2，就说明这位用户是活跃用户。得到活跃用户，再一次进行去重操作，因为同一用户可能多次活跃，被判定为多次活跃用户。得到活跃用户再求他们的数量和平均年龄就比较简单了。</p><h2 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h2><p>需求：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请用sql写出所有用户中在今年10月份第一次购买商品的金额，</span><br><span class="line">表ordertable字段:</span><br><span class="line">(购买用户：userid，金额：money，购买时间：paymenttime(格式：2017-10-01)，订单id：orderid</span><br></pre></td></tr></table></figure><p></p><p>数据准备:<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.test6 (</span><br><span class="line">        userid <span class="keyword">string</span>,</span><br><span class="line">        money <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">        paymenttime <span class="keyword">string</span>,</span><br><span class="line">        orderid <span class="keyword">string</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test6 <span class="keyword">VALUES</span></span><br><span class="line"> (<span class="string">'001'</span>,<span class="number">100</span>,<span class="string">'2017-10-01'</span>,<span class="string">'123'</span>)</span><br><span class="line">,(<span class="string">'001'</span>,<span class="number">200</span>,<span class="string">'2017-10-02'</span>,<span class="string">'124'</span>)</span><br><span class="line">,(<span class="string">'002'</span>,<span class="number">500</span>,<span class="string">'2017-10-01'</span>,<span class="string">'125'</span>)</span><br><span class="line">,(<span class="string">'001'</span>,<span class="number">100</span>,<span class="string">'2017-11-01'</span>,<span class="string">'126'</span>);</span><br></pre></td></tr></table></figure><p></p><p>查询SQL：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span>(</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    userid,</span><br><span class="line">    money,</span><br><span class="line">    <span class="keyword">rank</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> userid <span class="keyword">order</span> <span class="keyword">by</span> paymenttime) rk</span><br><span class="line"><span class="keyword">from</span> prac.test6</span><br><span class="line"><span class="keyword">where</span> paymenttime&gt;=<span class="string">'2017-10-01'</span> <span class="keyword">and</span> paymenttime&lt;=<span class="string">'2017-10-31'</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    userid,</span><br><span class="line">    money</span><br><span class="line"><span class="keyword">from</span> t1</span><br><span class="line"><span class="keyword">where</span> rk=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p></p><h2 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h2><p>需求：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">现有图书管理数据库的三个数据模型如下：</span><br><span class="line">图书（数据表名：BOOK）</span><br><span class="line">    序号      字段名称    字段描述    字段类型</span><br><span class="line">    1       BOOK_ID     总编号         文本</span><br><span class="line">    2       SORT        分类号         文本</span><br><span class="line">    3       BOOK_NAME   书名          文本</span><br><span class="line">    4       WRITER      作者          文本</span><br><span class="line">    5       OUTPUT      出版单位    文本</span><br><span class="line">    6       PRICE       单价          数值（保留小数点后2位）</span><br><span class="line">读者（数据表名：READER）</span><br><span class="line">    序号      字段名称    字段描述    字段类型</span><br><span class="line">    1       READER_ID   借书证号    文本</span><br><span class="line">    2       COMPANY     单位          文本</span><br><span class="line">    3       NAME        姓名          文本</span><br><span class="line">    4       SEX         性别          文本</span><br><span class="line">    5       GRADE       职称          文本</span><br><span class="line">    6       ADDR        地址          文本</span><br><span class="line">借阅记录（数据表名：BORROW LOG）</span><br><span class="line">    序号      字段名称        字段描述    字段类型</span><br><span class="line">    1       READER_ID       借书证号    文本</span><br><span class="line">    2       BOOK_ID         总编号         文本</span><br><span class="line">    3       BORROW_DATE     借书日期    日期</span><br><span class="line">（1）创建图书管理库的图书、读者和借阅三个基本表的表结构。请写出建表语句。</span><br><span class="line">（2）找出姓李的读者姓名（NAME）和所在单位（COMPANY）。</span><br><span class="line">（3）查找“高等教育出版社”的所有图书名称（BOOK_NAME）及单价（PRICE），结果按单价降序排序。</span><br><span class="line">（4）查找价格介于10元和20元之间的图书种类(SORT）出版单位（OUTPUT）和单价（PRICE），结果按出版单位（OUTPUT）和单价（PRICE）升序排序。</span><br><span class="line">（5）查找所有借了书的读者的姓名（NAME）及所在单位（COMPANY）。</span><br><span class="line">（6）求”科学出版社”图书的最高单价、最低单价、平均单价。</span><br><span class="line">（7）找出当前至少借阅了2本图书（大于等于2本）的读者姓名及其所在单位。</span><br><span class="line">（8）考虑到数据安全的需要，需定时将“借阅记录”中数据进行备份，请使用一条SQL语句，在备份用户bak下创建与“借阅记录”表结构完全一致的数据表BORROW_LOG_BAK.井且将“借阅记录”中现有数据全部复制到BORROW_L0G_ BAK中。</span><br><span class="line">（9）现在需要将原Oracle数据库中数据迁移至Hive仓库，请写出“图书”在Hive中的建表语句（Hive实现，提示：列分隔符|；数据表数据需要外部导入：分区分别以month＿part、day＿part 命名）</span><br><span class="line">（10）Hive中有表A，现在需要将表A的月分区　201505　中　user＿id为20000的user＿dinner字段更新为bonc8920，其他用户user＿dinner字段数据不变，请列出更新的方法步骤。（Hive实现，提示：Hlive中无update语法，请通过其他办法进行数据更新）</span><br></pre></td></tr></table></figure><p></p><p>(1)数据准备：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.book(book_id <span class="keyword">string</span>,</span><br><span class="line">                           <span class="string">`SORT`</span> <span class="keyword">string</span>,</span><br><span class="line">                           book_name <span class="keyword">string</span>,</span><br><span class="line">                           writer <span class="keyword">string</span>,</span><br><span class="line">                           <span class="keyword">OUTPUT</span> <span class="keyword">string</span>,</span><br><span class="line">                           price <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">2</span>));</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.book <span class="keyword">VALUES</span> (<span class="string">'001'</span>,<span class="string">'TP391'</span>,<span class="string">'信息处理'</span>,<span class="string">'author1'</span>,<span class="string">'机械工业出版社'</span>,<span class="string">'20'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.book <span class="keyword">VALUES</span> (<span class="string">'002'</span>,<span class="string">'TP392'</span>,<span class="string">'数据库'</span>,<span class="string">'author12'</span>,<span class="string">'科学出版社'</span>,<span class="string">'15'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.book <span class="keyword">VALUES</span> (<span class="string">'003'</span>,<span class="string">'TP393'</span>,<span class="string">'计算机网络'</span>,<span class="string">'author3'</span>,<span class="string">'机械工业出版社'</span>,<span class="string">'29'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.book <span class="keyword">VALUES</span> (<span class="string">'004'</span>,<span class="string">'TP399'</span>,<span class="string">'微机原理'</span>,<span class="string">'author4'</span>,<span class="string">'科学出版社'</span>,<span class="string">'39'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.book <span class="keyword">VALUES</span> (<span class="string">'005'</span>,<span class="string">'C931'</span>,<span class="string">'管理信息系统'</span>,<span class="string">'author5'</span>,<span class="string">'机械工业出版社'</span>,<span class="string">'40'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.book <span class="keyword">VALUES</span> (<span class="string">'006'</span>,<span class="string">'C932'</span>,<span class="string">'运筹学'</span>,<span class="string">'author6'</span>,<span class="string">'科学出版社'</span>,<span class="string">'55'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建读者表reader</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.reader (reader_id <span class="keyword">string</span>,</span><br><span class="line">                              company <span class="keyword">string</span>,</span><br><span class="line">                              <span class="keyword">name</span> <span class="keyword">string</span>,</span><br><span class="line">                              sex <span class="keyword">string</span>,</span><br><span class="line">                              grade <span class="keyword">string</span>,</span><br><span class="line">                              addr <span class="keyword">string</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.reader <span class="keyword">VALUES</span> (<span class="string">'0001'</span>,<span class="string">'阿里巴巴'</span>,<span class="string">'jack'</span>,<span class="string">'男'</span>,<span class="string">'vp'</span>,<span class="string">'addr1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.reader <span class="keyword">VALUES</span> (<span class="string">'0002'</span>,<span class="string">'百度'</span>,<span class="string">'robin'</span>,<span class="string">'男'</span>,<span class="string">'vp'</span>,<span class="string">'addr2'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.reader <span class="keyword">VALUES</span> (<span class="string">'0003'</span>,<span class="string">'腾讯'</span>,<span class="string">'tony'</span>,<span class="string">'男'</span>,<span class="string">'vp'</span>,<span class="string">'addr3'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.reader <span class="keyword">VALUES</span> (<span class="string">'0004'</span>,<span class="string">'京东'</span>,<span class="string">'jasper'</span>,<span class="string">'男'</span>,<span class="string">'cfo'</span>,<span class="string">'addr4'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.reader <span class="keyword">VALUES</span> (<span class="string">'0005'</span>,<span class="string">'网易'</span>,<span class="string">'zhangsan'</span>,<span class="string">'女'</span>,<span class="string">'ceo'</span>,<span class="string">'addr5'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.reader <span class="keyword">VALUES</span> (<span class="string">'0006'</span>,<span class="string">'搜狐'</span>,<span class="string">'lisi'</span>,<span class="string">'女'</span>,<span class="string">'ceo'</span>,<span class="string">'addr6'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建借阅记录表borrow_log</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.borrow_log(reader_id <span class="keyword">string</span>,</span><br><span class="line">                                 book_id <span class="keyword">string</span>,</span><br><span class="line">                                 borrow_date <span class="keyword">string</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.borrow_log <span class="keyword">VALUES</span> (<span class="string">'0001'</span>,<span class="string">'002'</span>,<span class="string">'2019-10-14'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.borrow_log <span class="keyword">VALUES</span> (<span class="string">'0002'</span>,<span class="string">'001'</span>,<span class="string">'2019-10-13'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.borrow_log <span class="keyword">VALUES</span> (<span class="string">'0003'</span>,<span class="string">'005'</span>,<span class="string">'2019-09-14'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.borrow_log <span class="keyword">VALUES</span> (<span class="string">'0004'</span>,<span class="string">'006'</span>,<span class="string">'2019-08-15'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.borrow_log <span class="keyword">VALUES</span> (<span class="string">'0005'</span>,<span class="string">'003'</span>,<span class="string">'2019-10-10'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.borrow_log <span class="keyword">VALUES</span> (<span class="string">'0006'</span>,<span class="string">'004'</span>,<span class="string">'2019-17-13'</span>);</span><br></pre></td></tr></table></figure><p></p><p>(2)找出姓李的读者姓名（NAME）和所在单位（COMPANY）<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    <span class="keyword">name</span>,</span><br><span class="line">    company</span><br><span class="line"><span class="keyword">from</span> prac.reader</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'li%'</span>;</span><br></pre></td></tr></table></figure><p></p><p>(3)查找“高等教育出版社”的所有图书名称（BOOK_NAME）及单价（PRICE），结果按单价降序排序。<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    book_name,</span><br><span class="line">    price</span><br><span class="line"><span class="keyword">from</span> prac.book</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> price <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><p></p><p>(4)查找价格介于10元和20元之间的图书种类(SORT）出版单位（OUTPUT）和单价（PRICE），结果按出版单位（OUTPUT）和单价（PRICE）升序排序。<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    <span class="keyword">sort</span>,</span><br><span class="line">    <span class="keyword">output</span>,</span><br><span class="line">    price</span><br><span class="line"><span class="keyword">from</span> prac.book</span><br><span class="line"><span class="keyword">where</span> price&gt;=<span class="number">10</span> <span class="keyword">and</span> price&lt;=<span class="number">20</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">output</span>,price;</span><br></pre></td></tr></table></figure><p></p><p>(5)查找所有借了书的读者的姓名（NAME）及所在单位（COMPANY）。<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    b.name,</span><br><span class="line">    b.company</span><br><span class="line"><span class="keyword">from</span> borrow_log <span class="keyword">as</span> a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> reader <span class="keyword">as</span> b</span><br><span class="line">       <span class="keyword">on</span> a.reader_id=b.reader_id</span><br></pre></td></tr></table></figure><p></p><p>(6)求科学出版社图书的最高单价、最低单价、平均单价。<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    <span class="keyword">max</span>(price),</span><br><span class="line">    <span class="keyword">min</span>(price),</span><br><span class="line">    <span class="keyword">avg</span>(price)</span><br><span class="line"><span class="keyword">from</span> prac.book</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">output</span>=<span class="string">'科学出版社'</span>;</span><br></pre></td></tr></table></figure><p></p><p>(7)找出当前至少借阅了2本图书（大于等于2本）的读者姓名及其所在单位<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span>(</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">        reader_id,</span><br><span class="line">        <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">as</span> cnt</span><br><span class="line">    <span class="keyword">from</span> borrow_log</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> reader_id</span><br><span class="line">    <span class="keyword">having</span> cnt&gt;=<span class="number">2</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    t2.name,</span><br><span class="line">    t2.company</span><br><span class="line"><span class="keyword">from</span> t1</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> reader <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">on</span> t1.reader_id=t2.reader_id;</span><br></pre></td></tr></table></figure><p></p><p>(8)考虑到数据安全的需要，需定时将“借阅记录”中数据进行备份，请使用一条SQL语句，<br>在备份用户bak下创建与“借阅记录”表结构完全一致的数据表BORROW<em>LOG_BAK.井且将“借阅记录”中现有数据全部复制到BORROW_L0G</em> BAK中。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.borrow_log_bak <span class="keyword">AS</span></span><br><span class="line">    <span class="keyword">SELECT</span> *</span><br><span class="line">    <span class="keyword">FROM</span> prac.borrow_log;</span><br></pre></td></tr></table></figure><p>(9)现在需要将原Oracle数据库中数据迁移至Hive仓库，请写出“图书”在Hive中的建表语句（Hive实现，提示：列分隔符|；数据表数据需要外部导入：分区分别以month＿part、day＿part 命名）<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> book2;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> book2(</span><br><span class="line"> BOOK_ID     <span class="keyword">STRING</span>    <span class="keyword">COMMENT</span>    <span class="string">'总编号'</span></span><br><span class="line">,<span class="keyword">SORT</span>        <span class="keyword">STRING</span>    <span class="keyword">COMMENT</span>    <span class="string">'分类号'</span></span><br><span class="line">,BOOK_NAME   <span class="keyword">STRING</span>    <span class="keyword">COMMENT</span>    <span class="string">'书名'</span></span><br><span class="line">,WRITER      <span class="keyword">STRING</span>    <span class="keyword">COMMENT</span>    <span class="string">'作者'</span></span><br><span class="line">,<span class="keyword">OUTPUT</span>      <span class="keyword">STRING</span>    <span class="keyword">COMMENT</span>    <span class="string">'出版单位'</span></span><br><span class="line">,PRICE       <span class="keyword">STRING</span>    <span class="keyword">COMMENT</span>    <span class="string">'单价'</span></span><br><span class="line">)<span class="keyword">COMMENT</span> <span class="string">'图书表'</span></span><br><span class="line">partitioned <span class="keyword">by</span>(month_part <span class="keyword">string</span> <span class="keyword">COMMENT</span> <span class="string">'月分区'</span>,day_part <span class="keyword">string</span> <span class="keyword">COMMENT</span> <span class="string">'日分区'</span>)</span><br><span class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'|'</span> <span class="keyword">stored</span> <span class="keyword">as</span> textfile;</span><br></pre></td></tr></table></figure><p></p><p>(10)Hive中有表A，现在需要将表A的月分区 201505 中 user_id为20000的user_dinner字段更新为bonc8920，其他用户user_dinner字段数据不变，请列出更新的方法步骤。</p><ul><li>1.新建临时表写入更改过的数据</li><li>2.把临时表数据写回原分区</li></ul><h2 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h2><p>需求：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">有一个线上服务器访问日志格式如下（用sql答题）</span><br><span class="line">时间                    接口                         ip地址</span><br><span class="line">2016-11-09 14:22:05        /api/user/login             110.23.5.33</span><br><span class="line">2016-11-09 14:23:10        /api/user/detail            57.3.2.16</span><br><span class="line">2016-11-09 15:59:40        /api/user/login             200.6.5.166</span><br><span class="line">… …</span><br><span class="line">求11月9号下午14点（14-15点），访问/api/user/login接口的top10的ip地址</span><br></pre></td></tr></table></figure><p></p><p>数据准备：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.test8(<span class="string">`date`</span> <span class="keyword">string</span>,</span><br><span class="line">                <span class="keyword">interface</span> <span class="keyword">string</span>,</span><br><span class="line">                ip <span class="keyword">string</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test8 <span class="keyword">VALUES</span> </span><br><span class="line"> (<span class="string">'2016-11-09 11:22:05'</span>,<span class="string">'/api/user/login'</span>,<span class="string">'110.23.5.23'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 11:23:10'</span>,<span class="string">'/api/user/detail'</span>,<span class="string">'57.3.2.16'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 23:59:40'</span>,<span class="string">'/api/user/login'</span>,<span class="string">'200.6.5.166'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 11:14:23'</span>,<span class="string">'/api/user/login'</span>,<span class="string">'136.79.47.70'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 11:15:23'</span>,<span class="string">'/api/user/detail'</span>,<span class="string">'94.144.143.141'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 11:16:23'</span>,<span class="string">'/api/user/login'</span>,<span class="string">'197.161.8.206'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 12:14:23'</span>,<span class="string">'/api/user/detail'</span>,<span class="string">'240.227.107.145'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 13:14:23'</span>,<span class="string">'/api/user/login'</span>,<span class="string">'79.130.122.205'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 14:14:23'</span>,<span class="string">'/api/user/detail'</span>,<span class="string">'65.228.251.189'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 14:15:23'</span>,<span class="string">'/api/user/detail'</span>,<span class="string">'245.23.122.44'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 14:17:23'</span>,<span class="string">'/api/user/detail'</span>,<span class="string">'22.74.142.137'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 14:19:23'</span>,<span class="string">'/api/user/detail'</span>,<span class="string">'54.93.212.87'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 14:20:23'</span>,<span class="string">'/api/user/detail'</span>,<span class="string">'218.15.167.248'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 14:24:23'</span>,<span class="string">'/api/user/detail'</span>,<span class="string">'20.117.19.75'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 15:14:23'</span>,<span class="string">'/api/user/login'</span>,<span class="string">'183.162.66.97'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 16:14:23'</span>,<span class="string">'/api/user/login'</span>,<span class="string">'108.181.245.147'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 14:17:23'</span>,<span class="string">'/api/user/login'</span>,<span class="string">'22.74.142.137'</span>)</span><br><span class="line">,(<span class="string">'2016-11-09 14:19:23'</span>,<span class="string">'/api/user/login'</span>,<span class="string">'22.74.142.137'</span>);</span><br></pre></td></tr></table></figure><p></p><p>查询SQL<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span>(</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">        <span class="keyword">date_format</span>(<span class="string">`date`</span>,<span class="string">'YYYY-MM-dd HH'</span>) <span class="keyword">as</span> dt,</span><br><span class="line">        ip,</span><br><span class="line">        <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">as</span> cnt</span><br><span class="line">    <span class="keyword">from</span> test8</span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">date_format</span>(<span class="string">`date`</span>,<span class="string">'YYYY-MM-dd HH'</span>)=<span class="string">'2016-11-09 14'</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">date_format</span>(<span class="string">`date`</span>,<span class="string">'YYYY-MM-dd HH'</span>),ip</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    dt,</span><br><span class="line">    ip,</span><br><span class="line">    rk</span><br><span class="line"><span class="keyword">from</span>(</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">        dt,</span><br><span class="line">        ip,</span><br><span class="line">        <span class="keyword">rank</span>() <span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> cnt <span class="keyword">desc</span>) <span class="keyword">as</span> rk</span><br><span class="line">    <span class="keyword">from</span> t1</span><br><span class="line">) <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">where</span> rk&lt;=<span class="number">10</span>;</span><br></pre></td></tr></table></figure><p></p><h2 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h2><p>需求：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">有一个充值日志表credit_log，字段如下：</span><br><span class="line">`dist_id` int  &apos;区组id&apos;,</span><br><span class="line">`account` string  &apos;账号&apos;,</span><br><span class="line">`money` int   &apos;充值金额&apos;,</span><br><span class="line">`create_time` string  &apos;订单时间&apos;</span><br><span class="line"></span><br><span class="line">请写出SQL语句，查询充值日志表2019年01月02号每个区组下充值额最大的账号，要求结果：</span><br><span class="line">区组id，账号，金额，充值时间</span><br></pre></td></tr></table></figure><p></p><p>数据准备：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.test9(</span><br><span class="line">            dist_id <span class="keyword">string</span> <span class="keyword">COMMENT</span> <span class="string">'区组id'</span>,</span><br><span class="line">            <span class="keyword">account</span> <span class="keyword">string</span> <span class="keyword">COMMENT</span> <span class="string">'账号'</span>,</span><br><span class="line">           <span class="string">`money`</span> <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">COMMENT</span> <span class="string">'充值金额'</span>,</span><br><span class="line">            create_time <span class="keyword">string</span> <span class="keyword">COMMENT</span> <span class="string">'订单时间'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test9 <span class="keyword">VALUES</span> </span><br><span class="line"> (<span class="string">'1'</span>,<span class="string">'11'</span>,<span class="number">100006</span>,<span class="string">'2019-01-02 13:00:01'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'22'</span>,<span class="number">110000</span>,<span class="string">'2019-01-02 13:00:02'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'33'</span>,<span class="number">102000</span>,<span class="string">'2019-01-02 13:00:03'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'44'</span>,<span class="number">100300</span>,<span class="string">'2019-01-02 13:00:04'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'55'</span>,<span class="number">100040</span>,<span class="string">'2019-01-02 13:00:05'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'66'</span>,<span class="number">100005</span>,<span class="string">'2019-01-02 13:00:06'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'77'</span>,<span class="number">180000</span>,<span class="string">'2019-01-03 13:00:07'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'88'</span>,<span class="number">106000</span>,<span class="string">'2019-01-02 13:00:08'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'99'</span>,<span class="number">100400</span>,<span class="string">'2019-01-02 13:00:09'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'12'</span>,<span class="number">100030</span>,<span class="string">'2019-01-02 13:00:10'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'13'</span>,<span class="number">100003</span>,<span class="string">'2019-01-02 13:00:20'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'14'</span>,<span class="number">100020</span>,<span class="string">'2019-01-02 13:00:30'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'15'</span>,<span class="number">100500</span>,<span class="string">'2019-01-02 13:00:40'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'16'</span>,<span class="number">106000</span>,<span class="string">'2019-01-02 13:00:50'</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'17'</span>,<span class="number">100800</span>,<span class="string">'2019-01-02 13:00:59'</span>)</span><br><span class="line">,(<span class="string">'2'</span>,<span class="string">'18'</span>,<span class="number">100800</span>,<span class="string">'2019-01-02 13:00:11'</span>)</span><br><span class="line">,(<span class="string">'2'</span>,<span class="string">'19'</span>,<span class="number">100030</span>,<span class="string">'2019-01-02 13:00:12'</span>)</span><br><span class="line">,(<span class="string">'2'</span>,<span class="string">'10'</span>,<span class="number">100000</span>,<span class="string">'2019-01-02 13:00:13'</span>)</span><br><span class="line">,(<span class="string">'2'</span>,<span class="string">'45'</span>,<span class="number">100010</span>,<span class="string">'2019-01-02 13:00:14'</span>)</span><br><span class="line">,(<span class="string">'2'</span>,<span class="string">'78'</span>,<span class="number">100070</span>,<span class="string">'2019-01-02 13:00:15'</span>);</span><br></pre></td></tr></table></figure><p></p><p>查询SQL：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span>(</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">        dist_id,</span><br><span class="line">        <span class="keyword">account</span>,</span><br><span class="line">        <span class="keyword">sum</span>(money) <span class="keyword">as</span> sum_m</span><br><span class="line">    <span class="keyword">from</span> prac.test9</span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">date_format</span>(create_time,<span class="string">'yyyy-MM-dd'</span>)=<span class="string">'2019-01-02'</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line">        dist_id,</span><br><span class="line">        <span class="keyword">account</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    t2.dist_id,</span><br><span class="line">    t2.account,</span><br><span class="line">    t2.sum_m,</span><br><span class="line">    <span class="string">'2019-01-02'</span></span><br><span class="line"><span class="keyword">from</span>(</span><br><span class="line">        <span class="keyword">select</span></span><br><span class="line">            t1.dist_id,</span><br><span class="line">            t1.account,</span><br><span class="line">            t1.sum_m,</span><br><span class="line">            <span class="keyword">rank</span>() <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> t1.dist_id <span class="keyword">order</span> <span class="keyword">by</span> sum_m <span class="keyword">desc</span>) <span class="keyword">as</span> rk</span><br><span class="line">        <span class="keyword">from</span> t1</span><br><span class="line">    ) <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">where</span> rk=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> prac.test10(</span><br><span class="line">    <span class="string">`dist_id`</span> <span class="keyword">string</span> <span class="keyword">COMMENT</span> <span class="string">'区组id'</span>,</span><br><span class="line">    <span class="string">`account`</span> <span class="keyword">string</span> <span class="keyword">COMMENT</span> <span class="string">'账号'</span>,</span><br><span class="line">    <span class="string">`gold`</span> <span class="built_in">int</span> <span class="keyword">COMMENT</span> <span class="string">'金币'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="第十题："><a href="#第十题：" class="headerlink" title="第十题："></a>第十题：</h2><p>需求：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">有一个账号表如下，请写出SQL语句，查询各自区组的money排名前十的账号（分组取前10）</span><br><span class="line">dist_id string  &apos;区组id&apos;,</span><br><span class="line">account string  &apos;账号&apos;,</span><br><span class="line">gold     int    &apos;金币&apos;</span><br></pre></td></tr></table></figure><p></p><p>数据准备：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> prac.test10 <span class="keyword">VALUES</span> </span><br><span class="line"> (<span class="string">'1'</span>,<span class="string">'77'</span>,<span class="number">18</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'88'</span>,<span class="number">106</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'99'</span>,<span class="number">10</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'12'</span>,<span class="number">13</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'13'</span>,<span class="number">14</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'14'</span>,<span class="number">25</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'15'</span>,<span class="number">36</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'16'</span>,<span class="number">12</span>)</span><br><span class="line">,(<span class="string">'1'</span>,<span class="string">'17'</span>,<span class="number">158</span>)</span><br><span class="line">,(<span class="string">'2'</span>,<span class="string">'18'</span>,<span class="number">12</span>)</span><br><span class="line">,(<span class="string">'2'</span>,<span class="string">'19'</span>,<span class="number">44</span>)</span><br><span class="line">,(<span class="string">'2'</span>,<span class="string">'10'</span>,<span class="number">66</span>)</span><br><span class="line">,(<span class="string">'2'</span>,<span class="string">'45'</span>,<span class="number">80</span>)</span><br><span class="line">,(<span class="string">'2'</span>,<span class="string">'78'</span>,<span class="number">98</span>);</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> test10;</span><br></pre></td></tr></table></figure><p></p><p>查询SQL:<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询各自区组的money排名前十的账号（分组取前10）</span></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span>(</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">        dist_id,</span><br><span class="line">        <span class="keyword">account</span>,</span><br><span class="line">        gold,</span><br><span class="line">        <span class="keyword">rank</span>() <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> dist_id <span class="keyword">order</span> <span class="keyword">by</span> gold <span class="keyword">desc</span>) <span class="keyword">as</span> rk</span><br><span class="line">    <span class="keyword">from</span> prac.test10</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    t1.dist_id,</span><br><span class="line">    t1.account,</span><br><span class="line">    t1.gold,</span><br><span class="line">    t1.rk</span><br><span class="line"><span class="keyword">from</span> t1</span><br><span class="line"><span class="keyword">where</span> rk&lt;=<span class="number">10</span>;</span><br></pre></td></tr></table></figure><p></p><p>这10道题并不难，和工作中的HiveSQL相比真的不算什么了，日拱一卒。加油！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我有早起的习惯，每天早晨上班前的这段时间脑子非常清醒，这段时间我会用来充实自己。看到某个公众号发了一篇Hive的面试题的推文，顺手拿过来做了下。共计10道题，花了下班后的晚上和一个早晨的时间写完。&lt;/p&gt;&lt;h1 id=&quot;第一题&quot;&gt;&lt;a href=&quot;#第一题&quot; class=&quot;
      
    
    </summary>
    
      <category term="Hive" scheme="https://mapan.tech/cn/categories/Hive/"/>
    
    
  </entry>
  
  <entry>
    <title>一道有意思的SQL</title>
    <link href="https://mapan.tech/cn/5acd.html"/>
    <id>https://mapan.tech/cn/5acd.html</id>
    <published>2020-05-08T11:40:06.000Z</published>
    <updated>2020-05-08T14:20:22.050Z</updated>
    
    <content type="html"><![CDATA[<p>今天题发现一个有趣的题目：找到一个班级里成绩排名，并算出每个人的前1名和前2名作为超越的对手，如果没有前1名，则找前2名和前3名。例如：有两个第八名，则没有第九名，第十名的前一名是第八名，第十名的前2名是第七名</p><p>举个例子：<br>一个班级的某科目成绩单如下：</p><div class="table-container"><table><thead><tr><th>学号</th><th>姓名</th><th>分数</th></tr></thead><tbody><tr><td>1001</td><td>赵君</td><td>48</td></tr><tr><td>1002</td><td>钱不</td><td>95</td></tr><tr><td>1003</td><td>孙见</td><td>64</td></tr><tr><td>1004</td><td>李黄</td><td>77</td></tr><tr><td>1005</td><td>周河</td><td>82</td></tr><tr><td>1006</td><td>吴之</td><td>77</td></tr><tr><td>1007</td><td>郑水</td><td>64</td></tr><tr><td>1008</td><td>王天</td><td>92</td></tr><tr><td>1009</td><td>冯上</td><td>77</td></tr><tr><td>1010</td><td>褚来</td><td>82</td></tr><tr><td>1011</td><td>卫奔</td><td>85</td></tr><tr><td>1012</td><td>蒋流</td><td>67</td></tr></tbody></table></div><p>需要获取到每个人的排名以及他所在前1名同学和前2名同学的姓名，目标结果如下所示。</p><p><img src="/cn/5acd/image-20200508220830448.png" alt="image-20200508220830448"></p><p>拿到题目首先造数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> SCORE;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> score(<span class="keyword">ID</span> <span class="keyword">STRING</span>,<span class="keyword">NAME</span> <span class="keyword">STRING</span>,SC <span class="keyword">STRING</span>)</span><br><span class="line"><span class="keyword">ROW</span> <span class="keyword">FORMAT</span> <span class="keyword">DELIMITED</span> <span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">'\t'</span></span><br><span class="line"><span class="keyword">STORED</span> <span class="keyword">AS</span> ORC;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> SCORE <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">'1001'</span>,<span class="string">'赵君'</span>,<span class="string">'48'</span>),</span><br><span class="line">(<span class="string">'1002'</span>,<span class="string">'钱不'</span>,<span class="string">'95'</span>),</span><br><span class="line">(<span class="string">'1003'</span>,<span class="string">'孙见'</span>,<span class="string">'64'</span>),</span><br><span class="line">(<span class="string">'1004'</span>,<span class="string">'李黄'</span>,<span class="string">'77'</span>),</span><br><span class="line">(<span class="string">'1005'</span>,<span class="string">'周河'</span>,<span class="string">'82'</span>),</span><br><span class="line">(<span class="string">'1006'</span>,<span class="string">'吴之'</span>,<span class="string">'77'</span>),</span><br><span class="line">(<span class="string">'1007'</span>,<span class="string">'郑水'</span>,<span class="string">'64'</span>),</span><br><span class="line">(<span class="string">'1008'</span>,<span class="string">'王天'</span>,<span class="string">'92'</span>),</span><br><span class="line">(<span class="string">'1009'</span>,<span class="string">'冯上'</span>,<span class="string">'77'</span>),</span><br><span class="line">(<span class="string">'1010'</span>,<span class="string">'褚来'</span>,<span class="string">'82'</span>),</span><br><span class="line">(<span class="string">'1011'</span>,<span class="string">'卫奔'</span>,<span class="string">'85'</span>),</span><br><span class="line">(<span class="string">'1012'</span>,<span class="string">'蒋流'</span>,<span class="string">'67'</span>);</span><br></pre></td></tr></table></figure><p>首先给每位同学成绩进行排名，分为跳跃排名和不跳跃排名。实际业务中，前1名和前2名是自己下次考试的超越对手。其中跳跃排名是正常使用的排名，而不跳跃排名是为了进行关联而使用的关联条件。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="keyword">id</span>, <span class="comment">-- 学号</span></span><br><span class="line">    <span class="keyword">name</span>, <span class="comment">-- 姓名</span></span><br><span class="line">    sc,  <span class="comment">-- 成绩</span></span><br><span class="line">    <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> sc <span class="keyword">DESC</span>) <span class="keyword">AS</span> rk, <span class="comment">-- 排名1,带跳跃</span></span><br><span class="line">    <span class="keyword">DENSE_RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> sc <span class="keyword">DESC</span>) <span class="keyword">AS</span> rk2 <span class="comment">-- 排名2,不跳跃</span></span><br><span class="line"><span class="keyword">FROM</span> score</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><div class="table-container"><table><thead><tr><th>id</th><th>name</th><th>sc</th><th>rk</th><th>rk2</th></tr></thead><tbody><tr><td>1002</td><td>钱不</td><td>95</td><td>1</td><td>1</td></tr><tr><td>1008</td><td>王天</td><td>92</td><td>2</td><td>2</td></tr><tr><td>1011</td><td>卫奔</td><td>85</td><td>3</td><td>3</td></tr><tr><td>1010</td><td>褚来</td><td>82</td><td>4</td><td>4</td></tr><tr><td>1005</td><td>周河</td><td>82</td><td>4</td><td>4</td></tr><tr><td>1009</td><td>冯上</td><td>77</td><td>6</td><td>5</td></tr><tr><td>1006</td><td>吴之</td><td>77</td><td>6</td><td>5</td></tr><tr><td>1004</td><td>李黄</td><td>77</td><td>6</td><td>5</td></tr><tr><td>1012</td><td>蒋流</td><td>67</td><td>9</td><td>6</td></tr><tr><td>1007</td><td>郑水</td><td>64</td><td>10</td><td>7</td></tr><tr><td>1003</td><td>孙见</td><td>64</td><td>10</td><td>7</td></tr><tr><td>1001</td><td>赵君</td><td>48</td><td>12</td><td>8</td></tr></tbody></table></div><p>然后进行两次自关联，分别找到每一位同学的前1名和前2名，由于存在排名并列的情况，join后势必存在数据膨胀，也就是说前1名可能是多位同学，这里使用collect_list函数对结果进行收敛。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> tt <span class="keyword">AS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        <span class="keyword">id</span>, <span class="comment">-- 学号</span></span><br><span class="line">        <span class="keyword">name</span>, <span class="comment">-- 姓名</span></span><br><span class="line">        sc,  <span class="comment">-- 成绩</span></span><br><span class="line">        <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> sc <span class="keyword">DESC</span>) <span class="keyword">AS</span> rk, <span class="comment">-- 排名1,带跳跃</span></span><br><span class="line">        <span class="keyword">DENSE_RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> sc <span class="keyword">DESC</span>) <span class="keyword">AS</span> rk2 <span class="comment">-- 排名2,不跳跃</span></span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    t1.id,</span><br><span class="line">    t1.name,</span><br><span class="line">    t1.sc,</span><br><span class="line">    t1.rk,</span><br><span class="line">    <span class="comment">--t1.rk2,</span></span><br><span class="line">    <span class="comment">--COLLECT_LIST(t2.id), -- 前1名学号</span></span><br><span class="line">    COLLECT_LIST(t2.name), <span class="comment">-- 前1名姓名</span></span><br><span class="line">    <span class="comment">--COLLECT_LIST(t3.id), -- 前2名学号</span></span><br><span class="line">    COLLECT_LIST(t3.name) <span class="comment">-- 前2名姓名</span></span><br><span class="line"><span class="keyword">FROM</span> tt <span class="keyword">AS</span> t1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tt <span class="keyword">AS</span> t2</span><br><span class="line"><span class="keyword">ON</span> t1.rk2<span class="number">-1</span>=t2.rk2</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tt <span class="keyword">AS</span> t3</span><br><span class="line"><span class="keyword">ON</span> t1.rk2<span class="number">-2</span>=t3.rk2</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">    t1.id,</span><br><span class="line">    t1.name,</span><br><span class="line">    t1.sc,</span><br><span class="line">    t1.rk,</span><br><span class="line">    t1.rk2</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> t1.rk;</span><br></pre></td></tr></table></figure><p>执行结果如下:</p><p><img src="/cn/5acd/image-20200508220901554.png" alt="image-20200508220901554"></p><p>不难看出最后三位同学{郑水，孙见，赵君}的数据是有问题的，前1、2名数据有重复，为什么呢？</p><p>经过测试，实际上单独找前1名或者前2名使用collect_list都没有重复，如果找前1名和前2名放在一起会产生重复，因为collect相当于省略了group by操作，对膨胀的数据进行聚合（列转行），在第一次join中已经出现了数据膨胀，第二次join会加剧数据膨胀，而collect_list是在所有join完成之后，对重复的数据仅进行一次收敛。所以使用collect_set才会符合预期要求。</p><p>代码如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> tt <span class="keyword">AS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        <span class="keyword">id</span>, <span class="comment">-- 学号</span></span><br><span class="line">        <span class="keyword">name</span>, <span class="comment">-- 姓名</span></span><br><span class="line">        sc,  <span class="comment">-- 成绩</span></span><br><span class="line">        <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> sc <span class="keyword">DESC</span>) <span class="keyword">AS</span> rk, <span class="comment">-- 排名1,带跳跃</span></span><br><span class="line">        <span class="keyword">DENSE_RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> sc <span class="keyword">DESC</span>) <span class="keyword">AS</span> rk2 <span class="comment">-- 排名2,不跳跃</span></span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    t1.id,</span><br><span class="line">    t1.name,</span><br><span class="line">    t1.sc,</span><br><span class="line">    t1.rk,</span><br><span class="line">    <span class="comment">--t1.rk2,</span></span><br><span class="line">    <span class="comment">--COLLECT_SET(t2.id), -- 前1名学号</span></span><br><span class="line">    COLLECT_SET(t2.name), <span class="comment">-- 前1名姓名</span></span><br><span class="line">    <span class="comment">--COLLECT_SET(t3.id), -- 前2名学号</span></span><br><span class="line">    COLLECT_SET(t3.name) <span class="comment">-- 前2名姓名</span></span><br><span class="line"><span class="keyword">FROM</span> tt <span class="keyword">AS</span> t1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tt <span class="keyword">AS</span> t2</span><br><span class="line"><span class="keyword">ON</span> t1.rk2<span class="number">-1</span>=t2.rk2</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tt <span class="keyword">AS</span> t3</span><br><span class="line"><span class="keyword">ON</span> t1.rk2<span class="number">-2</span>=t3.rk2</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">    t1.id,</span><br><span class="line">    t1.name,</span><br><span class="line">    t1.sc,</span><br><span class="line">    t1.rk,</span><br><span class="line">    t1.rk2</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> t1.rk;</span><br></pre></td></tr></table></figure><p>执行结果:</p><p><img src="/cn/5acd/image-20200508221007625.png" alt="image-20200508221007625"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天题发现一个有趣的题目：找到一个班级里成绩排名，并算出每个人的前1名和前2名作为超越的对手，如果没有前1名，则找前2名和前3名。例如：有两个第八名，则没有第九名，第十名的前一名是第八名，第十名的前2名是第七名&lt;/p&gt;&lt;p&gt;举个例子：&lt;br&gt;一个班级的某科目成绩单如下：&lt;/
      
    
    </summary>
    
      <category term="SQL" scheme="https://mapan.tech/cn/categories/SQL/"/>
    
    
  </entry>
  
  <entry>
    <title>2020年4月总结</title>
    <link href="https://mapan.tech/cn/f274.html"/>
    <id>https://mapan.tech/cn/f274.html</id>
    <published>2020-04-30T14:19:56.000Z</published>
    <updated>2020-05-06T22:49:10.374Z</updated>
    
    <content type="html"><![CDATA[<p>本站友链第一条：稚晖的博客，这位博主现在已经是30万粉丝的UP主了。为了不拉低up主的友链质量，决定以后保证文章质量的前提下，尽量提高更新频率。</p><p>四月份当当网书香节，买了三本书，分别是</p><ul><li>用户画像：方法论与工程化解决方案</li><li>Hive性能调优实战</li><li>数据仓库工具箱(第3版)——维度建模权威指南</li></ul><p>其中《Hive性能调优实战》已经看完，上一篇文章中提到了一些总结，收获颇丰。<br>《用户画像》这本还没有看，《数据仓库工具箱》这本书讲了太多维度建模的名词，没有业务场景支撑很难理解，书评描述为经典，等以后达到一定高度再看。</p><hr><p>另外看了一本电子书《一年顶十年》作者 彪悍一只猫<br>这本书更像是一本问答书，为什么要做xx? 如何做？书中的信息密度真的比较大，目前我仅仅提炼了一些对当下的我有帮助的一些观点，并尝试应用其中的一小部分。<br>作者传播的一句话，简单明了</p><blockquote><p>让自己变得更好，是解决一切问题的关键</p></blockquote><h3 id="及时掏空自己："><a href="#及时掏空自己：" class="headerlink" title="及时掏空自己："></a>及时掏空自己：</h3><p>通过学习和实践，脑子里会不断增加新的储备，千万不要把这些储备束之高阁，否则就会很快忘掉，一定要及时“派发”出去。</p><h3 id="买经验："><a href="#买经验：" class="headerlink" title="买经验："></a>买经验：</h3><p>进入一个新的领域，最好的方法是向这个领域的专家请教。</p><h3 id="如成为某个领域的高手？"><a href="#如成为某个领域的高手？" class="headerlink" title="如成为某个领域的高手？"></a>如成为某个领域的高手？</h3><p>集中突破训练<br>读透几本书，反复钻研<br>活在高手堆里，很难成为低手。</p><p>用，才是最好的读。</p><h3 id="如何读书？"><a href="#如何读书？" class="headerlink" title="如何读书？"></a>如何读书？</h3><p>写<strong>践行清单</strong></p><ul><li>哪些是我要用的上的？</li><li>针对上面的每一条内容，我该怎么做？</li></ul><h3 id="读书三板斧："><a href="#读书三板斧：" class="headerlink" title="读书三板斧："></a>读书三板斧：</h3><ul><li>重复读</li><li>盯作者</li><li>勤分享</li></ul><h3 id="写作："><a href="#写作：" class="headerlink" title="写作："></a>写作：</h3><ul><li>写作是改运级别的武器</li><li>写作是打造个人品牌的神器</li></ul><h3 id="常被碾压"><a href="#常被碾压" class="headerlink" title="常被碾压"></a>常被碾压</h3><ul><li>向上学，向下帮</li><li>日拱一卒</li></ul><p>现在我正在践行两条：<br><strong>及时掏空自己</strong>和<strong>写作</strong></p><p>书中的信息密度真的比较大，目前我仅仅提炼了一些对当下的我有帮助的一些观点，并尝试应用其中的一小部分。</p><p>[1]剽悍一只猫.一年顶十年[E].北京联合出版公司，2020.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本站友链第一条：稚晖的博客，这位博主现在已经是30万粉丝的UP主了。为了不拉低up主的友链质量，决定以后保证文章质量的前提下，尽量提高更新频率。&lt;/p&gt;&lt;p&gt;四月份当当网书香节，买了三本书，分别是&lt;/p&gt;&lt;ul&gt;&lt;li&gt;用户画像：方法论与工程化解决方案&lt;/li&gt;&lt;li&gt;Hi
      
    
    </summary>
    
      <category term="月度总结" scheme="https://mapan.tech/cn/categories/%E6%9C%88%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
  </entry>
  
  <entry>
    <title>Hive进阶</title>
    <link href="https://mapan.tech/cn/31e5.html"/>
    <id>https://mapan.tech/cn/31e5.html</id>
    <published>2020-04-20T06:26:06.000Z</published>
    <updated>2020-05-07T13:37:49.167Z</updated>
    
    <content type="html"><![CDATA[<p>最近当当网书香节，满100减50，购物车里的书迫不及待的下单买了，5折价格真香。</p><p>拿到手后花了约一周时间把<a href="https://u.dangdang.com/xjGKA">《Hive性能调优实战》</a> 这本看完了。</p><p><img src="/cn/31e5/image-20200505154309203.png" alt="image-20200505154309203"></p><p>由于最近工作中遇到Hive的优化问题，对我来说收获颇丰，让我对Hive有了更深层次的理解。书的主要内容如下：</p><p><img src="/cn/31e5/image-20200505144431706.png" alt="image-20200505144431706"></p><p>总结了一些对我来说比较有帮助的点：</p><h2 id="MUTI-INSERT写法"><a href="#MUTI-INSERT写法" class="headerlink" title="MUTI-INSERT写法"></a>MUTI-INSERT写法</h2><p>找到student_stat表中每个年龄段最早出生和最晚出生的人的出生日期，插入tp分区里：<br>正常来说会这样写：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> <span class="keyword">table</span> student_stat <span class="keyword">partition</span>(tp)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">s_age,</span><br><span class="line"><span class="keyword">min</span>(s_birth) stat,</span><br><span class="line"><span class="string">'min'</span> tp</span><br><span class="line"><span class="keyword">from</span> student_tb_txt</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s_age</span><br><span class="line"></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">s_age,</span><br><span class="line"><span class="keyword">max</span>(s_birth) stat,</span><br><span class="line"><span class="string">'max'</span> tp</span><br><span class="line"><span class="keyword">from</span> student_tb_txt</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s_age;</span><br></pre></td></tr></table></figure><p></p><p>上面的HQL会形成5个MR的job，执行过程类似这样</p><p><img src="/cn/31e5/image-20200505145600207.png" alt="image-20200505145600207"></p><p>正常来说，优化会把这个union all改写成两个insert,类似这样：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--计算max值</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> student_stat <span class="keyword">partition</span>(tp)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    s_age,</span><br><span class="line">    <span class="keyword">max</span>(s_birth) stat, </span><br><span class="line">    <span class="string">'max'</span> tp</span><br><span class="line"><span class="keyword">from</span> student_tb_txt</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s_age;</span><br><span class="line"><span class="comment">--计算min值</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> student_stat <span class="keyword">partition</span>(tp)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">s_age,</span><br><span class="line"><span class="keyword">min</span>(s_birth) stat,</span><br><span class="line"><span class="string">'min'</span> tp</span><br><span class="line"><span class="keyword">from</span> student_tb_txt</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s_age;</span><br></pre></td></tr></table></figure><p></p><p>执行过程会是下面这样，同样是两次表扫描，两次求聚合操作（存在Shuffle）并写入结果表。<br><img src="/cn/31e5/image-20200505145640213.png" alt="image-20200505145640213"></p><p>看起来优化掉了union all操作，计算max和min值的两个job可直接将数据放到student_stat下，减少了一次MapReduce作业，看似方案比较合理，但是实际执行起来反而比优化之前时间更久。其实Hive的早期版本确实可以优化，但是随着Hive版本的迭代，对union操作进行了优化，导致拆分后的代码执行效率更低了。</p><p>那么是否可以只经过一次Table Scan并写入呢？答案是肯定的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">from student_tb_txt</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> <span class="keyword">table</span> student_stat <span class="keyword">partition</span>(tp)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    s_age,</span><br><span class="line">    <span class="keyword">min</span>(s_birth) stat,</span><br><span class="line">    <span class="string">'min'</span> tp</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s_age</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> student_stat <span class="keyword">partition</span>(tp)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    s_age,</span><br><span class="line">    <span class="keyword">max</span>(s_birth) stat,</span><br><span class="line">    <span class="string">'max'</span> tp</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s_age;</span><br></pre></td></tr></table></figure><p>执行过程如下：</p><p><img src="/cn/31e5/image-20200505150343464.png" alt="image-20200505150343464"></p><p>这样写就只会产生一个MR的Job，也就是说只执行了一次MapReduce作业。相比优化之前的5个Job，极大的减少了磁盘IO和网络通信，提高执行效率。</p><h2 id="Count-distinct-优化"><a href="#Count-distinct-优化" class="headerlink" title="Count(distinct)优化"></a>Count(distinct)优化</h2><p>统计年龄枚举值个数：<br>下意识的觉得group by去重会比distinct效率高所以会写成这样，能有效避免Reduce阶段数据倾斜</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">from</span>(</span><br><span class="line">  <span class="keyword">select</span> s_age</span><br><span class="line">  <span class="keyword">from</span> student_tb_orc</span><br><span class="line">  <span class="keyword">group</span> <span class="keyword">by</span> s_age</span><br><span class="line">) b</span><br></pre></td></tr></table></figure><ul><li>因为去重的是s_age列，实际上业务含义表示年龄，枚举值个数非常有限，在Map阶段会对s_age去重，因此每个Map得到的s_age有限，最后到达Reduce阶段的非常有限，根本不会达到数据倾斜的量。</li><li>另外group by在不同版本间变动比较大，有的版本会用构建hashtable的形式去重，有的版本会通过排序的方式，排序最优时间复杂度无法到O(1) 。另外上面写法转化为两个任务，会消耗更多的磁盘网络I/O资源。</li></ul><p>所以，这样的写法有点过度优化，执行过程如下：</p><p><img src="/cn/31e5/image-20200505152946846.png" alt="image-20200505152946846"></p><p>如下写法是正常写法：<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">distinct</span> s_age)</span><br><span class="line"><span class="keyword">from</span> student_tb_orc</span><br></pre></td></tr></table></figure><p></p><p>distinct的命令会在内存中构建一个hashtable，查找去重的时间复杂度是O(1)；</p><p>Hive 3.0中新增了count(distinct)优化，通过配置<code>set hive.optimize.countdistinct = true</code>设置，即使真的出现数据倾斜也可以自动优化，自动改变SQL执行的逻辑。</p><p>执行过程如下：</p><p><img src="/cn/31e5/image-20200505153005333.png" alt="image-20200505153005333"></p><blockquote><p>理透需求原则，这是优化的根本；</p><p>把握数据全链路原则，这是优化的脉络；</p><p>坚持代码的简洁原则，这让优化更加简单；</p><p>没有瓶颈时谈论优化，是自寻烦恼。</p></blockquote><h2 id="学会查看执行计划"><a href="#学会查看执行计划" class="headerlink" title="学会查看执行计划"></a>学会查看执行计划</h2><p>查看执行计划的命令：<code>explain sql</code><br>查看执行计划的扩展信息：<code>explain extended sql</code><br>执行计划包含两部分:</p><ol><li>作业的依赖关系图，即STAGE DEPENDENCIES;</li><li>每个作业的详细信息，即STAGE PLANS;</li></ol><p>例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">explain</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    s_age,</span><br><span class="line">    <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">as</span> <span class="keyword">num</span></span><br><span class="line"><span class="keyword">from</span> prac.student_tb_txt</span><br><span class="line"><span class="keyword">where</span> s_age&lt;<span class="number">30</span></span><br><span class="line"><span class="keyword">and</span> s_name <span class="keyword">like</span> <span class="string">'%红'</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s_age;</span><br></pre></td></tr></table></figure><p>执行计划如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">STAGE DEPENDENCIES:</span><br><span class="line">  Stage-1 is a root stage</span><br><span class="line">  Stage-0 depends on stages: Stage-1</span><br><span class="line"></span><br><span class="line">STAGE PLANS:</span><br><span class="line">  Stage: Stage-1</span><br><span class="line">    Map Reduce</span><br><span class="line">      Map Operator Tree:</span><br><span class="line">          TableScan // 表扫描</span><br><span class="line">            alias: student_tb_txt</span><br><span class="line">            Statistics: Num rows: 25083517 Data size: 2709019904 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">            Filter Operator</span><br><span class="line">              predicate: ((s_age &lt; 30) and (s_name like &apos;%红&apos;)) (type: boolean)</span><br><span class="line">              Statistics: Num rows: 4180586 Data size: 451503299 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">              Select Operator</span><br><span class="line">                expressions: s_age (type: bigint)</span><br><span class="line">                outputColumnNames: s_age</span><br><span class="line">                Statistics: Num rows: 4180586 Data size: 451503299 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">                Group By Operator</span><br><span class="line">                  aggregations: count(1)</span><br><span class="line">                  keys: s_age (type: bigint)</span><br><span class="line">                  mode: hash</span><br><span class="line">                  outputColumnNames: _col0, _col1</span><br><span class="line">                  Statistics: Num rows: 4180586 Data size: 451503299 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">                  Reduce Output Operator// 输出结果给Reduce</span><br><span class="line">                    key expressions: _col0 (type: bigint)</span><br><span class="line">                    sort order: +</span><br><span class="line">                    Map-reduce partition columns: _col0 (type: bigint)</span><br><span class="line">                    Statistics: Num rows: 4180586 Data size: 451503299 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">                    value expressions: _col1 (type: bigint)</span><br><span class="line">      Reduce Operator Tree:// Reduce阶段</span><br><span class="line">        Group By Operator</span><br><span class="line">          aggregations: count(VALUE._col0)</span><br><span class="line">          keys: KEY._col0 (type: bigint)</span><br><span class="line">          mode: mergepartial</span><br><span class="line">          outputColumnNames: _col0, _col1</span><br><span class="line">          Statistics: Num rows: 2090293 Data size: 225751649 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">          File Output Operator</span><br><span class="line">            compressed: false</span><br><span class="line">            Statistics: Num rows: 2090293 Data size: 225751649 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">            table:</span><br><span class="line">                input format: org.apache.hadoop.mapred.SequenceFileInputFormat</span><br><span class="line">                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat</span><br><span class="line">                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe</span><br><span class="line"></span><br><span class="line">  Stage: Stage-0</span><br><span class="line">    Fetch Operator</span><br><span class="line">      limit: -1</span><br><span class="line">      Processor Tree:</span><br><span class="line">        ListSink</span><br></pre></td></tr></table></figure><p>STAGE DEPENDENCIES描述了作业之间的依赖关系，即Stage-0依赖Stage-1的执行结果 。Stage-1表示如下的SQL，即<code>SQL select * from prac.student_tb_txt where s_age&lt;30 and s_name like &#39;%红&#39;</code>的执行结果。</p><p>Stage—1分为Map和 Reduce两个阶段，对应的执行计划关键词解读如下:</p><ul><li>MapReduce:表示当前任务执行所用的计算引擎是 MapReduce</li><li>Map Operator Tree当前描述的Map阶段执行的操作信息。<br>Reduce Operator Tree:表示当前描述的是 Reduce阶段的操作信息。</li></ul><p>Map操作树（Map Operator Tree）信息解读如下:</p><ul><li>TableScan:表示对关键字 alias声明的结果集，这里指代 student tb orc，进行表扫描操作。</li><li>Statistics:表示对当前阶段的统计信息。例如，当前处理的数据行和数据量，这两个都是预估值。</li><li>Filter Operator:表示在之前操作(TableScan)的结果集上进行数据的过滤</li><li>predicate:表示 filter Operator进行过滤时，所用的谓词，即s＿age&lt;30 and s_e like ‘’％红％’’。</li><li>Select Operator:表示在之前的结果集上对列进行投影，即筛选列。</li><li>expressions:表示需要投影的列，即筛选的列。</li><li>outputColumnNames:表示输出的列名。</li></ul><ul><li>Group By Operator:表示在之前的结果集上分组聚合。</li><li>aggregations:表示分组聚合使用的算法，这里是 count(1)。</li><li>keys:表示分组的列，在该例子表示的是s＿age</li><li>Reduce output Operator:表示当前描述的是对之前结果聚会后的输出信息，这里表示Map端聚合后的输出信息。</li><li>key expressions/value expressions: MapReduce计算引擎，在Map阶段和 Reduce阶段输出的都是键-值对的形式，这里 key expression value expressions分别描述的就是Map阶段输出的键(key)和值(value)所用的数据列这里的例子 key expressions指代的就是s＿age列， value expressions指代的就是 count(1)列。</li><li>sort order:表示输出是否进行排序，+表示正序，-表示倒序。</li><li>Map- -reduce partition columns:表示Map阶段输出到 Reduce阶段的分区列，在Hive-SQL中，可以用 distribute by指代分区的列。</li><li>Reduce阶段所涉及的关键词与Map阶段的关键词是一样的，字段表示含义也相同，<br>因此这里不再罗列。下面是 Reduce中出现但是在Map阶段没有出现的关键词。</li><li>compressed:在 File Output Operator中这个关键词表示文件输出的结果是否进行压缩， false表示不进行输出压缩。</li><li>table:表示当前操作表的信息。</li><li>input format/output format:分别表示文件输入和输出的文件类型。</li><li>serde:表示读取表数据的序列化和反序列化的方式。</li></ul><h2 id="开启map端聚合"><a href="#开启map端聚合" class="headerlink" title="开启map端聚合"></a>开启map端聚合</h2><p>关闭map端聚合的情况下，普通Group by 的执行计划</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> hive.map.aggr=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">explain</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>,<span class="keyword">name</span> <span class="keyword">from</span> students <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">id</span>,<span class="keyword">name</span>;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">STAGE DEPENDENCIES:</span><br><span class="line">  Stage-1 is a root stage</span><br><span class="line">  Stage-0 depends on stages: Stage-1</span><br><span class="line"></span><br><span class="line">STAGE PLANS:</span><br><span class="line">  Stage: Stage-1</span><br><span class="line">    Map Reduce</span><br><span class="line">      Map Operator Tree:</span><br><span class="line">          TableScan</span><br><span class="line">            alias: students</span><br><span class="line">            Statistics: Num rows: 1 Data size: 22 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">            Select Operator</span><br><span class="line">              expressions: id (type: string), name (type: string)</span><br><span class="line">              outputColumnNames: id, name</span><br><span class="line">              Statistics: Num rows: 1 Data size: 22 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">              Reduce Output Operator</span><br><span class="line">                key expressions: id (type: string), name (type: string)</span><br><span class="line">                sort order: ++</span><br><span class="line">                Map-reduce partition columns: id (type: string), name (type: string)</span><br><span class="line">                Statistics: Num rows: 1 Data size: 22 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">      Reduce Operator Tree:</span><br><span class="line">        Group By Operator</span><br><span class="line">          keys: KEY._col0 (type: string), KEY._col1 (type: string)</span><br><span class="line">          mode: complete</span><br><span class="line">          outputColumnNames: _col0, _col1</span><br><span class="line">          Statistics: Num rows: 1 Data size: 22 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">          File Output Operator</span><br><span class="line">            compressed: false</span><br><span class="line">            Statistics: Num rows: 1 Data size: 22 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">            table:</span><br><span class="line">                input format: org.apache.hadoop.mapred.SequenceFileInputFormat</span><br><span class="line">                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat</span><br><span class="line">                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe</span><br><span class="line"></span><br><span class="line">  Stage: Stage-0</span><br><span class="line">    Fetch Operator</span><br><span class="line">      limit: -1</span><br><span class="line">      Processor Tree:</span><br><span class="line">        ListSink</span><br></pre></td></tr></table></figure><p>可以看到Group by操作在Reduce阶段，模式为complete。</p><p>下面开启map端聚合测试普通的Group by</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hive&gt; set hive.map.aggr=true;</span><br><span class="line">hive&gt; explain</span><br><span class="line">    &gt; select id,name from students group by id,name;</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">STAGE DEPENDENCIES:</span><br><span class="line">  Stage-1 is a root stage</span><br><span class="line">  Stage-0 depends on stages: Stage-1</span><br><span class="line"></span><br><span class="line">STAGE PLANS:</span><br><span class="line">  Stage: Stage-1</span><br><span class="line">    Map Reduce</span><br><span class="line">      Map Operator Tree:</span><br><span class="line">          TableScan</span><br><span class="line">            alias: students</span><br><span class="line">            Statistics: Num rows: 1 Data size: 22 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">            Select Operator</span><br><span class="line">              expressions: id (type: string), name (type: string)</span><br><span class="line">              outputColumnNames: id, name</span><br><span class="line">              Statistics: Num rows: 1 Data size: 22 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">              Group By Operator</span><br><span class="line">                keys: id (type: string), name (type: string)</span><br><span class="line">                mode: hash</span><br><span class="line">                outputColumnNames: _col0, _col1</span><br><span class="line">                Statistics: Num rows: 1 Data size: 22 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">                Reduce Output Operator</span><br><span class="line">                  key expressions: _col0 (type: string), _col1 (type: string)</span><br><span class="line">                  sort order: ++</span><br><span class="line">                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)</span><br><span class="line">                  Statistics: Num rows: 1 Data size: 22 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">      Reduce Operator Tree:</span><br><span class="line">        Group By Operator</span><br><span class="line">          keys: KEY._col0 (type: string), KEY._col1 (type: string)</span><br><span class="line">          mode: mergepartial</span><br><span class="line">          outputColumnNames: _col0, _col1</span><br><span class="line">          Statistics: Num rows: 1 Data size: 22 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">          File Output Operator</span><br><span class="line">            compressed: false</span><br><span class="line">            Statistics: Num rows: 1 Data size: 22 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line">            table:</span><br><span class="line">                input format: org.apache.hadoop.mapred.SequenceFileInputFormat</span><br><span class="line">                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat</span><br><span class="line">                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe</span><br><span class="line"></span><br><span class="line">  Stage: Stage-0</span><br><span class="line">    Fetch Operator</span><br><span class="line">      limit: -1</span><br><span class="line">      Processor Tree:</span><br><span class="line">        ListSink</span><br></pre></td></tr></table></figure><p>可以看到Group by操作被提到了Map阶段，模式为 <strong>hash</strong>，而在Reduce阶段，同样进行了一次Group by操作，但这次的模式为<strong>mergepartial</strong>，也就是把Map阶段和结果合并起来。</p><p>[1]林志煌.Hive性能调优实战[E]机械工业出版社,2020.01</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近当当网书香节，满100减50，购物车里的书迫不及待的下单买了，5折价格真香。&lt;/p&gt;&lt;p&gt;拿到手后花了约一周时间把&lt;a href=&quot;https://u.dangdang.com/xjGKA&quot;&gt;《Hive性能调优实战》&lt;/a&gt; 这本看完了。&lt;/p&gt;&lt;p&gt;&lt;img src=
      
    
    </summary>
    
      <category term="数据仓库" scheme="https://mapan.tech/cn/categories/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>从源码看HBase的写入流程</title>
    <link href="https://mapan.tech/cn/d6ca.html"/>
    <id>https://mapan.tech/cn/d6ca.html</id>
    <published>2020-04-04T13:53:50.000Z</published>
    <updated>2020-04-04T14:40:06.619Z</updated>
    
    <content type="html"><![CDATA[<p>最近在看HBase，琢磨了一下HBase的写入流程，我的测试环境安装的HBase版本是2.1.0-cdh6.3.2，那么直接在IDEA配置好POM文件，下载对应版本的Jar包和文档，找到<code>org.apache.hadoop.hbase.regionserver.HRegion.java</code>，开撕源码。<br>可以找到源码中关于这部分的注释比较清晰明了：</p><blockquote><p>STEP 1. Try to acquire as many locks as we can and build mini-batch of operations with<br>locked rows</p><p>STEP 2. Update mini batch of all operations in progress with LATEST_TIMESTAMP timestamp<br>We should record the timestamp only after we have acquired the rowLock,<br>otherwise, newer puts/deletes are not guaranteed to have a newer timestamp</p><p>STEP 3. Build WAL edit</p><p>STEP 4. Append the WALEdits to WAL and <strong>SYNC</strong>.</p><p>STEP 5. Write back to memStore</p><p>STEP 6. Complete MiniBatchOperations: If required calls postBatchMutate() CP hook and<br>complete mvcc for last writeEntry</p><p>STEP 7. Apply to memstore</p></blockquote><p>首先HBase首先获取一些锁，在导入的包中，可以发现<code>import java.util.concurrent.locks.Lock;</code><br>不难看出这里的获取的锁是JUC的锁。</p><p>然后构建<code>mini-batch</code>，并使用最后的时间戳来更新mini-batch；</p><p>把操作追加到WAL并且<strong>同步</strong>。</p><p>再写入menStore，写入成功以后才在Finally中释放锁。</p><p>Hbase2.1.0版本与1.3.1版本相比，有了不少的改进：</p><ol><li>加入了mini-batch，每次更新是针对小批量的操作，提高了整体的吞吐率；</li><li>WAL的同步时机不同，在1.3.1版本中是先写入WALedits，再写入memStore，最后才对WAL进行同步，在2.1.0版本中的顺序变成了先写WAL并同步，然后再写memStore。在2.1.0的顺序更加符合我们的逻辑，理解起来也更简单。</li></ol><p>总结一下HBase的写入逻辑：</p><ol><li>Client先访问zookeeper，获取hbase:meta表位于哪个Region Server。</li><li>访问对应的Region Server，获取hbase:meta表，根据读请求的namespace:table/rowkey，查询出目标数据位于哪个Region Server中的哪个Region中。并将该table的region信息以及meta表的位置信息缓存在客户端的meta cache，方便下次访问。</li><li>与目标Region Server进行通讯；</li><li>将数据顺序追加到WAL；</li><li>将数据写入对应的MemStore，数据会在MemStore进行排序；</li><li>向客户端发送ack；</li><li>等达到MemStore的刷写时机后，将数据刷写到HFile。</li></ol><p>看过源码之后，对于HBase的写入有了更深入的认识。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在看HBase，琢磨了一下HBase的写入流程，我的测试环境安装的HBase版本是2.1.0-cdh6.3.2，那么直接在IDEA配置好POM文件，下载对应版本的Jar包和文档，找到&lt;code&gt;org.apache.hadoop.hbase.regionserver.H
      
    
    </summary>
    
      <category term="HBase" scheme="https://mapan.tech/cn/categories/HBase/"/>
    
    
  </entry>
  
  <entry>
    <title>Hive的一次踩坑</title>
    <link href="https://mapan.tech/cn/26a5.html"/>
    <id>https://mapan.tech/cn/26a5.html</id>
    <published>2020-03-28T14:39:39.000Z</published>
    <updated>2020-05-12T16:09:37.983Z</updated>
    
    <content type="html"><![CDATA[<p>今天周末，新冠疫情虽然已经逐渐退去，但仍然不能掉以轻心，而且外面还在下雨，正是窝在家看书的好时机，拿出《Hive编程指南》再看一遍，书读百遍，其义自见，这种经典书每看一遍都会有新的收获。当然光看书是不行的，学习必须要有输出，必须要上手实际操作才会印象深刻。</p><p>今天按照书上关于分区的部分实际上手操作了一把，发现还是有一些坑在里面的。</p><p>本文测试环境：<code>2.1.1-cdh6.3.2, rb3393cf499504df1d2a12d34b4285e5d0c02be11</code></p><h3 id="1-字段注释乱码"><a href="#1-字段注释乱码" class="headerlink" title="1. 字段注释乱码"></a>1. 字段注释乱码</h3><p>在建表时没有添加<code>COMMENT 字段注释</code>，后面我想通过<code>ALTER TABLE</code>给表字段添加注释时候，发现添加后是<code>??</code>，那么肯定是字符集设置的有问题。打开MySQL，进入Hive的元数据的数据库<br>修改<code>表注释</code>和<code>字段注释</code>在MySQL数据库中对应的字段字符类型。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">alter table COLUMNS_V2 modify column COMMENT varchar(256) character set utf8;</span><br><span class="line"></span><br><span class="line">alter table TABLE_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8;</span><br><span class="line"></span><br><span class="line">alter table PARTITION_KEYS modify column PKEY_COMMENT varchar(4000) character set utf8;</span><br></pre></td></tr></table></figure><p></p><p>再次执行ALTER TABLE 修改表注释，然后DESC 表名，字段注释恢复成中文，问题解决。</p><p>我安装的是MySQL5.7版本，由于强迫症，我直接修改了MySQL的配置文件<br>root用户下 <code>vim /etc/my.cnf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 在[mysqld]下添加两行</span><br><span class="line">character_set_server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br><span class="line"></span><br><span class="line"># 新添加两行</span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure><p>最后重新启动MySQL<br><code>systemctl restart mysqld</code><br>【请勿模仿】而且我还尝试修改了MySQL中的<code>hive</code>库的编码方式为<code>utf8</code>，以及<code>hive</code>库下所有的表的编码方式为<code>utf8</code>,后来才看到网上有文章说有不要改，否则有意外的惊喜。不过我启动集群，暂时一切正常。</p><h3 id="2-外部分区表新增字段后插入数据为NULL"><a href="#2-外部分区表新增字段后插入数据为NULL" class="headerlink" title="2. 外部分区表新增字段后插入数据为NULL"></a>2. 外部分区表新增字段后插入数据为NULL</h3><p>这个坑可以稳定复现</p><p>描述：</p><p><strong>对于分区表新增字段，向已存在分区中插入数据，新增字段的值全部为NULL。</strong></p><p><strong>已存在</strong>分区有此问题，新分区并不会产生该问题；</p><p>无论是管理表还是外部表都有该问题。</p><p>网上搜索答案，在新增字段后，对表进行<code>msck repair table tablename</code>，实际验证此方法无效。</p><p>复现过程：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> temp01;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> temp01(<span class="keyword">id</span> <span class="keyword">string</span>,<span class="keyword">name</span> <span class="keyword">string</span>) partitioned <span class="keyword">by</span> (sex <span class="keyword">string</span>) </span><br><span class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">','</span> <span class="keyword">stored</span> <span class="keyword">as</span> textfile;</span><br><span class="line"><span class="comment">-- 添加分区</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> temp01 <span class="keyword">add</span> <span class="keyword">partition</span>(sex=<span class="string">'M'</span>);</span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> temp01 <span class="keyword">partition</span> (sex=<span class="string">"M"</span>) </span><br><span class="line"><span class="keyword">select</span> <span class="string">"1001"</span>,<span class="string">"张三"</span>;</span><br><span class="line"><span class="comment">-- 查询</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> temp01;</span><br></pre></td></tr></table></figure><p><img src="/cn/26a5/image-20200328232729273.png" alt="image-20200328232729273"></p><p>到这里一切正常</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> temp01 <span class="keyword">add</span> <span class="keyword">columns</span> (birth <span class="keyword">String</span> <span class="keyword">comment</span> <span class="string">"生日"</span>);</span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> temp01 <span class="keyword">partition</span> (sex=<span class="string">"M"</span>) </span><br><span class="line"><span class="keyword">select</span> <span class="string">"1001"</span>,<span class="string">"刘备"</span>,<span class="string">"1999-08-09"</span>;</span><br><span class="line"><span class="comment">-- 查看</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> temp01;</span><br></pre></td></tr></table></figure><p>下面就出问题了，刘备同学的生日实际提示是插入成功了，但这里显示为NULL。</p><p><img src="/cn/26a5/image-20200328232907371.png" alt="image-20200328232907371"></p><p>其实问题很简单，分区表的元数据没有更新导致的。</p><p>首选的方法是针对该分区单独增加字段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table temp01 partition(sex=‘M’) add columns(birth string comment ‘生日’);</span><br></pre></td></tr></table></figure><p>另外一种方法是重建该分区，如果是内部表，信息也会被删除。（不建议）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 重建分区</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> temp01 <span class="keyword">drop</span> <span class="keyword">partition</span> (sex=<span class="string">"M"</span>);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> temp01 <span class="keyword">add</span> <span class="keyword">partition</span> (sex=<span class="string">"M"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> temp01;</span><br></pre></td></tr></table></figure><p>刘备同学的生日已经出现了。</p><p><img src="/cn/26a5/image-20200328233140947.png" alt="image-20200328233140947"></p><p>【附】：<a href="26a5/Hive编程指南.pdf" target="_blank">《Hive编程指南》PDF下载</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天周末，新冠疫情虽然已经逐渐退去，但仍然不能掉以轻心，而且外面还在下雨，正是窝在家看书的好时机，拿出《Hive编程指南》再看一遍，书读百遍，其义自见，这种经典书每看一遍都会有新的收获。当然光看书是不行的，学习必须要有输出，必须要上手实际操作才会印象深刻。&lt;/p&gt;&lt;p&gt;今天
      
    
    </summary>
    
      <category term="数据仓库" scheme="https://mapan.tech/cn/categories/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>记录一次Hive中遇到的问题</title>
    <link href="https://mapan.tech/cn/f16a.html"/>
    <id>https://mapan.tech/cn/f16a.html</id>
    <published>2020-03-26T12:56:47.000Z</published>
    <updated>2020-03-26T13:06:00.505Z</updated>
    
    <content type="html"><![CDATA[<p>今天在测试MapJoin对优化作用的提升的时候，使用普通用户mapan在命令行hive-cli里跑一段的MapJoin得到测试HQL，发现报如下错误，学会看报错日志是非常好的解决问题的方法，通过看日志能够解决大部分常见的的问题。关键日志如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">2020-03-26 20:42:36,065 main ERROR RandomAccessFileManager </span><br><span class="line">(/var/log/hive/operation_logs/7cbc9115-f9e8-4554-99f2-</span><br><span class="line">196aced99788/mapan_20200326204229_2b889f65-cc49-4de5-b3b5-0bccd05b3812) </span><br><span class="line">java.io.IOException: Could not create directory </span><br><span class="line">/var/log/hive/operation_logs/7cbc9115-f9e8-4554-99f2-196aced99788 </span><br><span class="line">java.io.IOException: Could not create directory </span><br><span class="line">/var/log/hive/operation_logs/7cbc9115-f9e8-4554-99f2-196aced99788</span><br><span class="line">at org.apache.logging.log4j.core.util.FileUtils.mkdir(FileUtils.java:119)</span><br><span class="line">at org.apache.logging.log4j.core.util.FileUtils.makeParentDirs(FileUtils.java:136)</span><br><span class="line">at org.apache.logging.log4j.core.appender.RandomAccessFileManager$RandomAccessFileManagerFactory.createManager(RandomAccessFileManager.java:198)</span><br><span class="line">at org.apache.logging.log4j.core.appender.RandomAccessFileManager$RandomAccessFileManagerFactory.createManager(RandomAccessFileManager.java:177)</span><br><span class="line">at org.apache.logging.log4j.core.appender.AbstractManager.getManager(AbstractManager.java:112)</span><br><span class="line">at org.apache.logging.log4j.core.appender.OutputStreamManager.getManager(OutputStreamManager.java:114)</span><br><span class="line">at org.apache.logging.log4j.core.appender.RandomAccessFileManager.getFileManager(RandomAccessFileManager.java:74)</span><br><span class="line">at org.apache.hadoop.hive.ql.log.HushableRandomAccessFileAppender.createAppender(HushableRandomAccessFileAppender.java:178)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">at org.apache.logging.log4j.core.config.plugins.util.PluginBuilder.build(PluginBuilder.java:132)</span><br><span class="line">at org.apache.logging.log4j.core.config.AbstractConfiguration.createPluginObject(AbstractConfiguration.java:952)</span><br><span class="line">at org.apache.logging.log4j.core.config.AbstractConfiguration.createConfiguration(AbstractConfiguration.java:892)</span><br><span class="line">at org.apache.logging.log4j.core.appender.routing.RoutingAppender.createAppender(RoutingAppender.java:271)</span><br><span class="line">at org.apache.logging.log4j.core.appender.routing.RoutingAppender.getControl(RoutingAppender.java:255)</span><br><span class="line">at org.apache.logging.log4j.core.appender.routing.RoutingAppender.append(RoutingAppender.java:225)</span><br><span class="line">at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:156)</span><br><span class="line">at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:129)</span><br><span class="line">at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:120)</span><br><span class="line">at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)</span><br><span class="line">at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:448)</span><br><span class="line">at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:433)</span><br><span class="line">at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:417)</span><br><span class="line">at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:403)</span><br><span class="line">at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)</span><br><span class="line">at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)</span><br><span class="line">at org.apache.logging.log4j.spi.AbstractLogger.logMessageSafely(AbstractLogger.java:2091)</span><br><span class="line">at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1993)</span><br><span class="line">at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1852)</span><br><span class="line">at org.apache.logging.slf4j.Log4jLogger.info(Log4jLogger.java:179)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.mapjoin.MapJoinMemoryExhaustionHandler.&lt;init&gt;(MapJoinMemoryExhaustionHandler.java:61)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.HashTableSinkOperator.initializeOp(HashTableSinkOperator.java:129)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:358)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:546)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.Operator.initializeChildren(Operator.java:498)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:368)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:546)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.Operator.initializeChildren(Operator.java:498)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:368)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:546)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.Operator.initializeChildren(Operator.java:498)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.Operator.initialize(Operator.java:368)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.mr.MapredLocalTask.initializeOperators(MapredLocalTask.java:514)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.mr.MapredLocalTask.startForward(MapredLocalTask.java:418)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.mr.MapredLocalTask.executeInProcess(MapredLocalTask.java:393)</span><br><span class="line">at org.apache.hadoop.hive.ql.exec.mr.ExecDriver.main(ExecDriver.java:779)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">at org.apache.hadoop.util.RunJar.run(RunJar.java:313)</span><br><span class="line">at org.apache.hadoop.util.RunJar.main(RunJar.java:227)</span><br></pre></td></tr></table></figure><p>很明显日志中提到如下关键错误:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">main ERROR RandomAccessFileManager </span><br><span class="line">(/var/log/hive/operation_logs/7cbc9115-f9e8-4554-99f2-</span><br><span class="line">196aced99788/mapan_20200326204229_2b889f65-cc49-4de5-b3b5-0bccd05b3812)</span><br><span class="line">java.io.IOException: Could not create directory</span><br></pre></td></tr></table></figure><p></p><p>由于我是使用的mapan用户登录并运行的hive-cli,所以我猜测是由于mapan用户没有<code>/var/log/hive/operation_logs/</code>的权限所导致的。切换hive用户尝试<br><code>sudo -u hive hive</code>进入hive-cli,然后跑同样一段HQL发现可以正常运行，OK那么问题基本可以确定了，给对应目录添加写权限即可。<br><code>sudo chmod -R o+w /var/log/hive/operation_logs/</code><br>再次使用mapan用户进入hive -cli,跑同样的HQL，没有再报错，问题解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天在测试MapJoin对优化作用的提升的时候，使用普通用户mapan在命令行hive-cli里跑一段的MapJoin得到测试HQL，发现报如下错误，学会看报错日志是非常好的解决问题的方法，通过看日志能够解决大部分常见的的问题。关键日志如下：&lt;/p&gt;&lt;figure clas
      
    
    </summary>
    
      <category term="数据仓库" scheme="https://mapan.tech/cn/categories/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>Hive优化</title>
    <link href="https://mapan.tech/cn/626f.html"/>
    <id>https://mapan.tech/cn/626f.html</id>
    <published>2020-03-25T12:07:49.000Z</published>
    <updated>2020-03-29T02:07:28.248Z</updated>
    
    <content type="html"><![CDATA[<p>平常工作中写HiveSQL比较多，对于一些常见的Hive问题和优化做一下总结：</p><h3 id="1-MapJoin"><a href="#1-MapJoin" class="headerlink" title="1. MapJoin"></a>1. MapJoin</h3><p>如果不指定<code>Mapjoin</code>或者不符合<code>MapJoin</code>的条件，那么Hive解析器会将<code>Join</code>操作转换成<code>Common Join</code>, 即在<code>Reduce</code>阶段完成<code>Join</code>，容易发生数据倾斜。这时可以使用MapJoin把小表全部加载到内存中在<code>Map</code>端进行<code>Join</code>，避免<code>Reduce</code>处理。</p><h3 id="2-行列过滤"><a href="#2-行列过滤" class="headerlink" title="2. 行列过滤"></a>2. 行列过滤</h3><p>列处理：在SELECT中，只拿需要处理的列。如非必要，尽量避免SELECT *；</p><p>行处理：尽早的过滤数据，减少每个阶段的数据量，对于分区表尽量使用分区过滤。</p><h3 id="3-尽量原子化操作"><a href="#3-尽量原子化操作" class="headerlink" title="3. 尽量原子化操作"></a>3. 尽量原子化操作</h3><p>尽量避免一个SQL包含复杂的逻辑，可以创建临时表来完成复杂的逻辑。</p><h3 id="4-采用分区技术"><a href="#4-采用分区技术" class="headerlink" title="4. 采用分区技术"></a>4. 采用分区技术</h3><p>可以把数据根据数据量按照天或者按照周、月来分区。</p><h3 id="5-合理设置Map数量和Reduce数"><a href="#5-合理设置Map数量和Reduce数" class="headerlink" title="5. 合理设置Map数量和Reduce数"></a>5. 合理设置Map数量和Reduce数</h3><p>Hive中的SQL查询会生成执行计划，执行计划以MapReduce的方式执行，那么结合数据和集群的大小，Map和Reduce的数量就会影响到SQL的执行效率，除了要控制Hive生成的Job的数量，也要控制map和reduce的数量。</p><h4 id="Map的数量"><a href="#Map的数量" class="headerlink" title="Map的数量"></a>Map的数量</h4><p>通常情况下，作业会通过input的目录产生一个或者多个map任务。<br>主要决定因素有：input的文件总个数，input的文件大小，集群设置的文件块大小。<br>Hive中默认的<code>hive.input.format</code>是<code>org.apache.hadoop.hive.ql.io.CombineHivelnputFormat</code>，对于<code>combineHiveInputFormat</code>，它的输入的map数量由三个配置决定：<br><code>mapred.min.split.size.per.node</code> 一个节点上split的至少的大小<br><code>mapred.min.split.size.per.rack</code> 一个交换机下split 至少的大小<br><code>mapred.max.split.size</code> 一个split 最大的大小<br>主要思路是把输入目录下的大文件分成多个map的输入，并合并小文件，做为一个map的输入<br>具体的原理是下述三步：</p><p>a) 根据输入目录下的每个文件，如果其长度超过<code>mapred.max.split.size</code>，以Block 为单位分成多个Split（一个Split是一个map的输入），每个split的长度都大于<code>mapred.max.split.size</code>，因为以Block为单位，因此也会大于·<code>BlockSize</code>，此文件剩下的长度如果大于<code>mapred.min.split.size.per.node</code>，则生成一个Split，否则先暂时保留；</p><p>b) 现在剩下的都是一些长度较短的碎片，把每个rack 下碎片合并，只要长度超过<br><code>mapred.max.split.size</code>就合并成一-个 split，最后如果剩下的碎片比<code>mapred.min.split.size.per.rack</code> 大，就合并成一个split，否则暂时保留；</p><p>c) 把不同rack下的碎片合并，只要长度超过<code>mapred.max.split.size</code>就合并成一个 split，剩下的碎片无论长度，合并成一个split。</p><h4 id="Reduce的数量"><a href="#Reduce的数量" class="headerlink" title="Reduce的数量"></a>Reduce的数量</h4><p>reduce数量由以下三个参数决定：</p><ul><li><code>mapred.reduce.tasks</code>（强制指定reduce的任务数量）</li><li><code>hive.exec.reducers.bytes.per.reducer</code>（每个reduce任务处理的数据量，默认为1000^3=1G）</li><li><code>hive.exec.reducers.max</code>（每个任务最大的reduce数，默认为999）<br>计算reducer 数的公式:<br><code>N=min(hive.exec.reducers.max，总输入数据量/hive.exec.reducers.bytes.per.reducer)</code></li></ul><h3 id="6-注意Join的使用"><a href="#6-注意Join的使用" class="headerlink" title="6. 注意Join的使用"></a>6. 注意Join的使用</h3><p>把重复关联键少的表放在join前面，可以提高join效率。网上所谓的<code>hive会将join前面的表放在内存中，把小表放在前面能减少内存资源消耗</code>这种说法在现在看来其实是有异议的。用1条记录的表和3亿条记录的表做join，无论小表是放在join的前面还是join的后面，执行的时间几乎都是相同的，原因是因为Hive在早期某个版本中，底层对此进行了优化。</p><h3 id="7-小文件处理"><a href="#7-小文件处理" class="headerlink" title="7. 小文件处理"></a>7. 小文件处理</h3><p><code>HiveInputFormat</code>没有对小文件的合并功能<br>可以使用<code>Combinefileinputformat</code>，将多个小文件打包作为一个整体的inputsplit，减少map任务数<br><code>set mapred.max.split.size=256000000</code>;<br><code>set mapred.min.split.size.per.node= 256000000</code>；<br><code>set mapred.min.split.size.per.rack=256000000</code>;<br><code>set hive.input.format=org.apache.hadoop.hive.ql.io.CombineHivelnputFormat</code>;</p><p>设置hive参数，额外启动-一个MR Job打包小文件:<br><code>hive.merge.mapredfiles=false</code> 是否合并Reduce 输出文件，默认为False<br><code>hive.merge.size.per.task = 256*1000*1000</code> 合并文件的大小</p><h3 id="8-注意数据倾斜"><a href="#8-注意数据倾斜" class="headerlink" title="8. 注意数据倾斜"></a>8. 注意数据倾斜</h3><p>a) 通过 <code>hive.groupby.skewindata=true</code>控制生成两个MR Job，第一个 MR Job Map的输出结果随机分配到reduce做次预汇总，减少某些key值条数过多某些key条数过小造成的数据倾斜问题；</p><p>b) 通过<code>hive.map.aggr = true</code>（默认为true）在Map端做combiner，假如map各条数据基本上不一样，聚合没什么意义，做combiner反而画蛇添足，hive里也考虑的比较周到通过参数<br><code>hive.groupby.mapaggr.checkinterval = 100000</code>（默认）</p><p><code>hive.map.aggr.hash.min.reduction=0.5</code>（默认），预先取100000条数据聚合，如果聚合后的条数/100000&gt;0.5，则不再聚合。</p><h3 id="9-合理使用multi-insert，union-all"><a href="#9-合理使用multi-insert，union-all" class="headerlink" title="9. 合理使用multi insert，union all"></a>9. 合理使用multi insert，union all</h3><p><code>multi insert</code>适合基于同一个源表按照不同逻辑不同粒度处理插入不同表的场景，做到只需要扫描源表一次，job个数不变，减少源表扫描次数；</p><p>union all用好，可减少表的扫描次数，减少job 的个数，通常预先按不同逻辑不同条件生成的查询<code>union all</code>后，再统一<code>Group by</code>计算，不同表的<code>union all</code>相当于<code>multiple inputs</code>，同一个表的<code>union all</code>，相当map一次输出多条。</p><h3 id="10-Group优化"><a href="#10-Group优化" class="headerlink" title="10.Group优化"></a>10.Group优化</h3><p>对于Group操作，首先在map端聚合，最后在reduce端做聚合，以下是相关的参数:<br><code>hive.map.aggr=true</code>是否在Map端进行聚合，默认为True,<br><code>hive.groupby.mapaggr.checkinterval= 100000</code>在Map端进行聚合操作的条目数目。</p><h3 id="11-使用压缩"><a href="#11-使用压缩" class="headerlink" title="11. 使用压缩"></a>11. 使用压缩</h3><p>设置map端输出，中间结果压缩。不完全解决数据倾斜问题，但是减少了IO读写和网络传输，能提高很多效率。</p><p><code>set hive.exec.compress.intermediate = true;</code></p><p>对于中间数据压缩，选择一个低CPU开销的Codec要比选择一个压缩率高的Codec要重要的多。</p><p><code>SnappyCodec</code>是一个比较好的中间文件Codec，因为其很好的结合了低CPU开销和好的压缩执行效率。</p><h3 id="12-开启JVM重用"><a href="#12-开启JVM重用" class="headerlink" title="12. 开启JVM重用"></a>12. 开启JVM重用</h3><p>JVM重用是Hadoop调优参数的内容，对hive的性能具有非常大的影响，特别是对于很难避免小文件的场景或者Task特别多的场景，这类场景大多数执行时间都很短。Hadoop默认配置是使用JVM来执行map和reduce任务的，这时Jvm的启动过程可能会造成相当大的开销，尤其是执行的job包含有成千上万个task任务的情况。</p><p>JVM重用可以使得JVM实例在同一个JOB中重新使用N次，N的值可以在<code>Hadoop的mapre-site.xml</code>文件中进行设置<br><code>mapred.job.reuse.jvm.num.tasks</code><br>也可在hive的执行设置：<br><code>set mapred.job.reuse.jvm.num.tasks=10</code>;</p><p>JVM重用的一个缺点是，开启JVM重用将会一直占用使用到的task插槽，以便进行重用，直到任务完成后才能释放。如果某个不平衡的job中有几个<code>reduce task</code> 执行的时间要比其他<code>reduce task</code>消耗的时间多得多的话，那么保留的插槽就会一直空闲着却无法被其他的job使用，直到所有的task都结束了才会释放。</p><h3 id="13-使用动态分区"><a href="#13-使用动态分区" class="headerlink" title="13.使用动态分区"></a>13.使用动态分区</h3><p>在Hive中，有时候会希望根据输入的Key，把结果自动输出到不同的目录中，这可以通过动态分区来实现，就是把每一个 key当作一个 分区。<br>如果要启动动态分区，则需要进行下面的设置首先需要在hive语句中设置允许动态分区<br><code>set hive.exec.dynamic.partition=true</code>；<br><code>set hive.exec.dynamic.partition.mode=nonstrict</code>；<br>在动态分区有可能很大的情况下，还需要其他的调整<br><code>hive.exec.dynamic.partitions.pernode</code> 参数指的是每个节点上能够生成的最大分区，这个在最坏情况下应该是跟最大分区一样的值<br><code>hive.exec.dynamic.partitions.partitions</code> 参数指的是总共的最大的动态分区数<code>hive.exec.max.createdfiles</code>参数指的是能够创建的最多文件数（分区一多，文件必然就多了）<br>最后要注意的是select语句中要把distribute的key也select出来。</p><h3 id="14-使用列式存储"><a href="#14-使用列式存储" class="headerlink" title="14.使用列式存储"></a>14.使用列式存储</h3><p>根据数据的特点来进行技术选型：如果数据结构是比较扁平的，那么用<code>ORC</code> 比较合适，如果嵌套较多，就用 <code>Parquet</code>。<br>列存储主要有两个好处：数据压缩和查询性能提升，在节省了存储的同时还提升了查询性能，这个的收益是非常可观的。</p><h3 id="15-使用索引"><a href="#15-使用索引" class="headerlink" title="15.使用索引"></a>15.使用索引</h3><p>索引可以避免全表扫描和资源浪费<br>索引可以加快含有Group By语句的查询的计算速度<br><code>hive.optimize.index.filter=true</code>; 使用自动索引<br><code>hive.optimie.index.groupby=true</code>;使用聚合索引优化GROUP BY操作</p><h3 id="16-利用好EXPLAIN"><a href="#16-利用好EXPLAIN" class="headerlink" title="16.利用好EXPLAIN"></a>16.利用好EXPLAIN</h3><p>Explain命令对于优化查询语句很重要，针对某些查询语句，我们可以通过它查看各个执行计划，针对耗时的地方，采取优化。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;平常工作中写HiveSQL比较多，对于一些常见的Hive问题和优化做一下总结：&lt;/p&gt;&lt;h3 id=&quot;1-MapJoin&quot;&gt;&lt;a href=&quot;#1-MapJoin&quot; class=&quot;headerlink&quot; title=&quot;1. MapJoin&quot;&gt;&lt;/a&gt;1. MapJoin&lt;/
      
    
    </summary>
    
      <category term="数据仓库" scheme="https://mapan.tech/cn/categories/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>二分查找</title>
    <link href="https://mapan.tech/cn/a77d.html"/>
    <id>https://mapan.tech/cn/a77d.html</id>
    <published>2020-03-24T23:56:24.000Z</published>
    <updated>2020-03-25T00:06:04.920Z</updated>
    
    <content type="html"><![CDATA[<p>在学习Java的最初阶段，我们应该都写过一个猜数字的小程序，随机生成一个数字，让我们输入来猜，其实里面就用到了二分查找的思想。</p><p><img src="/cn/a77d/binarysearch.png" alt="binarysearch"></p><p>二分查找的思想：</p><ol><li>首先确定该数组的中间下表 mid = (left+right)/2；</li><li>然后让需要查找的数findVal和arr[mid]比较；</li><li>若findVal&gt;arr[mid],说明要查找的数在mid的右边，因此需要递归的向右查找；</li><li>若findVal&lt;arr[mid],说明要查找的数在mid的左边，因此需要递归的向左查找；</li><li>若findVal==arr[mid],说明要查找的数找到，就返回。</li></ol><p>结束递归条件:</p><ol><li>找到要查找的数，结束递归</li><li>递归完整个数组，仍然没有找到findVal,也需要结束递归，此时left&gt;right</li></ol><p>代码实现：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr     要查找的数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> left    左边的索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> right   右边的索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> findVal 要查找的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果找到就返回下边，如果没有找到就返回-1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right, <span class="keyword">int</span> findVal)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt; right) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (findVal &gt; arr[mid]) &#123;</span><br><span class="line">            <span class="keyword">return</span> binarySearch(arr, mid + <span class="number">1</span>, right, findVal);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (findVal &lt; arr[mid]) &#123;</span><br><span class="line">            <span class="keyword">return</span> binarySearch(arr, left, mid - <span class="number">1</span>, findVal);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在学习Java的最初阶段，我们应该都写过一个猜数字的小程序，随机生成一个数字，让我们输入来猜，其实里面就用到了二分查找的思想。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/cn/a77d/binarysearch.png&quot; alt=&quot;binarysearch&quot;&gt;&lt;/p&gt;&lt;p&gt;二分查找
      
    
    </summary>
    
      <category term="算法" scheme="https://mapan.tech/cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Hive的UDTF函数</title>
    <link href="https://mapan.tech/cn/6be3.html"/>
    <id>https://mapan.tech/cn/6be3.html</id>
    <published>2020-03-22T08:26:42.000Z</published>
    <updated>2020-03-23T00:02:17.119Z</updated>
    
    <content type="html"><![CDATA[<p>在一些应用场景中，需要对一个字段进行分割，形成多个字段，比如日志信息使用#号连接字段，那么在导入数据仓库的时候，使用UDTF函数就显得比较方便和得心应手了。<br>在Hive的官网上，可以看到最UDTF的介绍是这样的：</p><blockquote><h3 id="GenericUDTF-Interface"><a href="#GenericUDTF-Interface" class="headerlink" title="GenericUDTF Interface"></a>GenericUDTF Interface</h3><p>A custom UDTF can be created by extending the GenericUDTF abstract class and then implementing the initialize, process, and possibly close methods. The initialize method is called by Hive to notify the UDTF the argument types to expect. The UDTF must then return an object inspector corresponding to the row objects that the UDTF will generate. Once initialize() has been called, Hive will give rows to the UDTF using the process() method. While in process(), the UDTF can produce and forward rows to other operators by calling forward(). Lastly, Hive will call the close() method when all the rows have passed to the UDTF.</p></blockquote><p>那么自定义UDTF函数需要继承<code>GenericUDTF</code> 抽象方法，实现<code>initialize</code>，<code>process</code>，<code>close</code> 这三个方法。</p><p>其中<code>initialize</code>方法中声明了Hive中需要的参数类型。</p><p><code>process</code>方法中进行我们所期望的操作，并调用<code>forward</code>方法把内容写到hive对应的行中。</p><p>当所有的行都写完后，会执行<code>close</code>方法。</p><p>下面代码实现了输入一个String类型的字符串，输入分隔符。会按照分隔符分割，之后把内容进行输出。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tech.mapan.hive.udtf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.UDFArgumentException;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.metadata.HiveException;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.udf.generic.GenericUDTF;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExplodUDTF</span> <span class="keyword">extends</span> <span class="title">GenericUDTF</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;String&gt; outList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StructObjectInspector <span class="title">initialize</span><span class="params">(StructObjectInspector argOIs)</span> <span class="keyword">throws</span> UDFArgumentException </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.定义输出数据的列名和类型</span></span><br><span class="line">        List&lt;String&gt; fieldNames = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;ObjectInspector&gt; fieldOIs = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.添加输出数据的列名和类型</span></span><br><span class="line">        fieldNames.add(<span class="string">"lineToWord"</span>);</span><br><span class="line">        fieldOIs.add(PrimitiveObjectInspectorFactory.javaStringObjectInspector);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ObjectInspectorFactory.getStandardStructObjectInspector(fieldNames, fieldOIs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(Object[] args)</span> <span class="keyword">throws</span> HiveException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取原始数据</span></span><br><span class="line">        String arg = args[<span class="number">0</span>].toString();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.获取数据传入的第二个参数，此处为分隔符</span></span><br><span class="line">        String splitKey = args[<span class="number">1</span>].toString();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.将原始数据按照传入的分隔符进行切分</span></span><br><span class="line">        String[] fields = arg.split(splitKey);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.遍历切分后的结果，并写出</span></span><br><span class="line">        <span class="keyword">for</span> (String field : fields) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//集合为复用的，首先清空集合</span></span><br><span class="line">            outList.clear();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将每一个单词添加至集合</span></span><br><span class="line">            outList.add(field);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将集合内容写出</span></span><br><span class="line">            forward(outList);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> HiveException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打好jar包并放到对应目录后，创建函数，尝试执行一句简单的，可以看到<code>1001#Jack#18#1999-01-02#Male</code>已经被按照期望的形式分割出来。其中<code>linetoword</code>是在UDTF函数中定义的列名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hive (default)&gt; create <span class="keyword">function</span> mp_explod as <span class="string">"tech.mapan.hive.udtf.ExplodUDTF"</span>;</span><br><span class="line">OK</span><br><span class="line">Time taken: 0.03 seconds</span><br><span class="line"></span><br><span class="line">hive (default)&gt; select mp_explod(<span class="string">'1001#Jack#18#1999-01-02#Male'</span>,<span class="string">'#'</span>);</span><br><span class="line">OK</span><br><span class="line">linetoword</span><br><span class="line">1001</span><br><span class="line">Jack</span><br><span class="line">18</span><br><span class="line">1999-01-02</span><br><span class="line">Male</span><br><span class="line">Time taken: 12.29 seconds, Fetched: 5 row(s)</span><br></pre></td></tr></table></figure><p>实际上，UDF还有一种更直接的使用方法，可以直接把一个字段变成两个字段（或多个字段）输出，但这样的写法比较相对比较固定。其实在<code>initialize</code>方法里只需要多定义一个（或多个）字段即可，输出时，会自动按顺序填充到对应的字段位置上。写法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tech.mapan.hive.udtf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.UDFArgumentException;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.metadata.HiveException;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.udf.generic.GenericUDTF;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: udtf</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: UDTF函数,分割成两个字段</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: MaPan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-03-22 22:40</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExplodUDTF2</span> <span class="keyword">extends</span> <span class="title">GenericUDTF</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;String&gt; outList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StructObjectInspector <span class="title">initialize</span><span class="params">(StructObjectInspector argOIs)</span> <span class="keyword">throws</span> UDFArgumentException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.定义输出数据的列名和类型</span></span><br><span class="line">        List&lt;String&gt; fieldNames = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.添加输出数据的列名</span></span><br><span class="line">        fieldNames.add(<span class="string">"word1"</span>);</span><br><span class="line">        fieldNames.add(<span class="string">"word2"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.定义输出数据的类型</span></span><br><span class="line">        List&lt;ObjectInspector&gt; fieldOIs = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        fieldOIs.add(PrimitiveObjectInspectorFactory.javaStringObjectInspector);</span><br><span class="line">        fieldOIs.add(PrimitiveObjectInspectorFactory.javaStringObjectInspector);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ObjectInspectorFactory.getStandardStructObjectInspector(fieldNames, fieldOIs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(Object[] args)</span> <span class="keyword">throws</span> HiveException </span>&#123;</span><br><span class="line">        <span class="comment">//1.获取原始数据</span></span><br><span class="line">        String arg = args[<span class="number">0</span>].toString();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.获取数据传入的第二个参数，此处为分隔符</span></span><br><span class="line">        String splitKey = args[<span class="number">1</span>].toString();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.将原始数据按照传入的分隔符进行切分</span></span><br><span class="line">        String[] fields = arg.split(splitKey);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.遍历切分后的结果，并写出</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//集合为复用的，首先清空集合</span></span><br><span class="line">        outList.clear();</span><br><span class="line">        outList.add(fields[<span class="number">0</span>]);</span><br><span class="line">        outList.add(fields[<span class="number">1</span>]);</span><br><span class="line">        forward(outList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> HiveException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果如下，这样就把一个字段直接拆成了两个字段。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">create <span class="keyword">function</span> mp_explod as <span class="string">"tech.mapan.hive.udtf.ExplodUDTF2"</span>;</span><br><span class="line">OK</span><br><span class="line">Time taken: 0.029 seconds</span><br><span class="line"></span><br><span class="line">hive (prac)&gt; select * from test03;</span><br><span class="line">OK</span><br><span class="line">test03.idtest03.name</span><br><span class="line">1001jack<span class="comment">#ma</span></span><br><span class="line">1002dong<span class="comment">#liu</span></span><br><span class="line">1003poney<span class="comment">#ma</span></span><br><span class="line">Time taken: 0.522 seconds, Fetched: 3 row(s)</span><br><span class="line"></span><br><span class="line">hive (prac)&gt; select id,first_name,last_name from test03 lateral view mp_explod2(name,<span class="string">"#"</span>) temp as first_name,last_name;</span><br><span class="line">OK</span><br><span class="line">idfirst_namelast_name</span><br><span class="line">1001jackma</span><br><span class="line">1002dongliu</span><br><span class="line">1003poneyma</span><br><span class="line">Time taken: 13.393 seconds, Fetched: 3 row(s)</span><br></pre></td></tr></table></figure><p>补充一点：</p><p>关于Lateral View在官网这样介绍：</p><blockquote><h2 id="Lateral-View-Syntax"><a href="#Lateral-View-Syntax" class="headerlink" title="Lateral View Syntax"></a>Lateral View Syntax</h2><p><code>lateralView: LATERAL VIEW udtf(expression) tableAlias AS columnAlias (&#39;,&#39;columnAlias)*</code><br><code>fromClause: FROM baseTable (lateralView)*</code></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Lateral view is used in conjunction with user-defined table generating functions such as <code>explode()</code>. As mentioned in <a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF#LanguageManualUDF-Built-inTable-GeneratingFunctions(UDTF">Built-in Table-Generating Functions</a>), a UDTF generates zero or more output rows for each input row. A lateral view first applies the UDTF to each row of base table and then joins resulting output rows to the input rows to form a virtual table having the supplied table alias.</p></blockquote><p>Lateral View一般与用户自定义表生成函数（如explode()）结合使用。 如<a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF#LanguageManualUDF-Built-inTable-GeneratingFunctions(UDTF">内置表生成函数</a> 中所述，UDTF为每个输入行生成零个或多个输出行。 Lateral View 首先将UDTF应用于基表的每一行，然后将结果输出行连接到输入行，以形成具有提供的表别名的虚拟表。</p><p>附：<a href="6be3/udtf-1.0-SNAPSHOT.jar" target="_blank">jar包</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在一些应用场景中，需要对一个字段进行分割，形成多个字段，比如日志信息使用#号连接字段，那么在导入数据仓库的时候，使用UDTF函数就显得比较方便和得心应手了。&lt;br&gt;在Hive的官网上，可以看到最UDTF的介绍是这样的：&lt;/p&gt;&lt;blockquote&gt;&lt;h3 id=&quot;Gene
      
    
    </summary>
    
      <category term="数据仓库" scheme="https://mapan.tech/cn/categories/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>Hive的UDF函数</title>
    <link href="https://mapan.tech/cn/d960.html"/>
    <id>https://mapan.tech/cn/d960.html</id>
    <published>2020-03-21T14:36:35.000Z</published>
    <updated>2020-03-22T05:58:51.296Z</updated>
    
    <content type="html"><![CDATA[<p>Hive中给了很多系统函数，<a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF" target="_blank">官网</a> 给了很多函数可以参考。但是复杂的业务中，官方函数并不一定能满足特定化的需求，这时可以自定义函数来满足需求。</p><p>参考：官网中的关于UDF部分的<a href="https://cwiki.apache.org/confluence/display/Hive/HivePlugins" target="_blank">链接</a></p><h3 id="1-在IDEA中创建一个项目，配置pom-xml-添加依赖如下："><a href="#1-在IDEA中创建一个项目，配置pom-xml-添加依赖如下：" class="headerlink" title="1.  在IDEA中创建一个项目，配置pom.xml 添加依赖如下："></a>1. 在IDEA中创建一个项目，配置pom.xml 添加依赖如下：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hive<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hive-exec<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-创建一个类，例如创建一个把字符串全部转换为小写的UDF"><a href="#2-创建一个类，例如创建一个把字符串全部转换为小写的UDF" class="headerlink" title="2. 创建一个类，例如创建一个把字符串全部转换为小写的UDF"></a>2. 创建一个类，例如创建一个把字符串全部转换为小写的UDF</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tech.mapan.hive;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.UDF;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: UDF</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: UDF函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: MaPan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-03-22 09:13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Lower</span> <span class="keyword">extends</span> <span class="title">UDF</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">evaluate</span> <span class="params">(String s)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (s == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.toLowerCase();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-打jar包，把jar包放在-opt-local-hive-lib"><a href="#3-打jar包，把jar包放在-opt-local-hive-lib" class="headerlink" title="3. 打jar包，把jar包放在 /opt/local/hive/lib"></a>3. 打jar包，把jar包放在 /opt/local/hive/lib</h3><p>这一步就不在赘述，默认大家都会</p><h3 id="4-配置环境变量"><a href="#4-配置环境变量" class="headerlink" title="4. 配置环境变量"></a>4. 配置环境变量</h3><p>CDH<a href="https://docs.cloudera.com/documentation/enterprise/latest/topics/cm_mc_hive_udf.html#hive-aux-jars-dir" target="_blank">官网</a>写的在hive-site.xml中配置<code>hive.aux.jars.path</code>，但是我配置完后并没有生效，不过官网写</p><blockquote><p>The directory location is set in the environment as <code>HIVE_AUX_JARS_PATH</code> and will generally override the <code>hive.aux.jars.path</code> property set in XML files, even if <code>hive.aux.jars.path</code> is set in an advanced configuration snippet.</p></blockquote><p>意思就是环境变量的优先级要高于XML，所以建议直接配置环境变量。</p><p>在root用户下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile.d/hive.sh </span><br><span class="line"><span class="comment"># 添加如下内容并保存</span></span><br><span class="line"><span class="built_in">export</span> HIVE_AUX_JARS_PATH=/opt/<span class="built_in">local</span>/hive/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HIVE_AUX_JARS_PATH</span></span><br></pre></td></tr></table></figure><p>执行<code>source /etc/profile</code>刷新环境变量。</p><h3 id="5-进入hive-cli中，创建函数"><a href="#5-进入hive-cli中，创建函数" class="headerlink" title="5. 进入hive-cli中，创建函数"></a>5. 进入hive-cli中，创建函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hive (default)&gt; create <span class="keyword">function</span> mylower as <span class="string">"tech.mapan.hive.Lower"</span>;</span><br><span class="line">OK</span><br><span class="line">Time taken: 0.285 seconds</span><br><span class="line"></span><br><span class="line">hive (default)&gt;  select mylower(<span class="string">"HELLO WORLD"</span>);</span><br><span class="line">OK</span><br><span class="line">_c0</span><br><span class="line">hello world</span><br><span class="line">Time taken: 0.18 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure><p>这样就向系统添加了一个函数 mylower(), 退出hive-cli再次进入依然生效。</p><hr><p>随手写了几个常用的UDF函数:</p><ul><li>输入两个数，输出按位与的结果</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tech.mapan.hive;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.UDF;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: UDF</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 按位与</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: MaPan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-03-22 12:29</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BitAnd</span> <span class="keyword">extends</span> <span class="title">UDF</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">evaluate</span><span class="params">(String a, String b)</span> </span>&#123;</span><br><span class="line">        String result;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="keyword">null</span> ||b==<span class="keyword">null</span>)&#123;</span><br><span class="line">            result = <span class="keyword">null</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> i = Integer.parseInt(a);</span><br><span class="line">            <span class="keyword">int</span> j = Integer.parseInt(b);</span><br><span class="line">            result = Integer.toString(i &amp; j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>输入几个数，找出这些数中最大的数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tech.mapan.hive;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.UDF;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: UDF</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 求一组数中的最大值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: MaPan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-03-22 12:49</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Greatest</span> <span class="keyword">extends</span> <span class="title">UDF</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">evaluate</span><span class="params">(String... strings)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[strings.length];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (String s : strings) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                arr[i++] = Integer.parseInt(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; max) &#123;</span><br><span class="line">                max = arr[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Integer.toString(max);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>地址脱敏</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tech.mapan.hive;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.UDF;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: UDF</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 地址脱敏, 对长度超过15个字符串, 只保留前15个字符, 不超过15个则不截取, 全部返回。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: MaPan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-03-22 11:19</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaskAddress</span> <span class="keyword">extends</span> <span class="title">UDF</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">evaluate</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (s == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s.length() &gt; <span class="number">15</span>) &#123;</span><br><span class="line">            result = s.substring(<span class="number">0</span>, <span class="number">14</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result = s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>邮箱脱敏</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tech.mapan.hive;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.UDF;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: UDF</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 邮箱脱敏，@后面全部换成*</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: MaPan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-03-22 13:19</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaskMail</span> <span class="keyword">extends</span> <span class="title">UDF</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">evaluate</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        String res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (s == <span class="keyword">null</span>) &#123;</span><br><span class="line">            res = <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            String[] split = s.split(<span class="string">"@"</span>);</span><br><span class="line">            res = split[<span class="number">0</span>] + <span class="string">"@*****"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>单号脱敏</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tech.mapan.hive;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.UDF;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: UDF</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 单号脱敏，保留头部尾部各两位，其他全部换成*</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: MaPan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-03-22 13:25</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaskNo</span> <span class="keyword">extends</span> <span class="title">UDF</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">evaluate</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        String res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (s == <span class="keyword">null</span>) &#123;</span><br><span class="line">            res = <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res = s.substring(<span class="number">0</span>, <span class="number">2</span>) + <span class="string">"****"</span> + s.substring(s.length() - <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>手机号脱敏</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">package tech.mapan.hive;</span><br><span class="line"></span><br><span class="line">import org.apache.hadoop.hive.ql.exec.UDF;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @program: UDF</span><br><span class="line"> * @description: 手机号码脱敏，手机号码后6位换成*</span><br><span class="line"> * @author: MaPan</span><br><span class="line"> * @create: 2020-03-22 13:08</span><br><span class="line"> **/</span><br><span class="line">public class MaskPhone extends UDF &#123;</span><br><span class="line">    public String evaluate(String s) &#123;</span><br><span class="line">        String res = &quot;&quot;;</span><br><span class="line">        if (s == null) &#123;</span><br><span class="line">            res = null;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            res = s.substring(0, 5) + &quot;******&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>性别归一化</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> tech.mapan.hive;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.UDF;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: UDF</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 性别归一化，不同的系统中的性别不同有的是男和女，有的是F和M有的是1和0，针对不同的性别表示方式进行归一化</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: MaPan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2020-03-22 13:47</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GenderETL</span> <span class="keyword">extends</span> <span class="title">UDF</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">evaluate</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        String res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (s == <span class="keyword">null</span>) &#123;</span><br><span class="line">            res = <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (s.equals(<span class="string">"男"</span>) || s.equals(<span class="string">"M"</span>) || s.equals(<span class="string">"1"</span>)) &#123;</span><br><span class="line">                res = <span class="string">"男"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s.equals(<span class="string">"女"</span>) || s.equals(<span class="string">"F"</span>) || s.equals(<span class="string">"0"</span>)) &#123;</span><br><span class="line">                res = <span class="string">"女"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res = <span class="string">"未知"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>附：jar包<a href="d960/UDF-1.0-SNAPSHOT.jar" target="_blank">下载</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hive中给了很多系统函数，&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF&quot; target=&quot;_blank&quot;&gt;官网&lt;/a&gt; 给了很多函数可以参考。但是复杂的业务中，官方
      
    
    </summary>
    
      <category term="数据仓库" scheme="https://mapan.tech/cn/categories/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>HQL必会50题</title>
    <link href="https://mapan.tech/cn/b8f1.html"/>
    <id>https://mapan.tech/cn/b8f1.html</id>
    <published>2020-03-17T14:01:47.000Z</published>
    <updated>2020-03-21T14:14:22.345Z</updated>
    
    <content type="html"><![CDATA[<p>平常加班不多，为了提高自己的SQL能力，找了网上流传的比较广泛的SQL50题，先把题目拿过来，计划抽空作为练习用HiveSQL完成。</p><p>开始日期：2020-03-18</p><p>完成日期：2020-03-21</p><p>建表语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(s_id <span class="keyword">string</span>,s_name <span class="keyword">string</span>,s_birth <span class="keyword">string</span>,s_sex <span class="keyword">string</span>) <span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> course(c_id <span class="keyword">string</span>,c_name <span class="keyword">string</span>,t_id <span class="keyword">string</span>) <span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> teacher(t_id <span class="keyword">string</span>,t_name <span class="keyword">string</span>) <span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> score(s_id <span class="keyword">string</span>,c_id <span class="keyword">string</span>,s_score <span class="built_in">int</span>) <span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span>;</span><br></pre></td></tr></table></figure><p>数据：</p><p><a href="https://mapan.tech/cn/b8f1/student.txt" target="_blank">student.txt</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">01赵雷1990-01-01男</span><br><span class="line">02钱电1990-12-21男</span><br><span class="line">03孙风1990-05-20男</span><br><span class="line">04李云1990-08-06男</span><br><span class="line">05周梅1991-12-01女</span><br><span class="line">06吴兰1992-03-01女</span><br><span class="line">07郑竹1989-07-01女</span><br><span class="line">08王菊1990-01-20女</span><br></pre></td></tr></table></figure><p><a href="https://mapan.tech/cn/b8f1/teacher.txt" target="_blank">teacher.txt</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">01张三</span><br><span class="line">02李四</span><br><span class="line">03王五</span><br></pre></td></tr></table></figure><p><a href="https://mapan.tech/cn/b8f1/course.txt" target="_blank">course.txt</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">01语文02</span><br><span class="line">02数学01</span><br><span class="line">03英语03</span><br></pre></td></tr></table></figure><p><a href="https://mapan.tech/cn/b8f1/score.txt" target="_blank">score.txt</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">010180</span><br><span class="line">010290</span><br><span class="line">010399</span><br><span class="line">020170</span><br><span class="line">020260</span><br><span class="line">020380</span><br><span class="line">030180</span><br><span class="line">030280</span><br><span class="line">030380</span><br><span class="line">040150</span><br><span class="line">040230</span><br><span class="line">040320</span><br><span class="line">050176</span><br><span class="line">050287</span><br><span class="line">060131</span><br><span class="line">060334</span><br><span class="line">070289</span><br><span class="line">070398</span><br></pre></td></tr></table></figure><p>加载数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">local</span> inpath <span class="string">'~/student.txt'</span> <span class="keyword">into</span> <span class="keyword">table</span> student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">local</span> inpath <span class="string">'~/course.txt'</span> <span class="keyword">into</span> <span class="keyword">table</span> course;</span><br><span class="line"></span><br><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">local</span> inpath <span class="string">'~/teacher.txt'</span> <span class="keyword">into</span> <span class="keyword">table</span> teacher;</span><br><span class="line"></span><br><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">local</span> inpath <span class="string">'~/score.txt'</span> <span class="keyword">into</span> <span class="keyword">table</span> score;</span><br></pre></td></tr></table></figure><p>表之间的关系如图：</p><p><img src="/cn/b8f1/Kinship.png" alt="表关系"></p><ul><li>1、查询”01”课程比”02”课程成绩高的学生的信息及课程分数:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    T0.*,</span><br><span class="line">    T1.s_score <span class="keyword">AS</span> c01,</span><br><span class="line">    T2.s_score <span class="keyword">as</span> c02</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    student <span class="keyword">AS</span> T0,</span><br><span class="line">    (<span class="keyword">SELECT</span> s_id,s_score <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_id=<span class="string">'01'</span>) <span class="keyword">AS</span> T1,</span><br><span class="line">    (<span class="keyword">SELECT</span> s_id,s_score <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_id=<span class="string">'02'</span>) <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">WHERE</span> T0.s_id=T1.s_id</span><br><span class="line"><span class="keyword">AND</span> T0.s_id=T2.s_id</span><br><span class="line"><span class="keyword">AND</span> T1.s_score&gt;T2.s_score;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/cn/b8f1/image-20200318221755774.png" alt="image-20200318221755774"></p><ul><li>2、查询同时存在” 01 “课程和” 02 “课程的情况:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    t3.*,</span><br><span class="line">    t1.s_score <span class="keyword">as</span> c01,</span><br><span class="line">    t2.s_score <span class="keyword">as</span> c02</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    (<span class="keyword">SELECT</span> s_id,s_score <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_id=<span class="string">'01'</span>) <span class="keyword">as</span> t1, <span class="comment">-- 选修01课程的同学</span></span><br><span class="line">    (<span class="keyword">SELECT</span> s_id,s_score <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_id=<span class="string">'02'</span>) <span class="keyword">as</span> t2, <span class="comment">-- 选修01课程的同学</span></span><br><span class="line">    student <span class="keyword">as</span> t3</span><br><span class="line"><span class="keyword">WHERE</span> t1.s_id=t2.s_id</span><br><span class="line"><span class="keyword">AND</span> t2.s_id=t3.s_id;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/cn/b8f1/image-20200318224041101.png" alt="image-20200318224041101"></p><ul><li>3、查询存在” 01 “课程但<strong>可能</strong>不存在” 02 “课程的情况(不存在时显示为 null )</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    t2.*,</span><br><span class="line">    t1.s_score <span class="keyword">AS</span> c01,</span><br><span class="line">    t3.s_score <span class="keyword">AS</span> c02 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    (<span class="keyword">SELECT</span> s_id,s_score <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_id=<span class="string">'01'</span>) <span class="keyword">AS</span> t1, <span class="comment">-- 选修01课程的同学</span></span><br><span class="line">    student <span class="keyword">AS</span> t2</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> s_id,s_score <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_id=<span class="string">'02'</span>) <span class="keyword">AS</span> t3 <span class="comment">-- 选修01课程的同学</span></span><br><span class="line"><span class="keyword">ON</span> t2.s_id = t3.s_id</span><br><span class="line"><span class="keyword">WHERE</span> t1.s_id=t2.s_id;</span><br></pre></td></tr></table></figure><p>运行结果：<br><img src="/cn/b8f1/image-20200318225024279.png" alt="image-20200318225024279"></p><ul><li>4、查询平均成绩小于60分的同学的学生编号和学生姓名和平均成绩:<br>(包括有成绩的和无成绩的)</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.s_id,</span><br><span class="line">    T1.s_name,</span><br><span class="line">    T2.avg_sc</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">JOIN</span>(<span class="keyword">SELECT</span></span><br><span class="line">        s_id,</span><br><span class="line">        <span class="keyword">avg</span>(s_score) <span class="keyword">AS</span> avg_sc </span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> s_id</span><br><span class="line">    <span class="keyword">having</span> avg_sc&lt;<span class="number">60</span>) <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">ON</span> T1.s_id=T2.s_id;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/cn/b8f1/image-20200318225822830.png" alt="image-20200318225822830"></p><ul><li>5、查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.s_id,</span><br><span class="line">    T1.s_name,</span><br><span class="line">    T2.co_cnt,</span><br><span class="line">    T3.sum_score</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> s_id,<span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">AS</span> co_cnt <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> s_id) <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">ON</span> T1.s_id=T2.s_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> s_id,<span class="keyword">sum</span>(s_score) <span class="keyword">AS</span> sum_score <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> s_id) <span class="keyword">AS</span> T3</span><br><span class="line"><span class="keyword">ON</span> T1.s_id=T3.s_id;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/cn/b8f1/image-20200318231242423.png" alt="image-20200318231242423"></p><ul><li>6、查询”李”姓老师的数量:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> teacher <span class="keyword">WHERE</span> t_name <span class="keyword">LIKE</span> <span class="string">"李%"</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200319073738350.png" alt="image-20200319073738350"></p><ul><li>7、查询学过”张三”老师授课的同学的信息:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    T1.*,</span><br><span class="line">    T3.c_name,</span><br><span class="line">    T4.t_name</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    student <span class="keyword">AS</span> T1,</span><br><span class="line">    score <span class="keyword">AS</span> T2,</span><br><span class="line">    course <span class="keyword">AS</span> T3,</span><br><span class="line">    teacher <span class="keyword">AS</span> T4</span><br><span class="line"><span class="keyword">WHERE</span> T1.s_id=T2.s_id</span><br><span class="line"><span class="keyword">AND</span> T2.c_id=T3.c_id</span><br><span class="line"><span class="keyword">AND</span> T3.t_id=T4.t_id</span><br><span class="line"><span class="keyword">AND</span> T4.t_name=<span class="string">"张三"</span>;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/cn/b8f1/image-20200319074432715.png" alt="image-20200319074432715"></p><ul><li>8、查询没学过”张三”老师授课的同学的信息:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A1.* <span class="keyword">FROM</span> student <span class="keyword">AS</span> A1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span>(<span class="keyword">SELECT</span> </span><br><span class="line">                T1.s_id</span><br><span class="line">            <span class="keyword">FROM</span></span><br><span class="line">                student <span class="keyword">AS</span> T1,</span><br><span class="line">                score <span class="keyword">AS</span> T2,</span><br><span class="line">                course <span class="keyword">AS</span> T3,</span><br><span class="line">                teacher <span class="keyword">AS</span> T4</span><br><span class="line">            <span class="keyword">WHERE</span> T1.s_id=T2.s_id</span><br><span class="line">            <span class="keyword">AND</span> T2.c_id=T3.c_id</span><br><span class="line">            <span class="keyword">AND</span> T3.t_id=T4.t_id</span><br><span class="line">            <span class="keyword">AND</span> T4.t_name=<span class="string">"张三"</span>) <span class="keyword">AS</span> A2</span><br><span class="line"><span class="keyword">ON</span> A1.s_id=A2.s_id</span><br><span class="line"><span class="keyword">WHERE</span> A2.s_id <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/cn/b8f1/image-20200319075846289.png" alt="image-20200319075846289"></p><ul><li>9、查询学过编号为”01”并且也学过编号为”02”的课程的同学的信息:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A.* </span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> A</span><br><span class="line"><span class="keyword">JOIN</span> (<span class="keyword">SELECT</span></span><br><span class="line">            T1.s_id</span><br><span class="line">        <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> s_id <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_id=<span class="string">'01'</span>) <span class="keyword">AS</span> T1</span><br><span class="line">        <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> s_id <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_id=<span class="string">'02'</span>) <span class="keyword">AS</span> T2</span><br><span class="line">        <span class="keyword">ON</span> T1.s_id=T2.s_id) <span class="keyword">AS</span> B</span><br><span class="line"><span class="keyword">ON</span> A.s_id=B.s_id;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/cn/b8f1/image-20200319080655329.png" alt="image-20200319080655329"></p><ul><li>10、查询学过编号为”01”但是没有学过编号为”02”的课程的同学的信息:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A.* </span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> A</span><br><span class="line"><span class="keyword">JOIN</span> (<span class="keyword">SELECT</span></span><br><span class="line">            T1.s_id</span><br><span class="line">        <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> s_id <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_id=<span class="string">'01'</span>) <span class="keyword">AS</span> T1</span><br><span class="line">        <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> s_id <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> c_id=<span class="string">'02'</span>) <span class="keyword">AS</span> T2</span><br><span class="line">        <span class="keyword">ON</span> T1.s_id=T2.s_id</span><br><span class="line">        <span class="keyword">WHERE</span> T2.s_id <span class="keyword">IS</span> <span class="literal">NULL</span>) <span class="keyword">AS</span> B</span><br><span class="line"><span class="keyword">ON</span> A.s_id=B.s_id;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/cn/b8f1/image-20200319080957865.png" alt="image-20200319080957865"></p><ul><li>11、查询没有学全所有课程的同学的信息:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.*,</span><br><span class="line">    T2.CNT_C</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> s_id,<span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">AS</span> CNT_C <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> s_id) <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">ON</span> T1.s_id=T2.s_id</span><br><span class="line"><span class="keyword">WHERE</span> T2.CNT_C&lt;<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200319221856619.png" alt="image-20200319221856619"></p><ul><li>12、查询至少有一门课与学号为”01”的同学所学相同的同学的信息:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    t3.*,</span><br><span class="line">    t4.cnt </span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> t3 </span><br><span class="line"><span class="keyword">JOIN</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> s_id,</span><br><span class="line">    <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">AS</span> cnt </span><br><span class="line">    <span class="keyword">FROM</span> score <span class="keyword">AS</span> t1 </span><br><span class="line">    <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> c_id </span><br><span class="line">          <span class="keyword">FROM</span> score</span><br><span class="line">          <span class="keyword">WHERE</span> s_id =<span class="string">"01"</span>) <span class="keyword">AS</span> t2 </span><br><span class="line">    <span class="keyword">ON</span> t1.c_id = t2.c_id </span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> s_id </span><br><span class="line">    <span class="keyword">HAVING</span> cnt&gt;<span class="number">0</span>) <span class="keyword">AS</span> t4 </span><br><span class="line"><span class="keyword">ON</span> t3.s_id=t4.s_id;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200319223531461.png" alt="image-20200319223531461"></p><ul><li>13、查询和”01”号的同学学习的课程完全相同的其他同学的信息:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    A1.*,</span><br><span class="line">    A2.CNT_C</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> A1</span><br><span class="line"><span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> T1.s_id,<span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">AS</span> CNT_C</span><br><span class="line">        <span class="keyword">FROM</span> score <span class="keyword">AS</span> T1</span><br><span class="line">        <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> c_id <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> s_id=<span class="string">'01'</span>) <span class="keyword">AS</span> T2</span><br><span class="line">        <span class="keyword">ON</span> T1.c_id=T2.c_id</span><br><span class="line">        <span class="keyword">GROUP</span> <span class="keyword">BY</span> T1.s_id) <span class="keyword">AS</span> A2</span><br><span class="line"><span class="keyword">ON</span> A1.s_id=A2.s_id</span><br><span class="line"><span class="keyword">AND</span> A1.S_id&lt;&gt;<span class="string">'01'</span></span><br><span class="line"><span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">AS</span> CNT_C <span class="keyword">FROM</span> score <span class="keyword">where</span> s_id=<span class="string">'01'</span>) <span class="keyword">AS</span> A3</span><br><span class="line"><span class="keyword">ON</span> A2.CNT_C=A3.CNT_C;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200319230518263.png" alt="image-20200319230518263"></p><ul><li>14、查询没学过”张三”老师讲授的任一门课程的学生姓名:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> S1.s_name </span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> S1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span></span><br><span class="line">                A1.s_id</span><br><span class="line">            <span class="keyword">FROM</span> score <span class="keyword">AS</span> A1</span><br><span class="line">            <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> T2.c_id </span><br><span class="line">                    <span class="keyword">FROM</span> teacher <span class="keyword">AS</span> T1 </span><br><span class="line">                    <span class="keyword">JOIN</span> course <span class="keyword">AS</span> T2</span><br><span class="line">                    <span class="keyword">ON</span> T1.t_id=T2.t_id</span><br><span class="line">                    <span class="keyword">WHERE</span> T1.t_name=<span class="string">'张三'</span>) <span class="keyword">AS</span> A2</span><br><span class="line">            <span class="keyword">ON</span> A1.c_id=A2.c_id</span><br><span class="line">            <span class="keyword">GROUP</span> <span class="keyword">BY</span> A1.s_id) <span class="keyword">AS</span> S2</span><br><span class="line"><span class="keyword">ON</span> S1.s_id=S2.s_id</span><br><span class="line"><span class="keyword">WHERE</span> S2.s_id <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200319232211741.png" alt="image-20200319232211741"></p><ul><li>15、查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.s_id,</span><br><span class="line">    T1.s_name,</span><br><span class="line">    T3.AVG_C</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">JOIN</span> (<span class="keyword">SELECT</span></span><br><span class="line">        s_id,</span><br><span class="line">        <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">AS</span> CNT_C</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">WHERE</span> s_score&lt;<span class="number">60</span></span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> s_id</span><br><span class="line">    <span class="keyword">having</span> CNT_C&gt;=<span class="number">2</span>) <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">ON</span> T1.s_id=T2.s_id</span><br><span class="line"><span class="keyword">JOIN</span> (<span class="keyword">SELECT</span></span><br><span class="line">            s_id,</span><br><span class="line">            <span class="keyword">AVG</span>(s_score) <span class="keyword">AS</span> AVG_C</span><br><span class="line">        <span class="keyword">FROM</span> score</span><br><span class="line">        <span class="keyword">GROUP</span> <span class="keyword">BY</span> s_id) <span class="keyword">AS</span> T3</span><br><span class="line"><span class="keyword">ON</span> T1.s_id=T3.s_id;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200320080055175.png" alt="image-20200320080055175"></p><ul><li>16、检索”01”课程分数小于60，按分数降序排列的学生信息:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.*,</span><br><span class="line">    T2.s_score</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">JOIN</span> (<span class="keyword">SELECT</span></span><br><span class="line">            s_id,</span><br><span class="line">            s_score</span><br><span class="line">        <span class="keyword">FROM</span> score</span><br><span class="line">        <span class="keyword">WHERE</span> c_id=<span class="string">'01'</span></span><br><span class="line">        <span class="keyword">AND</span> s_score&lt;<span class="number">60</span>) <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">ON</span> T1.S_id=T2.s_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> T2.s_score <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/cn/b8f1/image-20200320080551819.png" alt="image-20200320080551819"></p><ul><li>17、按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩:</li></ul><p>尝试用WITH的写法，相对常规写法逻辑还是比较清晰的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> T1 <span class="keyword">AS</span> (</span><br><span class="line"><span class="comment">-- 平均分</span></span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        s_id,</span><br><span class="line">        <span class="keyword">AVG</span>(s_score) <span class="keyword">AS</span> AVG_S</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> s_id</span><br><span class="line">), T2 <span class="keyword">AS</span>(</span><br><span class="line"><span class="comment">-- 语文分数</span></span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        s_id,</span><br><span class="line">        s_score</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">WHERE</span> c_id=<span class="string">'01'</span></span><br><span class="line">)</span><br><span class="line">, T3 <span class="keyword">AS</span>(</span><br><span class="line"><span class="comment">-- 数学分数</span></span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        s_id,</span><br><span class="line">        s_score</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">WHERE</span> c_id=<span class="string">'02'</span></span><br><span class="line">), T4 <span class="keyword">AS</span>(</span><br><span class="line"><span class="comment">-- 英语分数</span></span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        s_id,</span><br><span class="line">        s_score</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">WHERE</span> c_id=<span class="string">'03'</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T0.s_id,</span><br><span class="line">    T0.s_name,</span><br><span class="line">    (<span class="keyword">CASE</span> <span class="keyword">WHEN</span> T1.AVG_S <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span> <span class="string">'0'</span> <span class="keyword">ELSE</span> <span class="keyword">round</span>(T1.AVG_S,<span class="number">2</span>) <span class="keyword">END</span>) <span class="keyword">AS</span> AVG_S,</span><br><span class="line">    (<span class="keyword">CASE</span> <span class="keyword">WHEN</span> T2.s_score <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span> <span class="string">'0'</span> <span class="keyword">ELSE</span> T2.s_score <span class="keyword">END</span>) <span class="keyword">AS</span> CHINESE,</span><br><span class="line">    (<span class="keyword">CASE</span> <span class="keyword">WHEN</span> T3.s_score <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span> <span class="string">'0'</span> <span class="keyword">ELSE</span> T3.s_score <span class="keyword">END</span>) <span class="keyword">AS</span> MATH,</span><br><span class="line">    (<span class="keyword">CASE</span> <span class="keyword">WHEN</span> T4.s_score <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span> <span class="string">'0'</span> <span class="keyword">ELSE</span> T4.s_score <span class="keyword">END</span>) <span class="keyword">AS</span> ENGLISH</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> T0</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> T1</span><br><span class="line"><span class="keyword">ON</span> T1.s_id=T0.s_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> T2</span><br><span class="line"><span class="keyword">ON</span> T2.s_id=T0.s_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> T3</span><br><span class="line"><span class="keyword">ON</span> T3.s_id=T0.s_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> T4</span><br><span class="line"><span class="keyword">ON</span> T4.s_id=T0.s_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> AVG_S <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321105038801.png" alt="image-20200321105038801"></p><ul><li>18.查询各科成绩最高分、最低分和平均分：以如下形式显示：课程ID，课程name，最高分， ，平均分，及格率，中等率，优良率，优秀率: （及格为&gt;=60，中等为：70-80，优良为：80-90，优秀为：&gt;=90）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> A1 <span class="keyword">AS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        c_id,</span><br><span class="line">        <span class="keyword">MAX</span>(s_score) <span class="keyword">AS</span> max_c,</span><br><span class="line">        <span class="keyword">MIN</span>(s_score) <span class="keyword">AS</span> min_c,</span><br><span class="line">        <span class="keyword">ROUND</span>(<span class="keyword">AVG</span>(s_score),<span class="number">2</span>)  <span class="keyword">AS</span> avg_c,</span><br><span class="line">        <span class="keyword">ROUND</span>(<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score&gt;=<span class="number">60</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">count</span>(s_score),<span class="number">2</span>) <span class="keyword">AS</span> L1,</span><br><span class="line">        <span class="keyword">ROUND</span>(<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score <span class="keyword">BETWEEN</span> <span class="number">70</span> <span class="keyword">AND</span> <span class="number">79</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">count</span>(s_score),<span class="number">2</span>)  <span class="keyword">AS</span> L2,</span><br><span class="line">        <span class="keyword">ROUND</span>(<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score <span class="keyword">BETWEEN</span> <span class="number">80</span> <span class="keyword">AND</span> <span class="number">89</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">count</span>(s_score),<span class="number">2</span>)  <span class="keyword">AS</span> L3,</span><br><span class="line">        <span class="keyword">ROUND</span>(<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score&gt;=<span class="number">90</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">count</span>(s_score),<span class="number">2</span>)  <span class="keyword">AS</span> L4</span><br><span class="line">    <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_id</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    A0.c_id,</span><br><span class="line">    A0.c_name,</span><br><span class="line">    A1.max_c,</span><br><span class="line">    A1.min_c,</span><br><span class="line">    A1.avg_c,</span><br><span class="line">    A1.L1,</span><br><span class="line">    A1.L2,</span><br><span class="line">    A1.L3,</span><br><span class="line">    A1.L4</span><br><span class="line"><span class="keyword">FROM</span> course <span class="keyword">AS</span> A0</span><br><span class="line"><span class="keyword">JOIN</span> A1</span><br><span class="line"><span class="keyword">ON</span> A0.c_id=A1.c_id;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321153421319.png" alt="image-20200321153421319"></p><ul><li>19、按各科成绩进行排序，并显示排名:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">    T1.s_id,</span><br><span class="line">    T3.s_name,</span><br><span class="line">    T1.c_id,</span><br><span class="line">    T2.c_name,</span><br><span class="line">    T1.s_score,</span><br><span class="line">    RANK() OVER (PARTITION BY T1.c_id ORDER BY T1.s_score DESC)</span><br><span class="line">FROM score AS T1</span><br><span class="line">JOIN course AS T2</span><br><span class="line">ON T1.c_id=T2.c_id</span><br><span class="line">JOIN student AS T3</span><br><span class="line">ON T1.s_id=T3.s_id;</span><br></pre></td></tr></table></figure><ul><li>20、查询学生的总成绩并进行排名:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.s_id,</span><br><span class="line">    T3.s_name,</span><br><span class="line">    <span class="keyword">sum</span>(T1.s_score) <span class="keyword">AS</span> SUM_C,</span><br><span class="line">    <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">sum</span>(T1.s_score) <span class="keyword">DESC</span>)</span><br><span class="line"><span class="keyword">FROM</span> score <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">JOIN</span> student <span class="keyword">AS</span> T3</span><br><span class="line"><span class="keyword">ON</span> T1.s_id=T3.s_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> T1.s_id,T3.s_name;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/cn/b8f1/image-20200321181506578.png" alt="image-20200321181506578"></p><ul><li>21、查询不同老师所教不同课程平均分从高到低显示:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.c_id,</span><br><span class="line">    T3.t_name,</span><br><span class="line">    <span class="keyword">ROUND</span>(<span class="keyword">AVG</span>(T1.s_score),<span class="number">2</span>),</span><br><span class="line">    <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">AVG</span>(T1.s_score) <span class="keyword">DESC</span>)</span><br><span class="line"><span class="keyword">FROM</span> score <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">JOIN</span> course <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">ON</span> T1.c_id=T2.c_id</span><br><span class="line"><span class="keyword">JOIN</span> teacher <span class="keyword">AS</span> T3</span><br><span class="line"><span class="keyword">ON</span> T2.t_id=T3.t_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> T1.c_id,T3.t_name;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/cn/b8f1/image-20200321181609080.png" alt="image-20200321181609080"></p><ul><li>22、查询所有课程的成绩第2名到第3名的学生信息及该课程成绩:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> A1 <span class="keyword">AS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        T1.s_id,</span><br><span class="line">        T3.s_name,</span><br><span class="line">        T1.c_id,</span><br><span class="line">        T2.c_name,</span><br><span class="line">        T1.s_score,</span><br><span class="line">        <span class="keyword">RANK</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> T1.c_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> T1.s_score <span class="keyword">DESC</span>) <span class="keyword">AS</span> rk</span><br><span class="line">    <span class="keyword">FROM</span> score <span class="keyword">AS</span> T1</span><br><span class="line">    <span class="keyword">JOIN</span> course <span class="keyword">AS</span> T2</span><br><span class="line">    <span class="keyword">ON</span> T1.c_id=T2.c_id</span><br><span class="line">    <span class="keyword">JOIN</span> student <span class="keyword">AS</span> T3</span><br><span class="line">    <span class="keyword">ON</span> T1.s_id=T3.s_id</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span> A1.*</span><br><span class="line"><span class="keyword">FROM</span> A1</span><br><span class="line"><span class="keyword">WHERE</span> A1.rk=<span class="number">2</span> <span class="keyword">OR</span> A1.rk=<span class="number">3</span>;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/cn/b8f1/image-20200321181701546.png" alt="image-20200321181701546"></p><ul><li>23、统计各科成绩各分数段人数：课程编号,课程名称,[100-85],[85-70],[70-60],[0-60]及所占百分比<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> A1 <span class="keyword">AS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        c_id,</span><br><span class="line">        <span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score <span class="keyword">BETWEEN</span> <span class="number">0</span> <span class="keyword">AND</span> <span class="number">59</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> L0, <span class="comment">-- [0-59分的人数]</span></span><br><span class="line">        <span class="keyword">ROUND</span>(<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score <span class="keyword">BETWEEN</span> <span class="number">0</span> <span class="keyword">AND</span> <span class="number">59</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">COUNT</span>(<span class="number">1</span>),<span class="number">2</span>) <span class="keyword">AS</span> H0, <span class="comment">-- [0-59分的人数占比]</span></span><br><span class="line">        <span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score <span class="keyword">BETWEEN</span> <span class="number">60</span> <span class="keyword">AND</span> <span class="number">70</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> L1, <span class="comment">-- [60-69分的人数]</span></span><br><span class="line">        <span class="keyword">ROUND</span>(<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score <span class="keyword">BETWEEN</span> <span class="number">60</span> <span class="keyword">AND</span> <span class="number">69</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">COUNT</span>(<span class="number">1</span>),<span class="number">2</span>) <span class="keyword">AS</span> H1, <span class="comment">-- [60-69分的人数占比]</span></span><br><span class="line">        <span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score <span class="keyword">BETWEEN</span> <span class="number">70</span> <span class="keyword">AND</span> <span class="number">85</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)  <span class="keyword">AS</span> L2, <span class="comment">-- [70-85分的人数]</span></span><br><span class="line">        <span class="keyword">ROUND</span>(<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score <span class="keyword">BETWEEN</span> <span class="number">70</span> <span class="keyword">AND</span> <span class="number">85</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">COUNT</span>(<span class="number">1</span>),<span class="number">2</span>) <span class="keyword">AS</span> H2, <span class="comment">-- [70-85分的人数占比]</span></span><br><span class="line">        <span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score <span class="keyword">BETWEEN</span> <span class="number">86</span> <span class="keyword">AND</span> <span class="number">100</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)  <span class="keyword">AS</span> L3, <span class="comment">-- [86-100分的人数]</span></span><br><span class="line">        <span class="keyword">ROUND</span>(<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> s_score <span class="keyword">BETWEEN</span> <span class="number">86</span> <span class="keyword">AND</span> <span class="number">100</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">COUNT</span>(<span class="number">1</span>),<span class="number">2</span>) <span class="keyword">AS</span> H3 <span class="comment">-- [86-100分的人数占比]</span></span><br><span class="line">    <span class="keyword">FROM</span> score <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_id</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    A0.c_id,</span><br><span class="line">    A0.c_name,</span><br><span class="line">    A1.L3,</span><br><span class="line">    A1.H3,</span><br><span class="line">    A1.L2,</span><br><span class="line">    A1.H2,</span><br><span class="line">    A1.L1,</span><br><span class="line">    A1.H1,</span><br><span class="line">    A1.L0,</span><br><span class="line">    A1.H0</span><br><span class="line"><span class="keyword">FROM</span> course <span class="keyword">AS</span> A0</span><br><span class="line"><span class="keyword">JOIN</span> A1</span><br><span class="line"><span class="keyword">ON</span> A0.c_id=A1.c_id;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/cn/b8f1/image-20200321181822411.png" alt="image-20200321181822411"></p><ul><li>24、查询学生平均成绩及其名次:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.s_id,</span><br><span class="line">    T3.s_name,</span><br><span class="line">    <span class="keyword">ROUND</span>(<span class="keyword">AVG</span>(T1.s_score),<span class="number">2</span>) <span class="keyword">AS</span> AVG_C,</span><br><span class="line">    <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">sum</span>(T1.s_score) <span class="keyword">DESC</span>)</span><br><span class="line"><span class="keyword">FROM</span> score <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">JOIN</span> student <span class="keyword">AS</span> T3</span><br><span class="line"><span class="keyword">ON</span> T1.s_id=T3.s_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> T1.s_id,T3.s_name;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321181938010.png" alt="image-20200321181938010"></p><ul><li>25、查询各科成绩前三名的记录<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> A1 <span class="keyword">AS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        T1.s_id,</span><br><span class="line">        T3.s_name,</span><br><span class="line">        T1.c_id,</span><br><span class="line">        T2.c_name,</span><br><span class="line">        T1.s_score,</span><br><span class="line">        <span class="keyword">RANK</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> T1.c_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> T1.s_score <span class="keyword">DESC</span>) <span class="keyword">AS</span> rk</span><br><span class="line">    <span class="keyword">FROM</span> score <span class="keyword">AS</span> T1</span><br><span class="line">    <span class="keyword">JOIN</span> course <span class="keyword">AS</span> T2</span><br><span class="line">    <span class="keyword">ON</span> T1.c_id=T2.c_id</span><br><span class="line">    <span class="keyword">JOIN</span> student <span class="keyword">AS</span> T3</span><br><span class="line">    <span class="keyword">ON</span> T1.s_id=T3.s_id</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span> A1.*</span><br><span class="line"><span class="keyword">FROM</span> A1</span><br><span class="line"><span class="keyword">WHERE</span> A1.rk&lt;=<span class="number">3</span>;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/cn/b8f1/image-20200321182026689.png" alt="image-20200321182026689"></p><ul><li>26、查询每门课程被选修的学生数:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.c_id,</span><br><span class="line">    T2.c_name,</span><br><span class="line">    <span class="keyword">COUNT</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">FROM</span> score <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">JOIN</span> course <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">ON</span> T1.c_id=T2.c_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> T1.c_id,T2.c_name</span><br></pre></td></tr></table></figure></li></ul><p><img src="/cn/b8f1/image-20200321182103466.png" alt="image-20200321182103466"></p><ul><li>27、查询出只有两门课程的全部学生的学号和姓名:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> A1 <span class="keyword">AS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        T1.s_id,</span><br><span class="line">        <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">AS</span> CNT</span><br><span class="line">    <span class="keyword">FROM</span> score <span class="keyword">AS</span> T1</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> T1.s_id</span><br><span class="line">    <span class="keyword">HAVING</span> CNT=<span class="number">2</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    A2.s_id,</span><br><span class="line">    A2.s_name,</span><br><span class="line">    A1.CNT</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> A2</span><br><span class="line"><span class="keyword">JOIN</span> A1 </span><br><span class="line"><span class="keyword">ON</span> A1.s_id=A2.s_id;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/cn/b8f1/image-20200321182151875.png" alt="image-20200321182151875"></p><ul><li>28、查询男生、女生人数:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.s_sex,</span><br><span class="line">    <span class="keyword">COUNT</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> s_sex;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/cn/b8f1/image-20200321182221250.png" alt="image-20200321182221250"></p><ul><li>29、查询名字中含有”风”字的学生信息:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.*</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">WHERE</span> T1.s_name <span class="keyword">LIKE</span> <span class="string">"%风%"</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="/cn/b8f1/image-20200321182246186.png" alt="image-20200321182246186"></p><ul><li>30、查询同名同性学生名单，并统计同名人数:</li></ul><p>数据中发现没有同名同性的学生，先插入几条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span></span><br><span class="line">(<span class="string">'09'</span> , <span class="string">'张三'</span> , <span class="string">'2017-12-20'</span> , <span class="string">'女'</span>),</span><br><span class="line">(<span class="string">'10'</span> , <span class="string">'李四'</span> , <span class="string">'2017-12-25'</span> , <span class="string">'女'</span>),</span><br><span class="line">(<span class="string">'11'</span> , <span class="string">'李四'</span> , <span class="string">'2012-06-06'</span> , <span class="string">'女'</span>),</span><br><span class="line">(<span class="string">'12'</span> , <span class="string">'赵六'</span> , <span class="string">'2013-06-13'</span> , <span class="string">'女'</span>),</span><br><span class="line">(<span class="string">'13'</span> , <span class="string">'孙七'</span> , <span class="string">'2014-06-01'</span> , <span class="string">'女'</span>);</span><br></pre></td></tr></table></figure><p>然后找同名同性的学生</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    s_name,</span><br><span class="line">    s_sex,</span><br><span class="line">    <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">AS</span> CNT_N</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> s_name,s_sex</span><br><span class="line"><span class="keyword">HAVING</span> CNT_N&gt;<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321182748601.png" alt="image-20200321182748601"></p><ul><li>31、查询1990年出生的学生名单:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> s_birth <span class="keyword">BETWEEN</span> <span class="string">'1990-01-01'</span> <span class="keyword">AND</span> <span class="string">'1990-12-31'</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321182943315.png" alt="image-20200321182943315"></p><ul><li>32、查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> T1 <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        c_id,</span><br><span class="line">        <span class="keyword">ROUND</span>(<span class="keyword">AVG</span>(s_score),<span class="number">2</span>) <span class="keyword">AS</span> AVG_C</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_id</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.c_id,</span><br><span class="line">    T0.c_name,</span><br><span class="line">    T1.AVG_C</span><br><span class="line"><span class="keyword">FROM</span> course <span class="keyword">AS</span> T0</span><br><span class="line"><span class="keyword">JOIN</span> T1</span><br><span class="line"><span class="keyword">ON</span> T0.c_id=T1.c_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> T1.AVG_C <span class="keyword">DESC</span>,T1.c_id;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321183807915.png" alt="image-20200321183807915"></p><ul><li>33、查询平均成绩大于等于85的所有学生的学号、姓名和平均成绩:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> T1 <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        s_id,</span><br><span class="line">        <span class="keyword">AVG</span>(s_score) <span class="keyword">AS</span> AVG_S</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> s_id</span><br><span class="line">    <span class="keyword">HAVING</span> AVG_S&gt;=<span class="number">85</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T0.s_id,</span><br><span class="line">    T0.s_name,</span><br><span class="line">    T1.AVG_S</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">as</span> T0</span><br><span class="line"><span class="keyword">JOIN</span> T1</span><br><span class="line"><span class="keyword">ON</span> T0.s_id=T1.s_id;</span><br></pre></td></tr></table></figure><ul><li>34、查询课程名称为”数学”，且分数低于60的学生姓名和分数:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> T1 <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        s_id,</span><br><span class="line">        <span class="keyword">AVG</span>(s_score) <span class="keyword">AS</span> AVG_S</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> s_id</span><br><span class="line">    <span class="keyword">HAVING</span> AVG_S&gt;=<span class="number">85</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T0.s_id,</span><br><span class="line">    T0.s_name,</span><br><span class="line">    <span class="keyword">ROUND</span>(T1.AVG_S,<span class="number">2</span>) <span class="keyword">AS</span> AVG_S</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">as</span> T0</span><br><span class="line"><span class="keyword">JOIN</span> T1</span><br><span class="line"><span class="keyword">ON</span> T0.s_id=T1.s_id;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321194621260.png" alt="image-20200321194621260"></p><ul><li>35、查询所有学生的课程及分数情况:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> T1 <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> </span><br><span class="line">        s_id,</span><br><span class="line">        s_score</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">WHERE</span> c_id=<span class="string">'01'</span></span><br><span class="line">), T2 <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> </span><br><span class="line">        s_id,</span><br><span class="line">        s_score</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">WHERE</span> c_id=<span class="string">'02'</span></span><br><span class="line">), T3 <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> </span><br><span class="line">        s_id,</span><br><span class="line">        s_score</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">WHERE</span> c_id=<span class="string">'03'</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T0.s_id,</span><br><span class="line">    T0.s_name,</span><br><span class="line">    (<span class="keyword">CASE</span> <span class="keyword">WHEN</span> T1.s_score <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span> <span class="string">"未选修"</span> <span class="keyword">ELSE</span> T1.s_score <span class="keyword">END</span>) <span class="keyword">AS</span> CHINESE,</span><br><span class="line">    (<span class="keyword">CASE</span> <span class="keyword">WHEN</span> T2.s_score <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span> <span class="string">"未选修"</span> <span class="keyword">ELSE</span> T2.s_score <span class="keyword">END</span>) <span class="keyword">AS</span> MATH,</span><br><span class="line">    (<span class="keyword">CASE</span> <span class="keyword">WHEN</span> T3.s_score <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">THEN</span> <span class="string">"未选修"</span> <span class="keyword">ELSE</span> T3.s_score <span class="keyword">END</span>) <span class="keyword">AS</span> ENGLISH</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> T0</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> T1</span><br><span class="line"><span class="keyword">ON</span> T0.s_id=T1.s_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> T2</span><br><span class="line"><span class="keyword">ON</span> T0.s_id=T2.s_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> T3</span><br><span class="line"><span class="keyword">ON</span> T0.s_id=T3.s_id;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321195553301.png" alt="image-20200321195553301"></p><ul><li>36、查询任何一门课程成绩在70分以上的学生姓名、课程名称和分数:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="comment">-- T0.s_id,</span></span><br><span class="line">    T1.s_name,</span><br><span class="line">    <span class="comment">-- T0.c_id,</span></span><br><span class="line">    T2.c_name,</span><br><span class="line">    T0.s_score</span><br><span class="line"><span class="keyword">FROM</span> score <span class="keyword">AS</span> T0</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> student <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">ON</span> T0.s_id=T1.s_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> course <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">ON</span> T0.c_id=T2.c_id</span><br><span class="line"><span class="keyword">WHERE</span> T0.s_score&gt;<span class="number">70</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321200351423.png" alt="image-20200321200351423"></p><ul><li>37、查询课程不及格的学生:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="comment">-- T0.s_id,</span></span><br><span class="line">    T1.s_name,</span><br><span class="line">    <span class="comment">-- T0.c_id,</span></span><br><span class="line">    T2.c_name,</span><br><span class="line">    T0.s_score</span><br><span class="line"><span class="keyword">FROM</span> score <span class="keyword">AS</span> T0</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> student <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">ON</span> T0.s_id=T1.s_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> course <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">ON</span> T0.c_id=T2.c_id</span><br><span class="line"><span class="keyword">WHERE</span> T0.s_score&lt;<span class="number">60</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321200449627.png" alt="image-20200321200449627"></p><ul><li>38、查询课程编号为01且课程成绩在80分及以上的学生的学号和姓名:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.s_id,</span><br><span class="line">    T2.s_name</span><br><span class="line"><span class="keyword">FROM</span> score <span class="keyword">AS</span> T1</span><br><span class="line"><span class="keyword">JOIN</span> student <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">ON</span> T1.s_id=T2.s_id</span><br><span class="line"><span class="keyword">WHERE</span> T1.c_id=<span class="string">'01'</span></span><br><span class="line"><span class="keyword">AND</span> T1.s_score&gt;=<span class="number">80</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321201135781.png" alt="image-20200321201135781"></p><ul><li>39、求每门课程的学生人数:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> T1 <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        c_id,</span><br><span class="line">        <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">AS</span> CNT_S</span><br><span class="line">    <span class="keyword">FROM</span> score</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> c_id</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T2.c_id,</span><br><span class="line">    T2.c_name,</span><br><span class="line">    T1.CNT_S</span><br><span class="line"><span class="keyword">FROM</span> course <span class="keyword">AS</span> T2</span><br><span class="line"><span class="keyword">JOIN</span> T1</span><br><span class="line"><span class="keyword">ON</span> T1.c_id=T2.c_id;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321201506854.png" alt="image-20200321201506854"></p><ul><li>40、查询选修”张三”老师所授课程的学生中，成绩最高的学生信息及其成绩:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> T1 <span class="keyword">AS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        A4.*,</span><br><span class="line">        A3.s_score,</span><br><span class="line">        <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> A3.s_score <span class="keyword">DESC</span>) <span class="keyword">AS</span> RK</span><br><span class="line">    <span class="keyword">FROM</span> teacher <span class="keyword">AS</span> A1</span><br><span class="line">    <span class="keyword">JOIN</span> course <span class="keyword">AS</span> A2</span><br><span class="line">    <span class="keyword">ON</span> A1.t_id=A2.t_id</span><br><span class="line">    <span class="keyword">JOIN</span> score <span class="keyword">AS</span> A3</span><br><span class="line">    <span class="keyword">ON</span> A3.c_id=A2.c_id</span><br><span class="line">    <span class="keyword">JOIN</span> student <span class="keyword">AS</span> A4</span><br><span class="line">    <span class="keyword">ON</span> A3.s_id=A4.s_id</span><br><span class="line">    <span class="keyword">WHERE</span> A1.t_name=<span class="string">'张三'</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    T1.*</span><br><span class="line"><span class="keyword">FROM</span> T1</span><br><span class="line"><span class="keyword">WHERE</span> RK=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321203900937.png" alt="image-20200321203900937"></p><ul><li>41、查询不同课程成绩相同的学生的学生编号、课程编号、学生成绩:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    <span class="keyword">DISTINCT</span> T1.s_id,</span><br><span class="line">    T1.c_id,</span><br><span class="line">    T3.c_name,</span><br><span class="line">    T1.s_score</span><br><span class="line"><span class="keyword">FROM</span> score <span class="keyword">AS</span> T1,score <span class="keyword">AS</span> T2,course <span class="keyword">AS</span> T3</span><br><span class="line"><span class="keyword">WHERE</span> T1.c_id &lt;&gt; T2.c_id </span><br><span class="line"><span class="keyword">AND</span> T1.s_score=T2.s_score</span><br><span class="line"><span class="keyword">AND</span> T1.c_id=T3.c_id;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321220508059.png" alt="image-20200321220508059"></p><ul><li>42、查询每门课程成绩最好的前三名:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> A1 <span class="keyword">AS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        T1.s_id,</span><br><span class="line">        T1.c_id,</span><br><span class="line">        T1.s_score,</span><br><span class="line">        <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> T1.c_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> T1.s_score <span class="keyword">DESC</span>) <span class="keyword">AS</span> RK</span><br><span class="line">    <span class="keyword">FROM</span> score <span class="keyword">AS</span> T1</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    A1.s_id,</span><br><span class="line">    A3.s_name,</span><br><span class="line">    A2.c_name,</span><br><span class="line">    A1.s_score,</span><br><span class="line">    A1.RK</span><br><span class="line"><span class="keyword">FROM</span> A1</span><br><span class="line"><span class="keyword">JOIN</span> course <span class="keyword">AS</span> A2</span><br><span class="line"><span class="keyword">ON</span> A1.c_id=A2.c_id</span><br><span class="line"><span class="keyword">JOIN</span> student <span class="keyword">AS</span> A3</span><br><span class="line"><span class="keyword">ON</span> A1.s_id=A3.s_id</span><br><span class="line"><span class="keyword">WHERE</span> RK&lt;=<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321205236979.png" alt="image-20200321205236979"></p><ul><li>43、统计每门课程的学生选修人数（超过5人的课程才统计）:要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    c_id,</span><br><span class="line">    <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">AS</span> CNT_C</span><br><span class="line"><span class="keyword">FROM</span> score</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> c_id</span><br><span class="line"><span class="keyword">HAVING</span> CNT_C&gt;=<span class="number">5</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> CNT_C <span class="keyword">DESC</span>,c_id;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321205619210.png" alt="image-20200321205619210"></p><ul><li>44、检索至少选修两门课程的学生学号:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    s_id,</span><br><span class="line">    <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">AS</span> CNT_S</span><br><span class="line"><span class="keyword">FROM</span> score</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> s_id</span><br><span class="line"><span class="keyword">HAVING</span> CNT_S&gt;=<span class="number">2</span></span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321205759015.png" alt="image-20200321205759015"></p><ul><li>45、查询选修了全部课程的学生信息:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> A1 <span class="keyword">AS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        T1.s_id,</span><br><span class="line">        <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">AS</span> CNT_S</span><br><span class="line">    <span class="keyword">FROM</span> score <span class="keyword">AS</span> T1</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> T1.s_id</span><br><span class="line">    <span class="keyword">HAVING</span> CNT_S=<span class="number">3</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    A0.*</span><br><span class="line"><span class="keyword">FROM</span> student A0</span><br><span class="line"><span class="keyword">JOIN</span> A1</span><br><span class="line"><span class="keyword">ON</span> A0.s_id=A1.s_id</span><br><span class="line"><span class="keyword">WHERE</span> A1.CNT_S=<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321210907315.png" alt="image-20200321210907315"></p><ul><li>46、查询各学生的年龄(周岁):</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">    s_name,</span><br><span class="line">    s_birth,</span><br><span class="line">    (YEAR(current_date())-YEAR(s_birth)-</span><br><span class="line">        (CASE WHEN MONTH(current_date())&gt;MONTH(s_birth) THEN 0 </span><br><span class="line">              WHEN MONTH(current_date())=MONTH(s_birth) THEN </span><br><span class="line">                    (CASE WHEN DAY(current_date())&gt;=DAY(s_birth) THEN 0 ELSE 1 END)</span><br><span class="line">          ELSE 1 END)</span><br><span class="line">    ) AS AGE</span><br><span class="line">FROM student;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321213703448.png" alt="image-20200321213703448"></p><ul><li>47、查询本周过生日的学生:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">    s_name,</span><br><span class="line">    s_birth</span><br><span class="line">FROM student</span><br><span class="line">WHERE s_birth BETWEEN DATE_ADD(NEXT_DAY(current_date(), &apos;MON&apos;),-1) AND DATE_ADD(NEXT_DAY(current_date(), &apos;MON&apos;),-7);</span><br></pre></td></tr></table></figure><p>今天是3月21号，暂时没有本周过生日的同学，不过本题的思想是找到本周第一天和本周最后一天，HQL实现如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">        <span class="keyword">DATE_ADD</span>(NEXT_DAY(<span class="keyword">current_date</span>(), <span class="string">'MON'</span>),<span class="number">-1</span>) <span class="keyword">AS</span> SUNDAY,</span><br><span class="line">        <span class="keyword">DATE_ADD</span>(NEXT_DAY(<span class="keyword">current_date</span>(), <span class="string">'MON'</span>),<span class="number">-7</span>) <span class="keyword">AS</span> MONDAY</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321215322208.png" alt="image-20200321215322208"></p><ul><li>48、查询下周过生日的学生:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    s_name,</span><br><span class="line">    s_birth</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> s_birth <span class="keyword">BETWEEN</span> NEXT_DAY(<span class="keyword">current_date</span>(), <span class="string">'MON'</span>) <span class="keyword">AND</span> <span class="keyword">DATE_ADD</span>(NEXT_DAY(<span class="keyword">current_date</span>(), <span class="string">'MON'</span>),<span class="number">6</span>);</span><br></pre></td></tr></table></figure><p>同样没有下周过生日的同学，下周一到下周日的HQL如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NEXT_DAY(<span class="keyword">current_date</span>(), <span class="string">'MON'</span>) , <span class="keyword">DATE_ADD</span>(NEXT_DAY(<span class="keyword">current_date</span>(), <span class="string">'MON'</span>),<span class="number">6</span>)</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321215737713.png" alt="image-20200321215737713"></p><ul><li>49、查询本月过生日的学生:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    s_name,</span><br><span class="line">    s_birth</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">MONTH</span>(s_birth)=<span class="keyword">MONTH</span>(<span class="keyword">current_date</span>());</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321215852433.png" alt="image-20200321215852433"></p><ul><li>50、查询12月份过生日的学生:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    s_name,</span><br><span class="line">    s_birth</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">MONTH</span>(s_birth)=<span class="number">12</span>;</span><br></pre></td></tr></table></figure><p><img src="/cn/b8f1/image-20200321215929799.png" alt="image-20200321215929799"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;平常加班不多，为了提高自己的SQL能力，找了网上流传的比较广泛的SQL50题，先把题目拿过来，计划抽空作为练习用HiveSQL完成。&lt;/p&gt;&lt;p&gt;开始日期：2020-03-18&lt;/p&gt;&lt;p&gt;完成日期：2020-03-21&lt;/p&gt;&lt;p&gt;建表语句&lt;/p&gt;&lt;figure clas
      
    
    </summary>
    
      <category term="SQL" scheme="https://mapan.tech/cn/categories/SQL/"/>
    
    
  </entry>
  
  <entry>
    <title>归并排序</title>
    <link href="https://mapan.tech/cn/f8df.html"/>
    <id>https://mapan.tech/cn/f8df.html</id>
    <published>2020-03-15T06:38:41.000Z</published>
    <updated>2020-03-15T07:40:49.852Z</updated>
    
    <content type="html"><![CDATA[<p>归并排序采用经典的分治策略，利用归并的思想实现的排序方法。把一个待排序的数组无限拆分，直到子数组只有一个元素，然后开始按顺序再进行合并。想象一下若一副扑克牌乱序混在一起，如何从小到大排序？</p><ol><li>把牌堆分层两份，分给两个小伙伴进行从小到大排序。</li><li>两位小伙伴排序完成，给到有序牌堆A和有序牌堆B。</li><li>每次抽取两个牌堆最顶端一张进行比较，较小的合入到整体有序的牌堆C中。</li></ol><p>那么两个小伙伴是如何把分到的扑克牌给排序完成的呢？</p><ol><li><p>把牌堆分层两份，分给两个小伙伴进行从小到大排序。</p></li><li><p>两位小伙伴排序完成，给到有序牌堆A和有序牌堆B。</p></li><li><p>每次抽取两个牌堆最顶端一张进行比较，较小的合入到整体有序的牌堆C中。</p></li></ol><p>那么两个小伙伴是如何把分到的扑克牌给排序完成的呢？</p><p>重复步骤1-3 ···</p><p>当某次分牌时，某两位小伙伴各自仅分到了一张牌，那就不能再继续分了，他俩把分到的牌按照大小顺序交上去，这样就有了有序的牌堆（2张牌），然后2张合4张，4张合8张···，到最后整副扑克牌都是有序的。</p><p>这就是归并的思想</p><p><img src="/cn/f8df/MergeSrot.png" alt="MergeSrot"></p><p>动图理解：</p><p><img src="/cn/f8df/2346780.gif" alt="2346780"></p><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arr  带排序的数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> low  数组中较低的一侧的下标</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> high 数组中较高的一侧的下标</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> middle = (high + low) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (low &lt; high) &#123;</span><br><span class="line">        <span class="comment">// 处理左边</span></span><br><span class="line">        mergeSort(arr, low, middle);</span><br><span class="line">        <span class="comment">// 处理右边</span></span><br><span class="line">        mergeSort(arr, middle + <span class="number">1</span>, high);</span><br><span class="line">        <span class="comment">// 合并左右两边</span></span><br><span class="line">        merge(arr, low, middle, high);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arr    待归并的数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> low    左侧数组起始位置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> middle 左侧数组的结束位置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> high   右侧数组结束位置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> low, <span class="keyword">int</span> middle, <span class="keyword">int</span> high)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 用于存储归并后的临时数组</span></span><br><span class="line">    <span class="keyword">int</span>[] temp = <span class="keyword">new</span> <span class="keyword">int</span>[high - low + <span class="number">1</span>];</span><br><span class="line">    <span class="comment">// 记录第一个数组中需要遍历的下标</span></span><br><span class="line">    <span class="keyword">int</span> i = low;</span><br><span class="line">    <span class="comment">// 记录第二个数组中需要遍历的下标</span></span><br><span class="line">    <span class="keyword">int</span> j = middle + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 用于记录在临时数组中存放的下标</span></span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= middle &amp;&amp; j &lt;= high) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &lt;= arr[j]) &#123;</span><br><span class="line">            temp[index++] = arr[i++];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            temp[index++] = arr[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 一个数组中的数已经全部放入temp,剩下较长的一个子数组的数全部放进temp中</span></span><br><span class="line">    <span class="keyword">while</span> (j &lt;= high) &#123;</span><br><span class="line">        temp[index++] = arr[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= middle) &#123;</span><br><span class="line">        temp[index++] = arr[i++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 把临时数组中的数据重新存入原来数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; temp.length; k++) &#123;</span><br><span class="line">        arr[k + low] = temp[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;归并排序采用经典的分治策略，利用归并的思想实现的排序方法。把一个待排序的数组无限拆分，直到子数组只有一个元素，然后开始按顺序再进行合并。想象一下若一副扑克牌乱序混在一起，如何从小到大排序？&lt;/p&gt;&lt;ol&gt;&lt;li&gt;把牌堆分层两份，分给两个小伙伴进行从小到大排序。&lt;/li&gt;&lt;l
      
    
    </summary>
    
      <category term="算法" scheme="https://mapan.tech/cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>快速排序</title>
    <link href="https://mapan.tech/cn/2c2a.html"/>
    <id>https://mapan.tech/cn/2c2a.html</id>
    <published>2020-03-14T14:32:34.000Z</published>
    <updated>2020-03-18T12:36:27.389Z</updated>
    
    <content type="html"><![CDATA[<p>快速排序是对冒泡排序的一种改进，快速思想是使用分治法，其中有一个基准值，把一个数组中的数分为较基准值大和较基准值小的两部分（子数组），所有比基准值大的放在基准值后面，所有比基准值小的放在基准值前面，然后递归再次切分，直至子数组的大小为1或0，此时全局有序。</p><p>图示：</p><p><img src="/cn/2c2a/7789414-007520d3d4a7610c.gif" alt="7789414-007520d3d4a7610c"></p><p>快速排序是不稳定的排序，在排序后，相同值的先后顺序可能会变化，所以是不稳定的。</p><p>所谓是稳定性是指：假定在待排序的记录序列中，存在多个具有相同的关键字的记录，若经过排序，这些记录的相对次序保持不变，即在原序列中，r[i]=r[j]，且r[i]在r[j]之前，而在排序后的序列中，r[i]仍在r[j]之前，则称这种排序算法是稳定的；否则称为不稳定的。</p><p>代码实现：</p><p>Java版本：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="keyword">int</span> low = left;</span><br><span class="line">        <span class="keyword">int</span> high = right;</span><br><span class="line">        <span class="keyword">int</span> pivot = arr[left];</span><br><span class="line">        <span class="keyword">while</span> (low &lt; high) &#123;</span><br><span class="line">            <span class="keyword">while</span> (low &lt; high &amp;&amp; arr[high] &gt;= pivot) &#123;</span><br><span class="line">                high--;</span><br><span class="line">            &#125;</span><br><span class="line">            arr[low] = arr[high];</span><br><span class="line">            <span class="keyword">while</span> (low &lt; high &amp;&amp; arr[low] &lt;= pivot) &#123;</span><br><span class="line">                low++;</span><br><span class="line">            &#125;</span><br><span class="line">            arr[high] = arr[low];</span><br><span class="line">        &#125;</span><br><span class="line">        arr[low] = pivot;</span><br><span class="line">        quickSort(arr, left, low - <span class="number">1</span>);</span><br><span class="line">        quickSort(arr, low + <span class="number">1</span>, right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Scala版本：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quickSort</span></span>(arr: <span class="type">Array</span>[<span class="type">Int</span>], left: <span class="type">Int</span>, right: <span class="type">Int</span>): <span class="type">Unit</span> = &#123;</span><br><span class="line">  <span class="keyword">if</span> (left &lt; right) &#123;</span><br><span class="line">    <span class="keyword">var</span> low = left</span><br><span class="line">    <span class="keyword">var</span> high = right</span><br><span class="line">    <span class="keyword">val</span> pivot = arr(low)</span><br><span class="line">    <span class="keyword">while</span> (low &lt; high) &#123;</span><br><span class="line">      <span class="keyword">while</span> (low &lt; high &amp;&amp; arr(high) &gt;= pivot) high -= <span class="number">1</span></span><br><span class="line">      arr(low) = arr(high)</span><br><span class="line">      <span class="keyword">while</span> (low &lt; high &amp;&amp; arr(low) &lt;= pivot) low += <span class="number">1</span></span><br><span class="line">      arr(high) = arr(low)</span><br><span class="line">    &#125;</span><br><span class="line">    arr(low) = pivot</span><br><span class="line">    quickSort(arr, low + <span class="number">1</span>, right)</span><br><span class="line">    quickSort(arr, left, low - <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在网上看了不少人的快速排序代码，其整体思想都是一样的，分治，递归。但是具体实现细节上则各不相同，八仙过海，大显神通。上面代码是我觉得比较好简洁，且理解相对容易的一种写法。另外Scala版本有一个十分精简的写法：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quickSort</span></span>(list: <span class="type">List</span>[<span class="type">Int</span>]): <span class="type">List</span>[<span class="type">Int</span>] = list <span class="keyword">match</span> &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">Nil</span> =&gt; <span class="type">Nil</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">List</span>() =&gt; <span class="type">List</span>()</span><br><span class="line">    <span class="keyword">case</span> head :: tail =&gt;</span><br><span class="line">      <span class="keyword">val</span> (left, right) = tail.partition(_ &lt; head)</span><br><span class="line">      quickSort(left) ::: head :: quickSort(right)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>Scala这么优雅的语言，真的让人赏心悦目。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;快速排序是对冒泡排序的一种改进，快速思想是使用分治法，其中有一个基准值，把一个数组中的数分为较基准值大和较基准值小的两部分（子数组），所有比基准值大的放在基准值后面，所有比基准值小的放在基准值前面，然后递归再次切分，直至子数组的大小为1或0，此时全局有序。&lt;/p&gt;&lt;p&gt;图示
      
    
    </summary>
    
      <category term="算法" scheme="https://mapan.tech/cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>希尔排序</title>
    <link href="https://mapan.tech/cn/3c6c.html"/>
    <id>https://mapan.tech/cn/3c6c.html</id>
    <published>2020-03-14T08:01:06.000Z</published>
    <updated>2020-03-14T11:23:43.989Z</updated>
    
    <content type="html"><![CDATA[<h1 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h1><p>希尔排序的思想是按照下标的一定增量分组，对魅族使用直接插入排序算法进行排序，随着增量逐渐减少，每组包含的关键词越来越多，当增量减少到1时，整个文件恰好被分成一组，算法终止。<br>简单来说就是按照一定步长分组，例如100个数排序，第一次分50组，每组两个数，第二次分25组，每组4个数，第三次分12组，第四次分6组，第五次分3组，第六次分1组。每一次分组后在组内进行排序。</p><p>排序流程：</p><p><img src="/cn/3c6c/srg453d.gif" alt="希尔排序"></p><p>代码实现：</p><p>首先分组，然后使用交换法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shellSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 第一个循环，对数组进行分组，直到gap=1为止</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> gap = arr.length / <span class="number">2</span>; gap &gt; <span class="number">0</span>; gap /= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="comment">//交替遍历所有组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = gap; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 组内排序，使用交换法</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i - gap; j &gt;= <span class="number">0</span>; j -= gap) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + gap]) &#123;</span><br><span class="line">                    arr[j] = arr[j] ^ arr[j + gap];</span><br><span class="line">                    arr[j + gap] = arr[j] ^ arr[j + gap];</span><br><span class="line">                    arr[j] = arr[j] ^ arr[j + gap];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用交换法，每次对比都要进行交换，效率比较低，内部排序的方式可以修改成直接插入排序。</p><p>分组，然后插入法（希尔排序）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shellSort2</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 第一个循环，对数组进行分组，直到gap=1为止</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> gap = arr.length / <span class="number">2</span>; gap &gt; <span class="number">0</span>; gap /= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="comment">// 交替遍历所有的组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = gap; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> j = i;</span><br><span class="line">            <span class="keyword">int</span> temp = arr[j];</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &lt; arr[j - gap]) &#123;</span><br><span class="line">                <span class="comment">// 移动数据，等待插入</span></span><br><span class="line">                <span class="keyword">while</span> (j - gap &gt;= <span class="number">0</span> &amp;&amp; temp &lt; arr[j - gap]) &#123;</span><br><span class="line">                    arr[j] = arr[j - gap];</span><br><span class="line">                    j -= gap;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 找到待插入的位置，插入数据</span></span><br><span class="line">                arr[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>希尔排序是对直接插入排序的更高效的改进版本，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;希尔排序&quot;&gt;&lt;a href=&quot;#希尔排序&quot; class=&quot;headerlink&quot; title=&quot;希尔排序&quot;&gt;&lt;/a&gt;希尔排序&lt;/h1&gt;&lt;p&gt;希尔排序的思想是按照下标的一定增量分组，对魅族使用直接插入排序算法进行排序，随着增量逐渐减少，每组包含的关键词越来越多，当增
      
    
    </summary>
    
      <category term="算法" scheme="https://mapan.tech/cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>三大经典排序</title>
    <link href="https://mapan.tech/cn/846c.html"/>
    <id>https://mapan.tech/cn/846c.html</id>
    <published>2020-03-13T12:27:14.000Z</published>
    <updated>2020-03-14T11:35:15.804Z</updated>
    
    <content type="html"><![CDATA[<p>2018年Coding被腾讯收购后变成了腾讯开发者平台，一直不温不火。今年一月份有又要改名为新Coding，真是命途多舛，还好提供的服务一直可以满足我的需求。虽然偶尔服务器宕机，但是速度快呀，Coding pages还是真香。由于今年网站再次改版，之前的pages要停止服务了，貌似也没有通知一声，昨天修复了一下，看了下留言，我的小站还是有人浏览的。所以决定还是要好好经营下去。</p><p>最近看了一些书，有了一些新的感悟。学习是要有输出的，只有自己能把一个东西讲清楚才算真正学会了，那么就把最近研究和学习的一些东西给写下来吧。</p><h1 id="大学学过的一些很基础的排序算法"><a href="#大学学过的一些很基础的排序算法" class="headerlink" title="大学学过的一些很基础的排序算法"></a>大学学过的一些很基础的排序算法</h1><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p>掌握一种算法不是把它的实现代码给背下来，而是理解他的思想。这样就可以做到以不变应万变。<br>冒泡排序的思想是：在一个n个数的乱序数组中，遍历整个数组(n-1)轮，每次遍历位数减少1，每次选择出一个最大的数放在数组的末尾，这样在经过(n-1)轮遍历之后，数组中所有的元素都是有序的。<br>原理：<br><img src="/cn/846c/e9011afacb434ea09c8a156dc9983bfb.gif" alt="冒泡排序"></p><p>实现代码：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubble</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j + <span class="number">1</span>] &lt; arr[j]) &#123;</span><br><span class="line">                arr[j + <span class="number">1</span>] = arr[j + <span class="number">1</span>] ^ arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>] ^ arr[j];</span><br><span class="line">                arr[j + <span class="number">1</span>] = arr[j + <span class="number">1</span>] ^ arr[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"第"</span> + (i) + <span class="string">"趟排序:"</span> + Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>上面我使用了一个不引入第三个变量，实现交换两个变量的值的技巧，一个数对另一个数进行两次异或运算得到的结果是这个数本身，交换a和b的值的方法：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = a ^ b;</span><br><span class="line">b = a ^ b;</span><br><span class="line">a = a ^ b;</span><br></pre></td></tr></table></figure><p></p><p>那么不管是最好的情况还是最坏的情况，实际判断的次数是不会减少的，是否可以优化呢？答案是肯定的，如果在最好的情况下，可以发现，在第一趟排序中所有的数都没有发生交换。<br>所以可以进行如下优化，当在一轮遍历中，如果没有两个数进行交换，就可以认为整体数组是有序的，优化之后的代码：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubble</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j + <span class="number">1</span>] &lt; arr[j]) &#123;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                arr[j + <span class="number">1</span>] = arr[j + <span class="number">1</span>] ^ arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>] ^ arr[j];</span><br><span class="line">                arr[j + <span class="number">1</span>] = arr[j + <span class="number">1</span>] ^ arr[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"第"</span> + (i) + <span class="string">"趟排序:"</span> + Arrays.toString(arr));</span><br><span class="line">        <span class="comment">// 在一趟排序中，若没有发生过交换，说明已经排好序了。</span></span><br><span class="line">        <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            flag = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><p>选择排序相对冒泡排序而言，交换的次数减少了，所以效率也提高了一些。选择排序的思想是：<br>经过(n-1)轮遍历，依次找到每个位置上该放的值。第1次遍历找到最小的值a，把它当到第一位；第2次遍历找到除最小值a以外的最小值b，把它放到第二位··· 直到(n-1)次遍历，找到最小值把它放到(n-1)位，即第倒数二位。此时数组为全局有序。<br>原理：<br><img src="/cn/846c/0d74357a85fb419da3fc60219b2172ac.gif" alt="选择排序"></p><p>代码实现：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 选择排序 时间复杂度O(n^2)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> minIndex = i;</span><br><span class="line">        <span class="keyword">int</span> min = arr[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (min &gt; arr[j]) &#123;</span><br><span class="line">                min = arr[j];</span><br><span class="line">                minIndex = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (minIndex != i) &#123;</span><br><span class="line">            arr[minIndex] = arr[i];</span><br><span class="line">            arr[i] = min;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p>选择排序的思想是找位置，与选择排序不同，插入排序的思想是找一个有序的区间，保证这个区间内是有序的。通过一次次的遍历，逐渐扩大这个有序区间，直到区间大小等于数组大小，即数组全局有序。所谓逐渐扩大，即把待插入的数，插入到有序区间内属于这个数的恰当位置。</p><p>原理：<br><img src="/cn/846c/1167a023cbec4da0aa056ca481104d16.gif" alt="插入排序"></p><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义待插入的数</span></span><br><span class="line">        <span class="keyword">int</span> insertVal = arr[i];</span><br><span class="line">        <span class="comment">//即arr[i]前面这个数的下标</span></span><br><span class="line">        <span class="keyword">int</span> insertIndex = i - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给insertVal找到插入的位置</span></span><br><span class="line">        <span class="comment">//说明</span></span><br><span class="line">        <span class="comment">//1.insertIndex &gt;= 0保证在给insertVal找插入位置，不越界</span></span><br><span class="line">        <span class="comment">//2.insertVal &lt; arr[insertIndex]待插入的数，还没有找到插入位置</span></span><br><span class="line">        <span class="comment">//3.就需要将arr[insertIndex]后移</span></span><br><span class="line">        <span class="keyword">while</span> (insertIndex &gt;= <span class="number">0</span> &amp;&amp; insertVal &lt; arr[insertIndex]) &#123;</span><br><span class="line">            arr[insertIndex + <span class="number">1</span>] = arr[insertIndex];</span><br><span class="line">            insertIndex--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//当退出while循环时，说明插入的位置找到，insertIndex + 1</span></span><br><span class="line">        arr[insertIndex + <span class="number">1</span>] = insertVal;</span><br><span class="line">        System.out.println(<span class="string">"第"</span> + i + <span class="string">"轮插入"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2018年Coding被腾讯收购后变成了腾讯开发者平台，一直不温不火。今年一月份有又要改名为新Coding，真是命途多舛，还好提供的服务一直可以满足我的需求。虽然偶尔服务器宕机，但是速度快呀，Coding pages还是真香。由于今年网站再次改版，之前的pages要停止服务
      
    
    </summary>
    
      <category term="算法" scheme="https://mapan.tech/cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>牛客网SQL题目</title>
    <link href="https://mapan.tech/cn/7b61.html"/>
    <id>https://mapan.tech/cn/7b61.html</id>
    <published>2020-01-04T03:55:40.000Z</published>
    <updated>2020-03-12T13:37:02.187Z</updated>
    
    <content type="html"><![CDATA[<p>牛客网题目 <a href="https://www.nowcoder.com/ta/sql">https://www.nowcoder.com/ta/sql</a><br>共计61道题目，现已全部完成</p><h2 id="第01题"><a href="#第01题" class="headerlink" title="第01题"></a>第01题</h2><ul><li>题目描述：查找最晚入职员工的所有信息</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employees`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`birth_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">14</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`gender`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`hire_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th><th style="text-align:left">birth_date</th><th style="text-align:left">first_name</th><th style="text-align:left">last_name</th><th style="text-align:left">gender</th><th style="text-align:left">hire_date</th></tr></thead><tbody><tr><td style="text-align:left">10008</td><td style="text-align:left">1958-02-19</td><td style="text-align:left">Saniya</td><td style="text-align:left">Kalloufi</td><td style="text-align:left">M</td><td style="text-align:left">1994-09-15</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * </span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"><span class="keyword">where</span> hire_date=(<span class="keyword">select</span> hire_date <span class="keyword">from</span> employees <span class="keyword">order</span> <span class="keyword">by</span> hire_date <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">1</span> )</span><br></pre></td></tr></table></figure><h2 id="第02题"><a href="#第02题" class="headerlink" title="第02题"></a>第02题</h2><ul><li>题目描述：查找入职员工时间排名倒数第三的员工所有信息</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employees`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`birth_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">14</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`gender`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`hire_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th><th style="text-align:left">birth_date</th><th style="text-align:left">first_name</th><th style="text-align:left">last_name</th><th style="text-align:left">gender</th><th style="text-align:left">hire_date</th></tr></thead><tbody><tr><td style="text-align:left">10005</td><td style="text-align:left">1955-01-21</td><td style="text-align:left">Kyoichi</td><td style="text-align:left">Maliniak</td><td style="text-align:left">M</td><td style="text-align:left">1989-09-12</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> employees </span><br><span class="line"><span class="keyword">where</span> hire_date=(</span><br><span class="line">    <span class="keyword">select</span> hire_date </span><br><span class="line">    <span class="keyword">from</span> employees</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> hire_date </span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> hire_date <span class="keyword">desc</span></span><br><span class="line">    <span class="keyword">limit</span> <span class="number">2</span>,<span class="number">1</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="第03题"><a href="#第03题" class="headerlink" title="第03题"></a>第03题</h2><ul><li>题目描述：查找各个部门当前(to_date=’9999-01-01’)领导当前薪水详情以及其对应部门编号dept_no</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`dept_manager`</span> (</span><br><span class="line"><span class="string">`dept_no`</span> <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`dept_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th><th style="text-align:left">salary</th><th style="text-align:left">from_date</th><th style="text-align:left">to_date</th><th style="text-align:left">dept_no</th></tr></thead><tbody><tr><td style="text-align:left">10002</td><td style="text-align:left">72527</td><td style="text-align:left">2001-08-02</td><td style="text-align:left">9999-01-01</td><td style="text-align:left">d001</td></tr><tr><td style="text-align:left">10004</td><td style="text-align:left">74057</td><td style="text-align:left">2001-11-27</td><td style="text-align:left">9999-01-01</td><td style="text-align:left">d004</td></tr><tr><td style="text-align:left">10005</td><td style="text-align:left">94692</td><td style="text-align:left">2001-09-09</td><td style="text-align:left">9999-01-01</td><td style="text-align:left">d003</td></tr><tr><td style="text-align:left">10006</td><td style="text-align:left">43311</td><td style="text-align:left">2001-08-02</td><td style="text-align:left">9999-01-01</td><td style="text-align:left">d002</td></tr><tr><td style="text-align:left">10010</td><td style="text-align:left">94409</td><td style="text-align:left">2001-11-23</td><td style="text-align:left">9999-01-01</td><td style="text-align:left">d006</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">    t2.*,</span><br><span class="line">    t1.dept_no</span><br><span class="line"><span class="keyword">from</span> salaries <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">join</span> dept_manager <span class="keyword">as</span> t1</span><br><span class="line"><span class="keyword">on</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">where</span> t1.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> t2.to_date=<span class="string">'9999-01-01'</span>;</span><br></pre></td></tr></table></figure><h2 id="第04题"><a href="#第04题" class="headerlink" title="第04题"></a>第04题</h2><ul><li>题目描述：查找所有已经分配部门的员工的last_name和first_name</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`dept_emp`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`dept_no`</span> <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`dept_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employees`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`birth_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">14</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`gender`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`hire_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">last_name</th><th style="text-align:left">first_name</th><th style="text-align:left">dept_no</th></tr></thead><tbody><tr><td style="text-align:left">Facello</td><td style="text-align:left">Georgi</td><td style="text-align:left">d001</td></tr><tr><td style="text-align:left">省略</td><td style="text-align:left">省略</td><td style="text-align:left">省略</td></tr><tr><td style="text-align:left">Piveteau</td><td style="text-align:left">Duangkaew</td><td style="text-align:left">d006</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    t1.last_name,</span><br><span class="line">    t1.first_name,</span><br><span class="line">    t2.dept_no</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">    employees <span class="keyword">as</span> t1,</span><br><span class="line">    dept_emp <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">where</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">and</span> t2.dept_no <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><h2 id="第05题"><a href="#第05题" class="headerlink" title="第05题"></a>第05题</h2><ul><li>题目描述：查找所有员工的last_name和first_name以及对应部门编号dept_no，也包括展示没有分配具体部门的员工</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`dept_emp`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`dept_no`</span> <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`dept_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employees`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`birth_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">14</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`gender`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`hire_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">last_name</th><th style="text-align:left">first_name</th><th style="text-align:left">dept_no</th></tr></thead><tbody><tr><td style="text-align:left">Facello</td><td style="text-align:left">Georgi</td><td style="text-align:left">d001</td></tr><tr><td style="text-align:left">省略</td><td style="text-align:left">省略</td><td style="text-align:left">省略</td></tr><tr><td style="text-align:left">Sluis</td><td style="text-align:left">Mary</td><td style="text-align:left">NULL(在sqlite中此处为空,MySQL为NULL)</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    t2.last_name,</span><br><span class="line">    t2.first_name,</span><br><span class="line">    t1.dept_no</span><br><span class="line"><span class="keyword">from</span> employees <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> dept_emp <span class="keyword">as</span> t1</span><br><span class="line"><span class="keyword">on</span> t1.emp_no=t2.emp_no;</span><br></pre></td></tr></table></figure><h2 id="第06题"><a href="#第06题" class="headerlink" title="第06题"></a>第06题</h2><ul><li>题目描述：查找所有员工入职时候的薪水情况，给出emp_no以及salary， 并按照emp_no进行逆序</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employees`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`birth_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">14</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`gender`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`hire_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th><th style="text-align:left">salary</th></tr></thead><tbody><tr><td style="text-align:left">10011</td><td style="text-align:left">25828</td></tr><tr><td style="text-align:left">省略</td><td style="text-align:left">省略</td></tr><tr><td style="text-align:left">10001</td><td style="text-align:left">60117</td></tr></tbody></table></div><ul><li>答案：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    t1.emp_no,</span><br><span class="line">    t2.salary</span><br><span class="line"><span class="keyword">from</span> employees <span class="keyword">as</span> t1</span><br><span class="line"><span class="keyword">join</span> salaries <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">on</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">where</span> t1.hire_date=t2.from_date</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> t1.emp_no <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="第07题"><a href="#第07题" class="headerlink" title="第07题"></a>第07题</h2><ul><li>题目描述：查找薪水涨幅超过15次的员工号emp_no以及其对应的涨幅次数t</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th><th style="text-align:left">t</th></tr></thead><tbody><tr><td style="text-align:left">10001</td><td style="text-align:left">17</td></tr><tr><td style="text-align:left">10004</td><td style="text-align:left">16</td></tr><tr><td style="text-align:left">10009</td><td style="text-align:left">18</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    emp_no,</span><br><span class="line">    <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">from</span> salaries</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> emp_no</span><br><span class="line"><span class="keyword">having</span> t&gt;<span class="number">15</span>;</span><br></pre></td></tr></table></figure><h2 id="第08题"><a href="#第08题" class="headerlink" title="第08题"></a>第08题</h2><ul><li>题目描述：找出所有员工当前(to_date=’9999-01-01’)具体的薪水salary情况，对于相同的薪水只显示一次,并按照逆序显示</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">salary</th></tr></thead><tbody><tr><td style="text-align:left">94692</td></tr><tr><td style="text-align:left">94409</td></tr><tr><td style="text-align:left">88958</td></tr><tr><td style="text-align:left">88070</td></tr><tr><td style="text-align:left">74057</td></tr><tr><td style="text-align:left">72527</td></tr><tr><td style="text-align:left">59755</td></tr><tr><td style="text-align:left">43311</td></tr><tr><td style="text-align:left">25828</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    <span class="keyword">distinct</span> salary</span><br><span class="line"><span class="keyword">from</span> salaries</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">to_date</span>=<span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> salary <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h2 id="第09题"><a href="#第09题" class="headerlink" title="第09题"></a>第09题</h2><ul><li>题目描述：获取所有部门当前manager的当前薪水情况，给出dept_no, emp_no以及salary，当前表示to_date=’9999-01-01’</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`dept_manager`</span> (</span><br><span class="line"><span class="string">`dept_no`</span> <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`dept_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">dept_no</th><th style="text-align:left">emp_no</th><th style="text-align:left">salary</th></tr></thead><tbody><tr><td style="text-align:left">d001</td><td style="text-align:left">10002</td><td style="text-align:left">72527</td></tr><tr><td style="text-align:left">d004</td><td style="text-align:left">10004</td><td style="text-align:left">74057</td></tr><tr><td style="text-align:left">d003</td><td style="text-align:left">10005</td><td style="text-align:left">94692</td></tr><tr><td style="text-align:left">d002</td><td style="text-align:left">10006</td><td style="text-align:left">43311</td></tr><tr><td style="text-align:left">d006</td><td style="text-align:left">10010</td><td style="text-align:left">94409</td></tr></tbody></table></div><ul><li>答案：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    t2.dept_no,</span><br><span class="line">    t2.emp_no,</span><br><span class="line">    t1.salary</span><br><span class="line"><span class="keyword">from</span> salaries <span class="keyword">as</span> t1</span><br><span class="line"><span class="keyword">join</span> dept_manager <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">on</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">where</span> t1.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> t2.to_date=<span class="string">'9999-01-01'</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="第10题"><a href="#第10题" class="headerlink" title="第10题"></a>第10题</h2><ul><li>题目描述：获取所有非manager的员工emp_no</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`dept_manager`</span> (</span><br><span class="line"><span class="string">`dept_no`</span> <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`dept_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employees`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`birth_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">14</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`gender`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`hire_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th></tr></thead><tbody><tr><td style="text-align:left">10001</td></tr><tr><td style="text-align:left">10003</td></tr><tr><td style="text-align:left">10007</td></tr><tr><td style="text-align:left">10008</td></tr><tr><td style="text-align:left">10009</td></tr><tr><td style="text-align:left">10011</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    t1.emp_no</span><br><span class="line"><span class="keyword">from</span> employees <span class="keyword">as</span> t1</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> dept_manager <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">on</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">where</span> t2.dept_no <span class="keyword">is</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><h2 id="第11题"><a href="#第11题" class="headerlink" title="第11题"></a>第11题</h2><ul><li>题目描述： 获取所有员工当前的manager，如果当前的manager是自己的话结果不显示，当前表示to_date=’9999-01-01’。<br>结果第一列给出当前员工的emp_no,第二列给出其manager对应的manager_no。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`dept_emp`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`dept_no`</span> <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`dept_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`dept_manager`</span> (</span><br><span class="line"><span class="string">`dept_no`</span> <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`dept_no`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th><th style="text-align:left">manager_no</th></tr></thead><tbody><tr><td style="text-align:left">10001</td><td style="text-align:left">10002</td></tr><tr><td style="text-align:left">10003</td><td style="text-align:left">10004</td></tr><tr><td style="text-align:left">10009</td><td style="text-align:left">10010</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    t1.emp_no,</span><br><span class="line">    t2.emp_no <span class="keyword">as</span> manager_no</span><br><span class="line"><span class="keyword">from</span> dept_emp <span class="keyword">as</span> t1</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> dept_manager <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">on</span> t1.dept_no=t2.dept_no</span><br><span class="line"><span class="keyword">where</span> t1.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> t2.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> t1.emp_no&lt;&gt;t2.emp_no;</span><br></pre></td></tr></table></figure><h2 id="第12题"><a href="#第12题" class="headerlink" title="第12题"></a>第12题</h2><ul><li>题目描述：获取所有部门中当前员工薪水最高的相关信息，给出dept_no, emp_no以及其对应的salary</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`dept_emp`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`dept_no`</span> <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`dept_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">dept_no</th><th style="text-align:left">emp_no</th><th style="text-align:left">salary</th></tr></thead><tbody><tr><td style="text-align:left">d001</td><td style="text-align:left">10001</td><td style="text-align:left">88958</td></tr><tr><td style="text-align:left">d002</td><td style="text-align:left">10006</td><td style="text-align:left">43311</td></tr><tr><td style="text-align:left">d003</td><td style="text-align:left">10005</td><td style="text-align:left">94692</td></tr><tr><td style="text-align:left">d004</td><td style="text-align:left">10004</td><td style="text-align:left">74057</td></tr><tr><td style="text-align:left">d005</td><td style="text-align:left">10007</td><td style="text-align:left">88070</td></tr><tr><td style="text-align:left">d006</td><td style="text-align:left">10009</td><td style="text-align:left">95409</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    t1.dept_no, </span><br><span class="line">    t1.emp_no, </span><br><span class="line">    t2.salary</span><br><span class="line"><span class="keyword">from</span> dept_emp <span class="keyword">as</span> t1 </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> salaries <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">on</span> t1.emp_no = t2.emp_no</span><br><span class="line"><span class="keyword">and</span> t1.to_date = <span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> t2.to_date = <span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">where</span> t2.salary = (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">max</span>(t3.salary)</span><br><span class="line">    <span class="keyword">from</span> dept_emp <span class="keyword">as</span> t4</span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">join</span> salaries <span class="keyword">as</span> t3</span><br><span class="line">    <span class="keyword">on</span> t3.emp_no = t4.emp_no</span><br><span class="line">    <span class="keyword">and</span> t3.to_date = <span class="string">'9999-01-01'</span></span><br><span class="line">    <span class="keyword">and</span> t4.to_date = <span class="string">'9999-01-01'</span></span><br><span class="line">    <span class="keyword">where</span> t4.dept_no = t1.dept_no</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> t4.dept_no)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> t1.dept_no;</span><br></pre></td></tr></table></figure><h2 id="第13题"><a href="#第13题" class="headerlink" title="第13题"></a>第13题</h2><ul><li>题目描述：从titles表获取按照title进行分组，每组个数大于等于2，给出title以及对应的数目t。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">"titles"</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">title</th><th style="text-align:left">t</th></tr></thead><tbody><tr><td style="text-align:left">Assistant Engineer</td><td style="text-align:left">2</td></tr><tr><td style="text-align:left">Engineer</td><td style="text-align:left">4</td></tr><tr><td style="text-align:left">省略</td><td style="text-align:left">省略</td></tr><tr><td style="text-align:left">Staff</td><td style="text-align:left">3</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    title,</span><br><span class="line">    <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> title</span><br><span class="line"><span class="keyword">having</span> t&gt;=<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h2 id="第14题"><a href="#第14题" class="headerlink" title="第14题"></a>第14题</h2><ul><li>题目描述：从titles表获取按照title进行分组，每组个数大于等于2，给出title以及对应的数目t。<br>注意对于重复的emp_no进行忽略。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`titles`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">title</th><th style="text-align:left">t</th></tr></thead><tbody><tr><td style="text-align:left">Assistant Engineer</td><td style="text-align:left">2</td></tr><tr><td style="text-align:left">Engineer</td><td style="text-align:left">3</td></tr><tr><td style="text-align:left">省略</td><td style="text-align:left">省略</td></tr><tr><td style="text-align:left">Staff</td><td style="text-align:left">3</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    title,</span><br><span class="line">    <span class="keyword">count</span>(<span class="keyword">distinct</span> emp_no) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> title;</span><br></pre></td></tr></table></figure><h2 id="第15题"><a href="#第15题" class="headerlink" title="第15题"></a>第15题</h2><ul><li>题目描述：查找employees表所有emp_no为奇数，且last_name不为Mary的员工信息，并按照hire_date逆序排列</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employees`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`birth_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">14</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`gender`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`hire_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th><th style="text-align:left">birth_date</th><th style="text-align:left">first_name</th><th style="text-align:left">last_name</th><th style="text-align:left">gender</th><th style="text-align:left">hire_date</th></tr></thead><tbody><tr><td style="text-align:left">10011</td><td style="text-align:left">1953-11-07</td><td style="text-align:left">Mary</td><td style="text-align:left">Sluis</td><td style="text-align:left">F</td><td style="text-align:left">1990-01-22</td></tr><tr><td style="text-align:left">10005</td><td style="text-align:left">1955-01-21</td><td style="text-align:left">Kyoichi</td><td style="text-align:left">Maliniak</td><td style="text-align:left">M</td><td style="text-align:left">1989-09-12</td></tr><tr><td style="text-align:left">10007</td><td style="text-align:left">1957-05-23</td><td style="text-align:left">Tzvetan</td><td style="text-align:left">Zielinski</td><td style="text-align:left">F</td><td style="text-align:left">1989-02-10</td></tr><tr><td style="text-align:left">10003</td><td style="text-align:left">1959-12-03</td><td style="text-align:left">Parto</td><td style="text-align:left">Bamford</td><td style="text-align:left">M</td><td style="text-align:left">1986-08-28</td></tr><tr><td style="text-align:left">10001</td><td style="text-align:left">1953-09-02</td><td style="text-align:left">Georgi</td><td style="text-align:left">Facello</td><td style="text-align:left">M</td><td style="text-align:left">1986-06-26</td></tr><tr><td style="text-align:left">10009</td><td style="text-align:left">1952-04-19</td><td style="text-align:left">Sumant</td><td style="text-align:left">Peac</td><td style="text-align:left">F</td><td style="text-align:left">1985-02-18</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> employees</span><br><span class="line"><span class="keyword">where</span> emp_no&amp;<span class="number">1</span>=<span class="number">1</span></span><br><span class="line"><span class="keyword">and</span> last_name&lt;&gt;<span class="string">"Mary"</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> hire_date <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h2 id="第16题"><a href="#第16题" class="headerlink" title="第16题"></a>第16题</h2><ul><li>题目描述：统计出当前各个title类型对应的员工当前（to_date=’9999-01-01’）薪水对应的平均工资。结果给出title以及平均工资avg。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">"titles"</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">title</th><th style="text-align:left">avg</th></tr></thead><tbody><tr><td style="text-align:left">Engineer</td><td style="text-align:left">94409.0</td></tr><tr><td style="text-align:left">Senior Engineer</td><td style="text-align:left">69009.2</td></tr><tr><td style="text-align:left">Senior Staff</td><td style="text-align:left">91381.0</td></tr><tr><td style="text-align:left">Staff</td><td style="text-align:left">72527.0</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    title,</span><br><span class="line">    <span class="keyword">avg</span>(salary) <span class="keyword">as</span> <span class="keyword">avg</span></span><br><span class="line"><span class="keyword">from</span> salaries <span class="keyword">as</span> t1</span><br><span class="line"><span class="keyword">join</span> titles <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">on</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">and</span> t1.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> t2.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> t2.title;</span><br></pre></td></tr></table></figure><h2 id="第17题"><a href="#第17题" class="headerlink" title="第17题"></a>第17题</h2><ul><li>题目描述：获取当前（to_date=’9999-01-01’）薪水第二多的员工的emp_no以及其对应的薪水salary</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th><th style="text-align:left">salary</th></tr></thead><tbody><tr><td style="text-align:left">10009</td><td style="text-align:left">94409</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    emp_no,</span><br><span class="line">    salary</span><br><span class="line"><span class="keyword">from</span> salaries</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">to_date</span>=<span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">and</span> salary=(</span><br><span class="line">    <span class="keyword">select</span> salary</span><br><span class="line">    <span class="keyword">from</span> salaries</span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">to_date</span>=<span class="string">'9999-01-01'</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> salary</span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> salary <span class="keyword">desc</span></span><br><span class="line">    <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="第18题"><a href="#第18题" class="headerlink" title="第18题"></a>第18题</h2><ul><li>题目描述：查找当前薪水(to_date=’9999-01-01’)排名第二多的员工编号emp_no、薪水salary、last_name以及first_name，不准使用order by</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employees`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`birth_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">14</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`gender`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`hire_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th><th style="text-align:left">salary</th><th style="text-align:left">last_name</th><th style="text-align:left">first_name</th></tr></thead><tbody><tr><td style="text-align:left">10009</td><td style="text-align:left">94409</td><td style="text-align:left">Peac</td><td style="text-align:left">Sumant</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    t2.emp_no,</span><br><span class="line">    t1.salary,</span><br><span class="line">    t2.last_name,</span><br><span class="line">    t2.first_name</span><br><span class="line"><span class="keyword">FROM</span> salaries <span class="keyword">AS</span> t1</span><br><span class="line"><span class="keyword">JOIN</span> employees <span class="keyword">AS</span> t2</span><br><span class="line"><span class="keyword">ON</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">AND</span> t1.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line"><span class="keyword">WHERE</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span> t3.salary)</span><br><span class="line">    <span class="keyword">FROM</span> salaries <span class="keyword">AS</span> t3</span><br><span class="line">    <span class="keyword">WHERE</span> t3.to_date=<span class="string">'9999-01-01'</span></span><br><span class="line">    <span class="keyword">AND</span> t3.salary&gt;t1.salary</span><br><span class="line">)=<span class="number">1</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> salary;</span><br></pre></td></tr></table></figure><h2 id="第19题"><a href="#第19题" class="headerlink" title="第19题"></a>第19题</h2><ul><li>题目描述：查找所有员工的last_name和first_name以及对应的dept_name，也包括暂时没有分配部门的员工</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`departments`</span> (</span><br><span class="line"><span class="string">`dept_no`</span> <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`dept_name`</span> <span class="built_in">varchar</span>(<span class="number">40</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`dept_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`dept_emp`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`dept_no`</span> <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`dept_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employees`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`birth_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">14</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`gender`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`hire_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">last_name</th><th style="text-align:left">first_name</th><th style="text-align:left">dept_name</th></tr></thead><tbody><tr><td style="text-align:left">Facello</td><td style="text-align:left">Georgi</td><td style="text-align:left">Marketing</td></tr><tr><td style="text-align:left">省略</td><td style="text-align:left">省略</td><td style="text-align:left">省略</td></tr><tr><td style="text-align:left">Sluis</td><td style="text-align:left">Mary</td><td style="text-align:left">NULL</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    last_name,</span><br><span class="line">    first_name,</span><br><span class="line">    dept_name</span><br><span class="line"><span class="keyword">FROM</span> employees <span class="keyword">AS</span> t1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept_emp <span class="keyword">AS</span> t2</span><br><span class="line"><span class="keyword">ON</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> departments <span class="keyword">AS</span> t3</span><br><span class="line"><span class="keyword">ON</span> t2.dept_no=t3.dept_no;</span><br></pre></td></tr></table></figure><h2 id="第20题"><a href="#第20题" class="headerlink" title="第20题"></a>第20题</h2><ul><li>查找员工编号emp_no为10001其自入职以来的薪水salary涨幅值growth</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">growth</th></tr></thead><tbody><tr><td style="text-align:left">28841</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(salary)-<span class="keyword">min</span>(salary) <span class="keyword">as</span> growth</span><br><span class="line"><span class="keyword">from</span> salaries</span><br><span class="line"><span class="keyword">where</span> emp_no=<span class="number">10001</span>;</span><br></pre></td></tr></table></figure><h2 id="第21题"><a href="#第21题" class="headerlink" title="第21题"></a>第21题</h2><ul><li>题目描述：查找所有员工自入职以来的薪水涨幅情况，给出员工编号emp_no以及其对应的薪水涨幅growth，并按照growth进行升序</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employees`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`birth_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`first_name`</span> <span class="built_in">varchar</span>(<span class="number">14</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`last_name`</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`gender`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`hire_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th><th style="text-align:left">growth</th></tr></thead><tbody><tr><td style="text-align:left">10011</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">省略</td><td style="text-align:left">省略</td></tr><tr><td style="text-align:left">10010</td><td style="text-align:left">54496</td></tr><tr><td style="text-align:left">10004</td><td style="text-align:left">34003</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp_no,</span><br><span class="line">growth</span><br><span class="line"><span class="keyword">FROM</span>(<span class="keyword">SELECT</span></span><br><span class="line">a.emp_no,</span><br><span class="line">b.salary-a.salary <span class="keyword">AS</span> growth</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(<span class="keyword">SELECT</span></span><br><span class="line">t1.emp_no,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees <span class="keyword">AS</span> t1,</span><br><span class="line">salaries <span class="keyword">AS</span> t2</span><br><span class="line"><span class="keyword">WHERE</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">AND</span> t1.hire_date=t2.from_date) <span class="keyword">AS</span> a,</span><br><span class="line">(<span class="keyword">SELECT</span></span><br><span class="line">t1.emp_no,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees <span class="keyword">AS</span> t1,</span><br><span class="line">salaries <span class="keyword">AS</span> t2</span><br><span class="line"><span class="keyword">WHERE</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">AND</span> t2.to_date=<span class="string">'9999-01-01'</span>) <span class="keyword">AS</span> b</span><br><span class="line"><span class="keyword">WHERE</span> a.emp_no=b.emp_no)<span class="keyword">AS</span> c</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> c.growth</span><br></pre></td></tr></table></figure><h2 id="第22题"><a href="#第22题" class="headerlink" title="第22题"></a>第22题</h2><ul><li>对所有员工的当前(to_date=’9999-01-01’)薪水按照salary进行按照1-N的排名，相同salary并列且按照emp_no升序排列</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`salaries`</span> (</span><br><span class="line"><span class="string">`emp_no`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`from_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`to_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`emp_no`</span>,<span class="string">`from_date`</span>));</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">emp_no</th><th style="text-align:left">salary</th><th style="text-align:left">rank</th></tr></thead><tbody><tr><td style="text-align:left">10005</td><td style="text-align:left">94692</td><td style="text-align:left">1</td></tr><tr><td style="text-align:left">10009</td><td style="text-align:left">94409</td><td style="text-align:left">2</td></tr><tr><td style="text-align:left">10010</td><td style="text-align:left">94409</td><td style="text-align:left">2</td></tr><tr><td style="text-align:left">10001</td><td style="text-align:left">88958</td><td style="text-align:left">3</td></tr><tr><td style="text-align:left">10007</td><td style="text-align:left">88070</td><td style="text-align:left">4</td></tr><tr><td style="text-align:left">10004</td><td style="text-align:left">74057</td><td style="text-align:left">5</td></tr><tr><td style="text-align:left">10002</td><td style="text-align:left">72527</td><td style="text-align:left">6</td></tr><tr><td style="text-align:left">10003</td><td style="text-align:left">43311</td><td style="text-align:left">7</td></tr><tr><td style="text-align:left">10006</td><td style="text-align:left">43311</td><td style="text-align:left">7</td></tr><tr><td style="text-align:left">10011</td><td style="text-align:left">25828</td><td style="text-align:left">8</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp_no,</span><br><span class="line">growth</span><br><span class="line"><span class="keyword">FROM</span>(<span class="keyword">SELECT</span></span><br><span class="line">a.emp_no,</span><br><span class="line">b.salary-a.salary <span class="keyword">AS</span> growth</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(<span class="keyword">SELECT</span></span><br><span class="line">t1.emp_no,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees <span class="keyword">AS</span> t1,</span><br><span class="line">salaries <span class="keyword">AS</span> t2</span><br><span class="line"><span class="keyword">WHERE</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">AND</span> t1.hire_date=t2.from_date) <span class="keyword">AS</span> a,</span><br><span class="line">(<span class="keyword">SELECT</span></span><br><span class="line">t1.emp_no,</span><br><span class="line">salary</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">employees <span class="keyword">AS</span> t1,</span><br><span class="line">salaries <span class="keyword">AS</span> t2</span><br><span class="line"><span class="keyword">WHERE</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">AND</span> t2.to_date=<span class="string">'9999-01-01'</span>) <span class="keyword">AS</span> b</span><br><span class="line"><span class="keyword">WHERE</span> a.emp_no=b.emp_no)<span class="keyword">AS</span> c</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> c.growth</span><br></pre></td></tr></table></figure><ul><li>输出示例：</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">dept_no</th><th style="text-align:left">dept_name</th><th style="text-align:left">sum</th></tr></thead><tbody><tr><td style="text-align:left">d001</td><td style="text-align:left">Marketing</td><td style="text-align:left">24</td></tr><tr><td style="text-align:left">d002</td><td style="text-align:left">Finance</td><td style="text-align:left">14</td></tr><tr><td style="text-align:left">d003</td><td style="text-align:left">Human Resources</td><td style="text-align:left">13</td></tr><tr><td style="text-align:left">d004</td><td style="text-align:left">Production</td><td style="text-align:left">24</td></tr><tr><td style="text-align:left">d005</td><td style="text-align:left">Development</td><td style="text-align:left">25</td></tr><tr><td style="text-align:left">d006</td><td style="text-align:left">Quality Management</td><td style="text-align:left">25</td></tr></tbody></table></div><ul><li>答案：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    t1.dept_no,</span><br><span class="line">    t3.dept_name,</span><br><span class="line">    <span class="keyword">count</span>(t2.salary) <span class="keyword">as</span> <span class="keyword">sum</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">    dept_emp <span class="keyword">as</span> t1,</span><br><span class="line">    salaries <span class="keyword">as</span> t2,</span><br><span class="line">    departments <span class="keyword">as</span> t3</span><br><span class="line"><span class="keyword">where</span> t3.dept_no=t1.dept_no</span><br><span class="line"><span class="keyword">and</span> t1.emp_no=t2.emp_no</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> t1.dept_no</span><br></pre></td></tr></table></figure><h2 id="第22-61题"><a href="#第22-61题" class="headerlink" title="第22-61题"></a>第22-61题</h2><p>后面太多，就不罗列上去了，附上仓库地址</p><p><a href="https://github.com/impn/nowcoder/tree/master/%E6%95%B0%E6%8D%AE%E5%BA%93SQL%E5%AE%9E%E6%88%98" target="_blank">Github仓库</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;牛客网题目 &lt;a href=&quot;https://www.nowcoder.com/ta/sql&quot;&gt;https://www.nowcoder.com/ta/sql&lt;/a&gt;&lt;br&gt;共计61道题目，现已全部完成&lt;/p&gt;&lt;h2 id=&quot;第01题&quot;&gt;&lt;a href=&quot;#第01题&quot; cl
      
    
    </summary>
    
      <category term="SQL" scheme="https://mapan.tech/cn/categories/SQL/"/>
    
    
  </entry>
  
</feed>
